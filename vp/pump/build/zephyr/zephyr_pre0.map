Archive member included to satisfy reference by file (symbol)

app/libapp.a(main.c.obj)      (--whole-archive)
app/libapp.a(gpio.c.obj)      (--whole-archive)
zephyr/libzephyr.a(heap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(printk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(sem.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(thread_entry.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_complete.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(assert.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dec.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(hex.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rb.c.obj)  (--whole-archive)
zephyr/libzephyr.a(timeutil.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bitarray.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(configs.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp32-mp.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(loader.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(tracing_none.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(windowspill_asm.S.obj)
                              (--whole-archive)
zephyr/libzephyr.a(flash_ops.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_flash_api.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(flash_encrypt.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cache_esp32.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mmu_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(flash_mmap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(memspi_host_driver.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_mem.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_clock_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_console.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_random.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_sys.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mpu_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_esp32.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_common.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_common_loader.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(adc_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(i2s_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(gpio_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_io_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dport_access.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(flash_qio_mode.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_flash.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_efuse.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_soc.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cpu.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clk_ctrl_os.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mac_addr.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(periph_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_module.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(hw_random.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(sleep_modes.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cpu_region_protect.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_clk_tree.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_time.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(ext_mem_layout.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_mmu_map.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_crc.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_uart.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_efuse.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(system_internal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(reset_reason.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_err.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(system_time.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(efuse_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clk_tree_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(efuse_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_noos.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cache_utils.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(stubs.c.obj)
                              (--whole-archive)
zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                              (--whole-archive)
zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                              (--whole-archive)
zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                              (--whole-archive)
zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                              (--whole-archive)
zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                              (--whole-archive)
zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                              (--whole-archive)
zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                              (--whole-archive)
zephyr/kernel/libkernel.a(device.c.obj)
                              app/libapp.a(gpio.c.obj) (z_impl_device_is_ready)
zephyr/kernel/libkernel.a(errno.c.obj)
                              zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj) (z_impl_z_errno)
zephyr/kernel/libkernel.a(fatal.c.obj)
                              zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj) (z_fatal_error)
zephyr/kernel/libkernel.a(init.c.obj)
                              zephyr/libzephyr.a(soc.c.obj) (z_bss_zero)
zephyr/kernel/libkernel.a(init_static.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_init_static)
zephyr/kernel/libkernel.a(kheap.c.obj)
                              zephyr/libzephyr.a(heap_caps_zephyr.c.obj) (k_heap_aligned_alloc)
zephyr/kernel/libkernel.a(idle.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (idle)
zephyr/kernel/libkernel.a(mutex.c.obj)
                              zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj) (z_impl_k_mutex_init)
zephyr/kernel/libkernel.a(sem.c.obj)
                              zephyr/libzephyr.a(sem.c.obj) (z_impl_k_sem_init)
zephyr/kernel/libkernel.a(thread.c.obj)
                              zephyr/libzephyr.a(cache_utils.c.obj) (k_is_in_isr)
zephyr/kernel/libkernel.a(sched.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (_thread_dummy)
zephyr/kernel/libkernel.a(timeslicing.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_reset_time_slice)
zephyr/kernel/libkernel.a(timeout.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_add_timeout)
zephyr/kernel/libkernel.a(mempool.c.obj)
                              zephyr/libzephyr.a(flash_mmap.c.obj) (k_free)
zephyr/kernel/libkernel.a(banner.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (boot_banner)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
                              zephyr/libzephyr.a(flash_ops.c.obj) (__ashldi3)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
                              zephyr/libzephyr.a(esp_flash_api.c.obj) (__lshrdi3)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
                              zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj) (__bswapsi2)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
                              zephyr/libzephyr.a(spi_flash_chip_generic.c.obj) (__bswapdi2)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
                              zephyr/libzephyr.a(rtc_clk.c.obj) (__divsf3)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                              zephyr/libzephyr.a(spi_flash_hal.c.obj) (__adddf3)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__muldf3)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdf3)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
                              zephyr/libzephyr.a(spi_flash_hal.c.obj) (__fixdfsi)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__fixdfdi)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatunsidf)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatundidf)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__truncdfsf2)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__extendsfdf2)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
                              zephyr/libzephyr.a(cpu.c.obj) (__ffsdi2)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                              zephyr/libzephyr.a(bitarray.c.obj) (__popcountsi2)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdi3)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__udivdi3)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__umoddi3)
zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                              zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj) (_sw_isr_table)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
                              zephyr/libzephyr.a(heap.c.obj) (memcpy)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
                              zephyr/libzephyr.a(heap.c.obj) (memset)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_setjmp.S.o)
                              zephyr/libzephyr.a(esp_rom_longjmp.S.obj) (longjmp)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                              zephyr/libzephyr.a(log.c.obj) (strcmp)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                              zephyr/libzephyr.a(cbprintf_packaged.c.obj) (strlen)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
                              zephyr/libzephyr.a(esp_flash_api.c.obj) (memcmp)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strcspn.c.o)
                              zephyr/libzephyr.a(bootloader_common.c.obj) (strcspn)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (strnlen)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strstr.c.o)
                              zephyr/libzephyr.a(bootloader_common.c.obj) (strstr)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                              zephyr/libzephyr.a(esp_mmu_map.c.obj) (fprintf)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
                              zephyr/libzephyr.a(esp_mmu_map.c.obj) (fputc)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
                              zephyr/libzephyr.a(esp_mmu_map.c.obj) (fputs)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
                              zephyr/libzephyr.a(heap_caps_zephyr.c.obj) (printf)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                              zephyr/libzephyr.a(esp_mmu_map.c.obj) (snprintf)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                              (__l_vfprintf)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                              (__l_vfscanf)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                              zephyr/libzephyr.a(log.c.obj) (vprintf)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
                              /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (strchr)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                              /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (fgetc)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
                              /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o) (__file_str_put)
/home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                              /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (ungetc)

Discarded input sections

 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_line    0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_str     0x0000000000000000      0x171 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .comment       0x0000000000000000       0x21 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .text          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .data          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .bss           0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .literal.relay_off
                0x0000000000000000        0x8 app/libapp.a(gpio.c.obj)
 .literal.powerLED_off
                0x0000000000000000        0x8 app/libapp.a(gpio.c.obj)
 .literal.debugLED_off
                0x0000000000000000        0x8 app/libapp.a(gpio.c.obj)
 .text          0x0000000000000000        0x0 app/libapp.a(gpio.c.obj)
 .data          0x0000000000000000        0x0 app/libapp.a(gpio.c.obj)
 .bss           0x0000000000000000        0x0 app/libapp.a(gpio.c.obj)
 .text.relay_off
                0x0000000000000000       0x10 app/libapp.a(gpio.c.obj)
 .text.powerLED_off
                0x0000000000000000       0x10 app/libapp.a(gpio.c.obj)
 .text.debugLED_off
                0x0000000000000000       0x10 app/libapp.a(gpio.c.obj)
 .literal.sys_heap_usable_size
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap.c.obj)
 .literal.sys_heap_aligned_realloc
                0x0000000000000000       0x44 zephyr/libzephyr.a(heap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_usable_size
                0x0000000000000000       0x24 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_aligned_realloc
                0x0000000000000000      0x154 zephyr/libzephyr.a(heap.c.obj)
 .literal.cbvprintf_package
                0x0000000000000000       0x1c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbpprintf_external
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package_convert
                0x0000000000000000       0x2c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbvprintf_package
                0x0000000000000000      0x425 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .rodata.cbvprintf_package
                0x0000000000000000       0xbc zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package
                0x0000000000000000       0x2d zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbpprintf_external
                0x0000000000000000       0x74 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.is_ptr   0x0000000000000000       0x5e zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package_convert
                0x0000000000000000      0x37a zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_info    0x0000000000000000     0x147c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_abbrev  0x0000000000000000      0x4cb zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_loc     0x0000000000000000     0x1ae5 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_ranges  0x0000000000000000      0x258 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_line    0x0000000000000000     0x212f zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_str     0x0000000000000000      0x75c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.__printk_get_hook
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_impl_k_str_out
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .text.arch_printk_char_out
                0x0000000000000000        0x7 zephyr/libzephyr.a(printk.c.obj)
 .text.__printk_get_hook
                0x0000000000000000        0xa zephyr/libzephyr.a(printk.c.obj)
 .text.z_impl_k_str_out
                0x0000000000000000       0x1d zephyr/libzephyr.a(printk.c.obj)
 .literal.sys_sem_init
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_give
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_take
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_give
                0x0000000000000000       0x10 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_take
                0x0000000000000000       0x30 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_count_get
                0x0000000000000000        0x7 zephyr/libzephyr.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(sem.c.obj)
 .debug_info    0x0000000000000000      0x4cf zephyr/libzephyr.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x227 zephyr/libzephyr.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x159 zephyr/libzephyr.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(sem.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x46e zephyr/libzephyr.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x36f zephyr/libzephyr.a(sem.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .literal.encode_uint
                0x0000000000000000        0x8 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .literal.z_cbvprintf_impl
                0x0000000000000000       0x3c zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.encode_uint
                0x0000000000000000       0xb8 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.outs     0x0000000000000000       0x2d zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl.str1.1
                0x0000000000000000        0x6 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.z_cbvprintf_impl
                0x0000000000000000      0x98d zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl
                0x0000000000000000       0x58 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_frame   0x0000000000000000       0x58 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_info    0x0000000000000000     0x1097 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_abbrev  0x0000000000000000      0x433 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_loc     0x0000000000000000     0x13fd zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_ranges  0x0000000000000000      0x150 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_line    0x0000000000000000     0x1c18 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_str     0x0000000000000000      0x656 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .literal.assert_post_action
                0x0000000000000000        0x4 zephyr/libzephyr.a(assert.c.obj)
 .literal.assert_print
                0x0000000000000000        0x4 zephyr/libzephyr.a(assert.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .text.assert_post_action
                0x0000000000000000        0xc zephyr/libzephyr.a(assert.c.obj)
 .text.assert_print
                0x0000000000000000       0x26 zephyr/libzephyr.a(assert.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(assert.c.obj)
 .debug_info    0x0000000000000000      0x1ba zephyr/libzephyr.a(assert.c.obj)
 .debug_abbrev  0x0000000000000000      0x12d zephyr/libzephyr.a(assert.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(assert.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(assert.c.obj)
 .debug_line    0x0000000000000000      0x248 zephyr/libzephyr.a(assert.c.obj)
 .debug_str     0x0000000000000000      0x316 zephyr/libzephyr.a(assert.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(assert.c.obj)
 .literal.u8_to_dec
                0x0000000000000000        0x4 zephyr/libzephyr.a(dec.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .text.u8_to_dec
                0x0000000000000000       0x6e zephyr/libzephyr.a(dec.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(dec.c.obj)
 .debug_info    0x0000000000000000      0x12b zephyr/libzephyr.a(dec.c.obj)
 .debug_abbrev  0x0000000000000000       0x9c zephyr/libzephyr.a(dec.c.obj)
 .debug_loc     0x0000000000000000      0x13d zephyr/libzephyr.a(dec.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(dec.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(dec.c.obj)
 .debug_line    0x0000000000000000      0x2c0 zephyr/libzephyr.a(dec.c.obj)
 .debug_str     0x0000000000000000      0x246 zephyr/libzephyr.a(dec.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(dec.c.obj)
 .literal.bin2hex
                0x0000000000000000        0x8 zephyr/libzephyr.a(hex.c.obj)
 .literal.hex2bin
                0x0000000000000000        0xc zephyr/libzephyr.a(hex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .text.char2hex
                0x0000000000000000       0x3e zephyr/libzephyr.a(hex.c.obj)
 .text.hex2char
                0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .text.bin2hex  0x0000000000000000       0x4e zephyr/libzephyr.a(hex.c.obj)
 .text.hex2bin  0x0000000000000000       0x70 zephyr/libzephyr.a(hex.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(hex.c.obj)
 .debug_info    0x0000000000000000      0x2a7 zephyr/libzephyr.a(hex.c.obj)
 .debug_abbrev  0x0000000000000000      0x119 zephyr/libzephyr.a(hex.c.obj)
 .debug_loc     0x0000000000000000      0x27b zephyr/libzephyr.a(hex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(hex.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .debug_line    0x0000000000000000      0x569 zephyr/libzephyr.a(hex.c.obj)
 .debug_str     0x0000000000000000      0x24d zephyr/libzephyr.a(hex.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(hex.c.obj)
 .literal.rotate
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_insert
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_remove
                0x0000000000000000       0x28 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_walk
                0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_foreach_next
                0x0000000000000000        0x4 zephyr/libzephyr.a(rb.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .text.find_and_stack
                0x0000000000000000       0x36 zephyr/libzephyr.a(rb.c.obj)
 .text.stack_left_limb
                0x0000000000000000       0x4d zephyr/libzephyr.a(rb.c.obj)
 .text.set_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.rotate   0x0000000000000000       0x80 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_get_minmax
                0x0000000000000000       0x23 zephyr/libzephyr.a(rb.c.obj)
 .text.rb_insert
                0x0000000000000000      0x14b zephyr/libzephyr.a(rb.c.obj)
 .text.rb_remove
                0x0000000000000000      0x343 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_walk
                0x0000000000000000       0x23 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_is_black
                0x0000000000000000        0xa zephyr/libzephyr.a(rb.c.obj)
 .text.rb_contains
                0x0000000000000000       0x31 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_foreach_next
                0x0000000000000000       0x63 zephyr/libzephyr.a(rb.c.obj)
 .debug_frame   0x0000000000000000      0x130 zephyr/libzephyr.a(rb.c.obj)
 .debug_info    0x0000000000000000     0x23e5 zephyr/libzephyr.a(rb.c.obj)
 .debug_abbrev  0x0000000000000000      0x491 zephyr/libzephyr.a(rb.c.obj)
 .debug_loc     0x0000000000000000     0x2375 zephyr/libzephyr.a(rb.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 zephyr/libzephyr.a(rb.c.obj)
 .debug_ranges  0x0000000000000000      0x548 zephyr/libzephyr.a(rb.c.obj)
 .debug_line    0x0000000000000000     0x2853 zephyr/libzephyr.a(rb.c.obj)
 .debug_str     0x0000000000000000      0x43d zephyr/libzephyr.a(rb.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(rb.c.obj)
 .literal.timeutil_timegm64
                0x0000000000000000       0x14 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_timegm
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_update
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_set_skew
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_estimate_skew
                0x0000000000000000       0x24 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_ref_from_local
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_local_from_ref
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x20 zephyr/libzephyr.a(timeutil.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm64
                0x0000000000000000      0x122 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_update
                0x0000000000000000       0x76 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_set_skew
                0x0000000000000000       0x40 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_estimate_skew
                0x0000000000000000       0xc6 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_ref_from_local
                0x0000000000000000       0xc0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_local_from_ref
                0x0000000000000000       0xbe zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x3e zephyr/libzephyr.a(timeutil.c.obj)
 .debug_frame   0x0000000000000000       0xd0 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_info    0x0000000000000000      0x882 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_abbrev  0x0000000000000000      0x1fd zephyr/libzephyr.a(timeutil.c.obj)
 .debug_loc     0x0000000000000000      0x765 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_aranges
                0x0000000000000000       0x58 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_ranges  0x0000000000000000       0x68 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_line    0x0000000000000000      0xbd0 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_str     0x0000000000000000      0x4ea zephyr/libzephyr.a(timeutil.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.set_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.match_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.is_region_set_clear
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_popcount_region
                0x0000000000000000       0x10 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_xor
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_alloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_find_nth_set
                0x0000000000000000       0x10 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_free
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_set
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_cleared
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_test_and_set_region
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.setup_bundle_data$constprop$0
                0x0000000000000000       0x3f zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_region
                0x0000000000000000       0xa0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_clear_region
                0x0000000000000000       0x4e zephyr/libzephyr.a(bitarray.c.obj)
 .text.match_region
                0x0000000000000000       0xba zephyr/libzephyr.a(bitarray.c.obj)
 .text.is_region_set_clear
                0x0000000000000000       0x4e zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_popcount_region
                0x0000000000000000       0x9a zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_xor
                0x0000000000000000       0xac zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_clear_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_alloc
                0x0000000000000000       0xa2 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_find_nth_set
                0x0000000000000000       0xca zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_free
                0x0000000000000000       0x62 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_set
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_cleared
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_region
                0x0000000000000000       0x6a zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_frame   0x0000000000000000      0x1f0 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_info    0x0000000000000000     0x19f5 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_abbrev  0x0000000000000000      0x42f zephyr/libzephyr.a(bitarray.c.obj)
 .debug_loc     0x0000000000000000     0x1188 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_aranges
                0x0000000000000000       0xb8 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_ranges  0x0000000000000000      0x108 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_line    0x0000000000000000     0x241a zephyr/libzephyr.a(bitarray.c.obj)
 .debug_str     0x0000000000000000      0x5da zephyr/libzephyr.a(bitarray.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .literal.sys_arch_reboot
                0x0000000000000000        0x4 zephyr/libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .text.sys_arch_reboot
                0x0000000000000000        0x9 zephyr/libzephyr.a(soc.c.obj)
 .literal.esp_appcpu_start
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text.smp_log  0x0000000000000000        0x5 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text.esp_appcpu_start
                0x0000000000000000       0xa4 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_info    0x0000000000000000      0x1f7 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_abbrev  0x0000000000000000      0x12f zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_line    0x0000000000000000      0x2d5 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_str     0x0000000000000000      0x2df zephyr/libzephyr.a(esp32-mp.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .entry_addr    0x0000000000000000        0x4 zephyr/libzephyr.a(loader.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_enter
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit_to_scheduler
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .iram1.9.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_ops.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_ops.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_ops.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(flash_ops.c.obj)
 .iram1.9       0x0000000000000000        0xa zephyr/libzephyr.a(flash_ops.c.obj)
 .iram1.12      0x0000000000000000        0x5 zephyr/libzephyr.a(flash_ops.c.obj)
 .dram1.7       0x0000000000000000        0x8 zephyr/libzephyr.a(flash_ops.c.obj)
 .iram1.11.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.find_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_read_id
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_read_unique_chip_id
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.8.literal
                0x0000000000000000       0x4c zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.14.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.16.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.15.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.17.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.18.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_get_protectable_regions
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.19.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.20.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.22.literal
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.27.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.24.literal
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.28.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.29.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_suspend_cmd_init
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_app_disable_protect
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.11      0x0000000000000000       0x30 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.find_region
                0x0000000000000000       0x39 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.7       0x0000000000000000        0xe zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_read_id
                0x0000000000000000       0x32 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_read_unique_chip_id
                0x0000000000000000       0x74 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.8       0x0000000000000000      0x124 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.14      0x0000000000000000       0x38 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.16      0x0000000000000000      0x1d4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.15      0x0000000000000000       0x44 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.17      0x0000000000000000       0x48 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.18      0x0000000000000000       0x48 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_get_protectable_regions
                0x0000000000000000       0x54 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.19      0x0000000000000000       0x8c zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.20      0x0000000000000000       0x9d zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.22      0x0000000000000000      0x148 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.27      0x0000000000000000       0x6e zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.24      0x0000000000000000      0x180 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.28      0x0000000000000000       0x58 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.29      0x0000000000000000       0x4c zephyr/libzephyr.a(esp_flash_api.c.obj)
 .rodata.esp_flash_suspend_cmd_init.str1.1
                0x0000000000000000       0x78 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_suspend_cmd_init
                0x0000000000000000       0x5a zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_app_disable_protect
                0x0000000000000000       0x22 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.25      0x0000000000000000       0x1b zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.23      0x0000000000000000       0x1b zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_write_protect_crypt_cnt
                0x0000000000000000        0x8 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_get_flash_encryption_mode
                0x0000000000000000       0x2c zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_encryption_set_release_mode
                0x0000000000000000       0x70 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_encryption_cfg_verify_release_mode
                0x0000000000000000       0xe4 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .iram1.0       0x0000000000000000        0xd zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_write_protect_crypt_cnt
                0x0000000000000000        0xe zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text.esp_get_flash_encryption_mode
                0x0000000000000000       0x72 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .rodata.esp_flash_encryption_set_release_mode.str1.1
                0x0000000000000000       0xb0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_encryption_set_release_mode
                0x0000000000000000       0xc3 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .rodata.esp_flash_encryption_cfg_verify_release_mode.str1.1
                0x0000000000000000      0x342 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_encryption_cfg_verify_release_mode
                0x0000000000000000      0x1ba zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_info    0x0000000000000000      0x8f6 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_abbrev  0x0000000000000000      0x298 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_loc     0x0000000000000000      0x159 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_line    0x0000000000000000      0xe78 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_str     0x0000000000000000      0x79e zephyr/libzephyr.a(flash_encrypt.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_gpio_is_pin_reserved
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .text.esp_gpio_is_pin_reserved
                0x0000000000000000       0x1e zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .literal.cache_register_writeback
                0x0000000000000000        0x4 zephyr/libzephyr.a(cache_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cache_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cache_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cache_esp32.c.obj)
 .text.cache_register_writeback
                0x0000000000000000        0xc zephyr/libzephyr.a(cache_esp32.c.obj)
 .literal.mmu_hal_init
                0x0000000000000000        0x4 zephyr/libzephyr.a(mmu_hal.c.obj)
 .literal.mmu_hal_map_region
                0x0000000000000000       0x1c zephyr/libzephyr.a(mmu_hal.c.obj)
 .literal.mmu_hal_unmap_region
                0x0000000000000000       0x1c zephyr/libzephyr.a(mmu_hal.c.obj)
 .literal.mmu_hal_vaddr_to_paddr
                0x0000000000000000       0x14 zephyr/libzephyr.a(mmu_hal.c.obj)
 .literal.mmu_hal_paddr_to_vaddr
                0x0000000000000000        0x4 zephyr/libzephyr.a(mmu_hal.c.obj)
 .literal.mmu_hal_check_valid_ext_vaddr_region
                0x0000000000000000       0x20 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mmu_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mmu_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_init
                0x0000000000000000        0xb zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_pages_to_bytes
                0x0000000000000000        0x8 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_bytes_to_pages
                0x0000000000000000        0x8 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_map_region
                0x0000000000000000       0xd1 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_unmap_region
                0x0000000000000000       0xc5 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_vaddr_to_paddr
                0x0000000000000000       0xbb zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_paddr_to_vaddr
                0x0000000000000000       0xeb zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_check_valid_ext_vaddr_region
                0x0000000000000000       0xb0 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.spi_bus_remove_flash_device
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.spi_bus_add_flash_device
                0x0000000000000000       0x60 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.esp_flash_app_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .iram1.0       0x0000000000000000      0x103 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .text.spi_bus_remove_flash_device
                0x0000000000000000       0x36 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .rodata.spi_bus_add_flash_device.str1.1
                0x0000000000000000       0x80 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .text.spi_bus_add_flash_device
                0x0000000000000000      0x16d zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .text.esp_flash_app_init
                0x0000000000000000       0x1f zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.spi_flash_mmap
                0x0000000000000000       0x14 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_mmap_pages
                0x0000000000000000       0x28 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_munmap
                0x0000000000000000       0x10 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_mmap_dump
                0x0000000000000000        0x8 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_mmap_get_free_pages
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_cache2phys
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_phys2cache
                0x0000000000000000        0x8 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap
                0x0000000000000000       0x90 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap_pages
                0x0000000000000000      0x166 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_munmap
                0x0000000000000000       0x3a zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap_dump
                0x0000000000000000       0x10 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap_get_free_pages
                0x0000000000000000       0x21 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_cache2phys
                0x0000000000000000       0x23 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_phys2cache
                0x0000000000000000       0x2e zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.memspi_host_erase_chip
                0x0000000000000000        0x4 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .literal.memspi_host_erase_sector
                0x0000000000000000        0xc zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .literal.memspi_host_erase_block
                0x0000000000000000        0xc zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .literal.memspi_host_program_page
                0x0000000000000000        0x8 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .literal.memspi_host_read
                0x0000000000000000        0x4 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .literal.memspi_host_set_write_protect
                0x0000000000000000        0x4 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text.memspi_host_erase_chip
                0x0000000000000000       0x23 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text.memspi_host_erase_sector
                0x0000000000000000       0x36 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text.memspi_host_erase_block
                0x0000000000000000       0x36 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text.memspi_host_program_page
                0x0000000000000000       0x3e zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text.memspi_host_read
                0x0000000000000000       0x30 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text.memspi_host_set_write_protect
                0x0000000000000000       0x2c zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .text.spi_flash_chip_boya_probe
                0x0000000000000000       0x22 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .text.spi_flash_chip_boya_get_caps
                0x0000000000000000        0x7 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .rodata.esp_flash_chip_boya
                0x0000000000000000       0x7c zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .rodata.chip_name
                0x0000000000000000        0x5 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_info    0x0000000000000000      0xf03 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_abbrev  0x0000000000000000      0x1d8 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_loc     0x0000000000000000       0xc3 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_line    0x0000000000000000      0x416 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_str     0x0000000000000000      0xc16 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .literal.spi_flash_chip_mxic_opi_detect_size
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_set_write_protect
                0x0000000000000000        0xc zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_erase_chip
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_erase_sector
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_erase_block
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_xmic_opi_config_host_io_mode
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_get_data_length_zoom
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_read_id
                0x0000000000000000       0x20 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_read_reg
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_get_io_mode
                0x0000000000000000        0xc zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_get_write_protect
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_write
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .literal.spi_flash_chip_mxic_opi_page_program
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_probe
                0x0000000000000000       0x20 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_detect_size
                0x0000000000000000       0x2d zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_get_caps
                0x0000000000000000        0x7 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_set_write_protect
                0x0000000000000000       0x6c zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_erase_chip
                0x0000000000000000       0x84 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_erase_sector
                0x0000000000000000       0x89 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_erase_block
                0x0000000000000000       0x89 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_xmic_opi_set_io_mode
                0x0000000000000000        0x7 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_xmic_opi_config_host_io_mode
                0x0000000000000000       0x34 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_get_data_length_zoom
                0x0000000000000000       0x1a zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .rodata.spi_flash_chip_mxic_opi_read_id.str1.1
                0x0000000000000000       0x19 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_read_id
                0x0000000000000000       0xcb zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_read_reg
                0x0000000000000000       0x54 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_get_io_mode
                0x0000000000000000       0x68 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_get_write_protect
                0x0000000000000000       0x2c zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_write
                0x0000000000000000       0x82 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text.spi_flash_chip_mxic_opi_page_program
                0x0000000000000000       0x81 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .rodata.esp_flash_chip_mxic_opi
                0x0000000000000000       0x7c zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .rodata.chip_name
                0x0000000000000000        0xb zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_frame   0x0000000000000000      0x190 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_info    0x0000000000000000     0x19fb zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_abbrev  0x0000000000000000      0x3fc zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_loc     0x0000000000000000      0x7c9 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_aranges
                0x0000000000000000       0x98 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_ranges  0x0000000000000000       0xa0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_line    0x0000000000000000     0x14f7 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_str     0x0000000000000000      0xf71 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .text.spi_flash_chip_th_probe
                0x0000000000000000       0x22 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .text.spi_flash_chip_th_get_caps
                0x0000000000000000        0x7 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .rodata.esp_flash_chip_th
                0x0000000000000000       0x7c zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .rodata.chip_name
                0x0000000000000000        0x3 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_info    0x0000000000000000      0xf03 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_abbrev  0x0000000000000000      0x1d8 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_loc     0x0000000000000000       0xc3 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_line    0x0000000000000000      0x414 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_str     0x0000000000000000      0xc0e zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .iram1.11.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.9       0x0000000000000000        0x7 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.11      0x0000000000000000        0xc zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .literal.uart_hal_set_sw_flow_ctrl
                0x0000000000000000        0xc zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_at_cmd_char
                0x0000000000000000        0x8 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_tx_idle_num
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_loop_back
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_init
                0x0000000000000000       0x10 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_port_num
                0x0000000000000000        0xc zephyr/libzephyr.a(uart_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_sw_flow_ctrl
                0x0000000000000000       0xfd zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_at_cmd_char
                0x0000000000000000       0xaf zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_tx_idle_num
                0x0000000000000000       0x22 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_dtr
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_wakeup_thrd
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_wakeup_thrd
                0x0000000000000000       0x13 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_is_hw_rts_en
                0x0000000000000000        0xf zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_loop_back
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_init
                0x0000000000000000       0xca zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000       0x26 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_port_num
                0x0000000000000000       0x26 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_txfifo_rst
                0x0000000000000000        0x8 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.uart_hal_tx_break
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_txfifo_rst
                0x0000000000000000       0x2f zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_tx_break
                0x0000000000000000       0x56 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_console.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_console.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_console.c.obj)
 .literal.bootloader_fill_random
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_random.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_random.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_random.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_random.c.obj)
 .text.bootloader_fill_random
                0x0000000000000000       0x47 zephyr/libzephyr.a(bootloader_random.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(bootloader_random.c.obj)
 .debug_info    0x0000000000000000      0x21e zephyr/libzephyr.a(bootloader_random.c.obj)
 .debug_abbrev  0x0000000000000000      0x137 zephyr/libzephyr.a(bootloader_random.c.obj)
 .debug_loc     0x0000000000000000       0x93 zephyr/libzephyr.a(bootloader_random.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(bootloader_random.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/libzephyr.a(bootloader_random.c.obj)
 .debug_line    0x0000000000000000      0x50a zephyr/libzephyr.a(bootloader_random.c.obj)
 .debug_str     0x0000000000000000      0x30a zephyr/libzephyr.a(bootloader_random.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(bootloader_random.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .iram1.0       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mpu_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mpu_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mpu_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .literal.bootloader_clear_bss_section
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_init.c.obj)
 .text.bootloader_clear_bss_section
                0x0000000000000000       0x16 zephyr/libzephyr.a(bootloader_init.c.obj)
 .literal.bootloader_common_check_long_hold_gpio_level
                0x0000000000000000       0x1c zephyr/libzephyr.a(bootloader_common.c.obj)
 .literal.bootloader_common_check_long_hold_gpio
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_common.c.obj)
 .literal.bootloader_common_label_search
                0x0000000000000000       0x18 zephyr/libzephyr.a(bootloader_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_common.c.obj)
 .text.bootloader_common_check_long_hold_gpio_level
                0x0000000000000000       0xc6 zephyr/libzephyr.a(bootloader_common.c.obj)
 .text.bootloader_common_check_long_hold_gpio
                0x0000000000000000       0x14 zephyr/libzephyr.a(bootloader_common.c.obj)
 .rodata.bootloader_common_label_search.str1.1
                0x0000000000000000        0x3 zephyr/libzephyr.a(bootloader_common.c.obj)
 .text.bootloader_common_label_search
                0x0000000000000000       0xae zephyr/libzephyr.a(bootloader_common.c.obj)
 .literal.bootloader_common_ota_select_crc
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .literal.bootloader_common_ota_select_valid
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .literal.bootloader_common_get_active_otadata
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_ota_select_crc
                0x0000000000000000       0x14 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_ota_select_invalid
                0x0000000000000000       0x19 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_ota_select_valid
                0x0000000000000000       0x26 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_select_otadata
                0x0000000000000000       0x4a zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_get_active_otadata
                0x0000000000000000       0x30 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .rodata.adc_channel_io_map
                0x0000000000000000       0x50 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_info    0x0000000000000000       0x9e zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_abbrev  0x0000000000000000       0x61 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_line    0x0000000000000000       0xe5 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_str     0x0000000000000000      0x227 zephyr/libzephyr.a(adc_periph.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(adc_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
 .rodata.i2s_periph_signal
                0x0000000000000000       0x20 zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_info    0x0000000000000000      0x2b7 zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_abbrev  0x0000000000000000       0xe4 zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_line    0x0000000000000000      0x22d zephyr/libzephyr.a(i2s_periph.c.obj)
 .debug_str     0x0000000000000000      0x5cc zephyr/libzephyr.a(i2s_periph.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(i2s_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .rodata.GPIO_HOLD_MASK
                0x0000000000000000       0xa0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .iram1.0       0x0000000000000000        0xa zephyr/libzephyr.a(dport_access.c.obj)
 .iram1.1       0x0000000000000000        0xa zephyr/libzephyr.a(dport_access.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_info    0x0000000000000000       0xde zephyr/libzephyr.a(dport_access.c.obj)
 .debug_abbrev  0x0000000000000000       0x87 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_loc     0x0000000000000000       0x4a zephyr/libzephyr.a(dport_access.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_line    0x0000000000000000      0x1ae zephyr/libzephyr.a(dport_access.c.obj)
 .debug_str     0x0000000000000000      0x267 zephyr/libzephyr.a(dport_access.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(dport_access.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.7.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.8.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.9.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .literal.bootloader_enable_qio_mode
                0x0000000000000000       0x50 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.6.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.0       0x0000000000000000       0x15 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.1       0x0000000000000000       0x15 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.3       0x0000000000000000       0x29 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.4       0x0000000000000000       0x13 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.5       0x0000000000000000       0x13 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.7       0x0000000000000000       0x13 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.8       0x0000000000000000       0x3a zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.9       0x0000000000000000       0x42 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .rodata.bootloader_enable_qio_mode.str1.1
                0x0000000000000000       0x99 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .text.bootloader_enable_qio_mode
                0x0000000000000000      0x15a zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.2       0x0000000000000000       0x15 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.6       0x0000000000000000       0x13 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x22 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .rodata.bootloader_flash_qe_support_list
                0x0000000000000000       0x7e zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_frame   0x0000000000000000      0x118 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_info    0x0000000000000000      0x9fa zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_abbrev  0x0000000000000000      0x2b7 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_loc     0x0000000000000000      0x161 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_aranges
                0x0000000000000000       0x70 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_ranges  0x0000000000000000       0x80 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_line    0x0000000000000000      0xaad zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_str     0x0000000000000000      0x9a6 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .literal.bootloader_mmap
                0x0000000000000000       0x50 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_munmap
                0x0000000000000000       0x14 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_erase_sector
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_erase_range
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_write
                0x0000000000000000       0x34 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_spi_flash_reset
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .iram1.18.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_mmap_get_free_pages
                0x0000000000000000        0x7 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_mmap
                0x0000000000000000       0xd7 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_munmap
                0x0000000000000000       0x32 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_erase_sector
                0x0000000000000000       0x1c zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_erase_range
                0x0000000000000000       0x60 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .rodata.bootloader_flash_write.str1.1
                0x0000000000000000       0xc6 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_write
                0x0000000000000000       0x9e zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_spi_flash_reset
                0x0000000000000000       0x23 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .iram1.18      0x0000000000000000       0x9e zephyr/libzephyr.a(bootloader_flash.c.obj)
 .iram1.19      0x0000000000000000        0x7 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .bss.mapped    0x0000000000000000        0x1 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_update_size
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.7.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .literal.bootloader_configure_spi_pins
                0x0000000000000000       0x4c zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .text.bootloader_flash_update_size
                0x0000000000000000        0xa zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.7       0x0000000000000000       0x28 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .text.bootloader_configure_spi_pins
                0x0000000000000000      0x174 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .rodata.CSWTCH$24
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .literal.esp_cpu_stall
                0x0000000000000000        0xc zephyr/libzephyr.a(cpu.c.obj)
 .literal.esp_cpu_unstall
                0x0000000000000000        0xc zephyr/libzephyr.a(cpu.c.obj)
 .literal.esp_cpu_reset
                0x0000000000000000        0x8 zephyr/libzephyr.a(cpu.c.obj)
 .literal.esp_cpu_set_watchpoint
                0x0000000000000000        0x4 zephyr/libzephyr.a(cpu.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_stall
                0x0000000000000000       0x7b zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_unstall
                0x0000000000000000       0x49 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_reset
                0x0000000000000000       0x25 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_wait_for_intr
                0x0000000000000000        0x8 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_set_breakpoint
                0x0000000000000000       0x24 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_clear_breakpoint
                0x0000000000000000       0x27 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_set_watchpoint
                0x0000000000000000       0x58 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_clear_watchpoint
                0x0000000000000000       0x1b zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_compare_and_set
                0x0000000000000000       0x15 zephyr/libzephyr.a(cpu.c.obj)
 .literal.periph_rtc_dig_clk8m_enable
                0x0000000000000000       0x18 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .literal.periph_rtc_dig_clk8m_get_freq
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .literal.periph_rtc_dig_clk8m_disable
                0x0000000000000000       0x14 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .literal.periph_rtc_apll_acquire
                0x0000000000000000        0xc zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .literal.periph_rtc_apll_release
                0x0000000000000000       0x14 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .literal.periph_rtc_apll_freq_set
                0x0000000000000000       0x2c zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_dig_clk8m_enable
                0x0000000000000000       0x50 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_dig_clk8m_get_freq
                0x0000000000000000        0xa zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_dig_clk8m_disable
                0x0000000000000000       0x38 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_apll_acquire
                0x0000000000000000       0x27 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_apll_release
                0x0000000000000000       0x34 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .rodata.periph_rtc_apll_freq_set.str1.1
                0x0000000000000000       0x43 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_apll_freq_set
                0x0000000000000000       0x91 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .rodata.__FUNCTION__$0
                0x0000000000000000       0x19 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .bss.s_apll_ref_cnt
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .bss.s_cur_apll_freq
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .bss.s_rc_fast_freq
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .bss.s_periph_ref_counts
                0x0000000000000000        0x1 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .bss.periph_spinlock
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_frame   0x0000000000000000       0xa0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_info    0x0000000000000000      0x713 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_abbrev  0x0000000000000000      0x297 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_loc     0x0000000000000000      0x1a5 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_aranges
                0x0000000000000000       0x48 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_ranges  0x0000000000000000       0x50 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_line    0x0000000000000000      0xba2 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_str     0x0000000000000000      0x833 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .literal.calc_checksum
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_rtc_get_time_us
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_slowclk_cal_get
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_private_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_private_unlock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.calc_checksum
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.1       0x0000000000000000       0x10 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.3       0x0000000000000000       0x11 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_rtc_get_time_us
                0x0000000000000000       0xb8 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_slowclk_cal_get
                0x0000000000000000        0xd zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_rtc_time
                0x0000000000000000        0x9 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_private_lock
                0x0000000000000000        0xd zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_private_unlock
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_clk.c.obj)
 .data.first_call$0
                0x0000000000000000        0x1 zephyr/libzephyr.a(esp_clk.c.obj)
 .rtc_timer_data_in_rtc_mem
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_clk.c.obj)
 .bss.s_esp_rtc_time_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.get_idx
                0x0000000000000000       0x14 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.get_efuse_mac_custom
                0x0000000000000000       0x38 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.get_efuse_mac_get_default
                0x0000000000000000       0x30 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.get_mac_addr_from_mac_table
                0x0000000000000000       0x20 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_mac_addr_len_get
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_iface_mac_addr_set
                0x0000000000000000       0x2c zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_base_mac_addr_set
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_custom
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_default
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_derive_local_mac
                0x0000000000000000       0x14 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_read_mac
                0x0000000000000000       0x58 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_base_mac_addr_get
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.get_idx.str1.1
                0x0000000000000000       0x3c zephyr/libzephyr.a(mac_addr.c.obj)
 .text.get_idx  0x0000000000000000       0x36 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.get_efuse_mac_custom.str1.1
                0x0000000000000000       0x9a zephyr/libzephyr.a(mac_addr.c.obj)
 .text.get_efuse_mac_custom
                0x0000000000000000       0x86 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.get_efuse_mac_get_default.str1.1
                0x0000000000000000       0x61 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.get_efuse_mac_get_default
                0x0000000000000000       0xab zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.get_mac_addr_from_mac_table.str1.1
                0x0000000000000000       0x3a zephyr/libzephyr.a(mac_addr.c.obj)
 .text.get_mac_addr_from_mac_table
                0x0000000000000000       0x8a zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_mac_addr_len_get
                0x0000000000000000       0x24 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.esp_iface_mac_addr_set.str1.1
                0x0000000000000000       0x85 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_iface_mac_addr_set
                0x0000000000000000       0x90 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_set
                0x0000000000000000       0x11 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_custom
                0x0000000000000000       0x10 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_default
                0x0000000000000000       0x10 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_derive_local_mac
                0x0000000000000000       0x62 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.esp_read_mac.str1.1
                0x0000000000000000       0x75 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_read_mac
                0x0000000000000000      0x114 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_get
                0x0000000000000000       0x11 zephyr/libzephyr.a(mac_addr.c.obj)
 .data.s_mac_table
                0x0000000000000000       0x28 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_frame   0x0000000000000000      0x130 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_info    0x0000000000000000      0xd8e zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_abbrev  0x0000000000000000      0x3cd zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_loc     0x0000000000000000      0x859 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_ranges  0x0000000000000000       0xa0 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_line    0x0000000000000000     0x1146 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_str     0x0000000000000000      0x703 zephyr/libzephyr.a(mac_addr.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.periph_module_reset
                0x0000000000000000       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.4.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text.periph_module_reset
                0x0000000000000000       0x53 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.3       0x0000000000000000       0x46 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.4       0x0000000000000000       0x46 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .literal.regi2c_saradc_enable
                0x0000000000000000        0xc zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .literal.regi2c_saradc_disable
                0x0000000000000000       0x20 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.1       0x0000000000000000        0xd zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.2       0x0000000000000000       0x10 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .text.regi2c_saradc_enable
                0x0000000000000000       0x1a zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .rodata.regi2c_saradc_disable.str1.1
                0x0000000000000000       0x2e zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .text.regi2c_saradc_disable
                0x0000000000000000       0x3c zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss.s_i2c_saradc_enable_cnt
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .rodata.str1.1
                0x0000000000000000        0x7 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .dram1.0       0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss.mux       0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_info    0x0000000000000000      0x2fb zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_abbrev  0x0000000000000000      0x1ab zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_loc     0x0000000000000000       0x49 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_ranges  0x0000000000000000       0x40 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_line    0x0000000000000000      0x495 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_str     0x0000000000000000      0x52d zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.5.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_module.c.obj)
 .literal.rtc_isr_register
                0x0000000000000000       0x2c zephyr/libzephyr.a(rtc_module.c.obj)
 .literal.rtc_isr_deregister
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_module.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
 .iram1.5       0x0000000000000000       0x4c zephyr/libzephyr.a(rtc_module.c.obj)
 .text.rtc_isr_register
                0x0000000000000000       0xb2 zephyr/libzephyr.a(rtc_module.c.obj)
 .text.rtc_isr_deregister
                0x0000000000000000       0x6b zephyr/libzephyr.a(rtc_module.c.obj)
 .bss.s_rtc_isr_handle
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.4       0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.0       0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .bss.rtc_spinlock
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(hw_random.c.obj)
 .literal.esp_fill_random
                0x0000000000000000        0xc zephyr/libzephyr.a(hw_random.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(hw_random.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(hw_random.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(hw_random.c.obj)
 .iram1.0       0x0000000000000000       0x3e zephyr/libzephyr.a(hw_random.c.obj)
 .text.esp_fill_random
                0x0000000000000000       0x2e zephyr/libzephyr.a(hw_random.c.obj)
 .bss.last_ccount$0
                0x0000000000000000        0x4 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_info    0x0000000000000000      0x2b4 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_abbrev  0x0000000000000000      0x1b7 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_loc     0x0000000000000000       0xe5 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_line    0x0000000000000000      0x5ae zephyr/libzephyr.a(hw_random.c.obj)
 .debug_str     0x0000000000000000      0x350 zephyr/libzephyr.a(hw_random.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(hw_random.c.obj)
 .literal.get_power_down_flags
                0x0000000000000000        0xc zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.rtcio_ll_function_select$constprop$0
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.15.literal
                0x0000000000000000       0xa8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.18.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_periph_use_8m
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_get_deep_sleep_wake_stub
                0x0000000000000000       0x20 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_set_deep_sleep_wake_stub
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_default_wake_deep_sleep
                0x0000000000000000       0x18 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_register_hook
                0x0000000000000000       0x14 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_deregister_hook
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.17.literal
                0x0000000000000000       0x24 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_light_sleep_start
                0x0000000000000000       0xa8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_disable_wakeup_source
                0x0000000000000000       0x34 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_timer_wakeup
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_touchpad_wakeup
                0x0000000000000000       0x14 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_is_valid_wakeup_gpio
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_ext0_wakeup
                0x0000000000000000       0x20 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_ext1_wakeup
                0x0000000000000000       0x24 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_gpio_wakeup
                0x0000000000000000       0x14 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_uart_wakeup
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_get_wakeup_cause
                0x0000000000000000        0xc zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_get_touchpad_wakeup_status
                0x0000000000000000        0xc zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_get_ext1_wakeup_status
                0x0000000000000000       0x18 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_pd_config
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_disable_rom_logging
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_adc_tsens_monitor
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.rtc_sleep_enable_ultra_low
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.get_power_down_flags
                0x0000000000000000       0xb2 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.rtcio_ll_function_select$constprop$0
                0x0000000000000000       0x3b zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.15      0x0000000000000000      0x3d2 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.18      0x0000000000000000       0x31 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_periph_use_8m
                0x0000000000000000        0xb zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_get_deep_sleep_wake_stub
                0x0000000000000000       0x3e zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_set_deep_sleep_wake_stub
                0x0000000000000000        0xd zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_default_wake_deep_sleep
                0x0000000000000000       0x4b zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_deep_sleep_register_hook.str1.1
                0x0000000000000000       0x48 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_register_hook
                0x0000000000000000       0x5b zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_deregister_hook
                0x0000000000000000       0x30 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x2b zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.17      0x0000000000000000       0x59 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_light_sleep_start
                0x0000000000000000      0x2c6 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_sleep_disable_wakeup_source.str1.1
                0x0000000000000000       0x35 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_wakeup_source
                0x0000000000000000       0xdd zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ulp_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_timer_wakeup
                0x0000000000000000       0x1b zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep
                0x0000000000000000       0x13 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_sleep_enable_touchpad_wakeup.str1.1
                0x0000000000000000       0x2e zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_touchpad_wakeup
                0x0000000000000000       0x42 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_is_valid_wakeup_gpio
                0x0000000000000000       0x10 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_sleep_enable_ext0_wakeup.str1.1
                0x0000000000000000       0x36 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ext0_wakeup
                0x0000000000000000       0x75 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_sleep_enable_ext1_wakeup.str1.1
                0x0000000000000000       0x22 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ext1_wakeup
                0x0000000000000000       0x97 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_gpio_wakeup
                0x0000000000000000       0x44 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_uart_wakeup
                0x0000000000000000       0x49 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_wifi_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_wifi_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_wifi_beacon_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_wifi_beacon_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_bt_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_bt_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_get_wakeup_cause
                0x0000000000000000       0x52 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_get_touchpad_wakeup_status
                0x0000000000000000       0x22 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_get_ext1_wakeup_status
                0x0000000000000000       0x56 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_pd_config
                0x0000000000000000       0x62 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_disable_rom_logging
                0x0000000000000000       0x18 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_adc_tsens_monitor
                0x0000000000000000        0xb zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.rtc_sleep_enable_ultra_low
                0x0000000000000000        0xb zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_suspended_uarts_bmap
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_periph_use_8m_flag
                0x0000000000000000        0x1 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_ultra_low_enabled
                0x0000000000000000        0x1 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_adc_tsen_enabled
                0x0000000000000000        0x1 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_light_sleep_wakeup
                0x0000000000000000        0x1 zephyr/libzephyr.a(sleep_modes.c.obj)
 .data.s_config
                0x0000000000000000       0x70 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_dslp_cb
                0x0000000000000000        0xc zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_frame   0x0000000000000000      0x358 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_info    0x0000000000000000     0x5993 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_abbrev  0x0000000000000000      0x712 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_loc     0x0000000000000000      0xd92 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_aranges
                0x0000000000000000      0x130 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_ranges  0x0000000000000000      0x340 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_line    0x0000000000000000     0x3464 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_str     0x0000000000000000     0x3dbe zephyr/libzephyr.a(sleep_modes.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_clk_32k_bootstrap
                0x0000000000000000       0x2c zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_apll_enable
                0x0000000000000000       0x18 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_apll_coeff_set
                0x0000000000000000       0x30 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_slow_freq_get_hz
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_apll_coeff_calc
                0x0000000000000000       0x74 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_set_to_default_config
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_set_xtal
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_enable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_disable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_8m_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_bootstrap
                0x0000000000000000      0x1ef zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enabled
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_apll_enable
                0x0000000000000000       0x89 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_apll_coeff_set
                0x0000000000000000       0xdd zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_slow_freq_get_hz
                0x0000000000000000       0x18 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_apll_coeff_calc
                0x0000000000000000      0x19b zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_set_to_default_config
                0x0000000000000000       0x19 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_set_xtal
                0x0000000000000000       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x38 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_enable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_disable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_8m_enabled
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$97
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .literal.rtc_time_us_to_slowclk
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_time_get
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_time.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_us_to_slowclk
                0x0000000000000000       0x1f zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_slowclk_to_us
                0x0000000000000000       0x1c zephyr/libzephyr.a(rtc_time.c.obj)
 .rodata.rtc_time_get.str1.1
                0x0000000000000000       0x1d zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_get
                0x0000000000000000       0x74 zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.s_sar_power_acquire
                0x0000000000000000        0x8 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.s_sar_power_release
                0x0000000000000000       0x24 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_init
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_power_enable
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_power_disable
                0x0000000000000000        0x8 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_pwdet_power_acquire
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_pwdet_power_release
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_oneshot_power_acquire
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_oneshot_power_release
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_continuous_power_acquire
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_continuous_power_release
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.s_sar_power_acquire
                0x0000000000000000       0x30 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .rodata.s_sar_power_release.str1.1
                0x0000000000000000       0x43 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.s_sar_power_release
                0x0000000000000000       0x54 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_init
                0x0000000000000000       0x1a zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_power_enable
                0x0000000000000000       0x23 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_power_disable
                0x0000000000000000       0x29 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_pwdet_power_acquire
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_pwdet_power_release
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_oneshot_power_acquire
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_oneshot_power_release
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_continuous_power_acquire
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_continuous_power_release
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .rodata.__func__$0
                0x0000000000000000       0x14 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .bss.s_sar_power_on_cnt
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_frame   0x0000000000000000      0x118 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_info    0x0000000000000000     0x1554 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_abbrev  0x0000000000000000      0x33b zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_loc     0x0000000000000000       0xc2 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_aranges
                0x0000000000000000       0x70 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_ranges  0x0000000000000000       0x60 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_line    0x0000000000000000      0x899 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_str     0x0000000000000000     0x118b zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .iram1.4.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.17.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.16.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x2c zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map_get_max_consecutive_free_block_size
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map_reserve_block_with_caps
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map
                0x0000000000000000       0x94 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_unmap
                0x0000000000000000       0x3c zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map_dump_mapped_blocks
                0x0000000000000000       0x74 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.5.literal
                0x0000000000000000       0x58 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_vaddr_to_paddr
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_paddr_to_vaddr
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.4       0x0000000000000000       0x1d zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.17      0x0000000000000000       0x23 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.16      0x0000000000000000       0x22 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.2       0x0000000000000000        0xb zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.3       0x0000000000000000       0xbc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map_get_max_consecutive_free_block_size.str1.1
                0x0000000000000000       0x42 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map_get_max_consecutive_free_block_size
                0x0000000000000000       0x7f zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map_reserve_block_with_caps.str1.1
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map_reserve_block_with_caps
                0x0000000000000000       0xd8 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map.str1.1
                0x0000000000000000      0x133 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map
                0x0000000000000000      0x390 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_unmap.str1.1
                0x0000000000000000       0x88 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_unmap
                0x0000000000000000       0xf4 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map_dump_mapped_blocks.str1.1
                0x0000000000000000      0x137 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map_dump_mapped_blocks
                0x0000000000000000      0x111 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.5       0x0000000000000000       0xbc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_vaddr_to_paddr.str1.1
                0x0000000000000000       0x60 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_vaddr_to_paddr
                0x0000000000000000       0x9e zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_paddr_to_vaddr.str1.1
                0x0000000000000000       0x27 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_paddr_to_vaddr
                0x0000000000000000       0x6a zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$0
                0x0000000000000000       0x17 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$1
                0x0000000000000000       0x17 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$2
                0x0000000000000000        0xe zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$3
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$4
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$5
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.15      0x0000000000000000       0x1a zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.14      0x0000000000000000       0x18 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.13      0x0000000000000000       0x1a zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.12      0x0000000000000000       0x1b zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.11      0x0000000000000000       0x1e zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.10      0x0000000000000000       0x20 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.9       0x0000000000000000       0x19 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.8       0x0000000000000000       0x18 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.7       0x0000000000000000       0x1d zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.6       0x0000000000000000       0x1f zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.str1.1
                0x0000000000000000        0x5 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.0       0x0000000000000000        0x4 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_info    0x0000000000000000       0x64 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_line    0x0000000000000000       0x7c zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_str     0x0000000000000000      0x21b zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .literal.esp_rom_spiflash_enable_write$constprop$0
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_program_page_internal$constprop$0
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_read_statushigh
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_write_status
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_clear_bp
                0x0000000000000000       0x34 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_set_bp
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_config_readmode
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_erase_chip
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_erase_block
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_erase_sector
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_write
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_write_encrypted
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_erase_area
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .literal.esp_rom_spiflash_write_disable
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_enable_write$constprop$0
                0x0000000000000000       0x3d zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_program_page_internal$constprop$0
                0x0000000000000000       0xc6 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_read_statushigh
                0x0000000000000000       0x21 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_write_status
                0x0000000000000000       0x33 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_clear_bp
                0x0000000000000000       0xc8 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_set_bp
                0x0000000000000000       0x4c zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_config_readmode
                0x0000000000000000      0x2a6 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_erase_chip
                0x0000000000000000       0x37 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_erase_block
                0x0000000000000000       0x87 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_erase_sector
                0x0000000000000000       0x8b zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_write
                0x0000000000000000       0xa2 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_write_encrypted
                0x0000000000000000       0x58 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_erase_area
                0x0000000000000000       0x98 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text.esp_rom_spiflash_write_disable
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .rodata.CSWTCH$44
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_info    0x0000000000000000       0x64 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_line    0x0000000000000000       0x7e zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_str     0x0000000000000000      0x21d zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .literal       0x0000000000000000        0x4 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .text          0x0000000000000000       0x28 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_line    0x0000000000000000       0xde zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_info    0x0000000000000000       0x23 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_abbrev  0x0000000000000000       0x14 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_str     0x0000000000000000       0x92 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .literal.select_rtc_slow_clk
                0x0000000000000000       0x24 zephyr/libzephyr.a(clk.c.obj)
 .literal.esp_clk_init
                0x0000000000000000       0x34 zephyr/libzephyr.a(clk.c.obj)
 .literal.esp_perip_clk_init
                0x0000000000000000       0x34 zephyr/libzephyr.a(clk.c.obj)
 .literal.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .rodata.select_rtc_slow_clk.str1.1
                0x0000000000000000       0x50 zephyr/libzephyr.a(clk.c.obj)
 .text.select_rtc_slow_clk
                0x0000000000000000       0x6f zephyr/libzephyr.a(clk.c.obj)
 .rodata        0x0000000000000000        0x4 zephyr/libzephyr.a(clk.c.obj)
 .text.esp_clk_init
                0x0000000000000000       0x85 zephyr/libzephyr.a(clk.c.obj)
 .text.esp_perip_clk_init
                0x0000000000000000       0xde zephyr/libzephyr.a(clk.c.obj)
 .text.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0xe zephyr/libzephyr.a(clk.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(clk.c.obj)
 .debug_info    0x0000000000000000      0xaf9 zephyr/libzephyr.a(clk.c.obj)
 .debug_abbrev  0x0000000000000000      0x360 zephyr/libzephyr.a(clk.c.obj)
 .debug_loc     0x0000000000000000      0x23b zephyr/libzephyr.a(clk.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(clk.c.obj)
 .debug_ranges  0x0000000000000000       0x40 zephyr/libzephyr.a(clk.c.obj)
 .debug_line    0x0000000000000000      0x998 zephyr/libzephyr.a(clk.c.obj)
 .debug_str     0x0000000000000000     0x1046 zephyr/libzephyr.a(clk.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(clk.c.obj)
 .iram1.6.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(system_internal.c.obj)
 .iram1.7.literal
                0x0000000000000000       0x80 zephyr/libzephyr.a(system_internal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(system_internal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(system_internal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(system_internal.c.obj)
 .iram1.6       0x0000000000000000       0x50 zephyr/libzephyr.a(system_internal.c.obj)
 .rodata        0x0000000000000000       0x10 zephyr/libzephyr.a(system_internal.c.obj)
 .iram1.7       0x0000000000000000      0x143 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_info    0x0000000000000000     0x3487 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_abbrev  0x0000000000000000      0x349 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_loc     0x0000000000000000       0xb4 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_line    0x0000000000000000      0x8a6 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_str     0x0000000000000000     0x2051 zephyr/libzephyr.a(system_internal.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(system_internal.c.obj)
 .literal.esp_reset_reason
                0x0000000000000000        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.0.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(reset_reason.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .text.esp_reset_reason
                0x0000000000000000        0xa zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.0       0x0000000000000000       0x26 zephyr/libzephyr.a(reset_reason.c.obj)
 .literal._esp_error_check_failed_without_abort
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_err.c.obj)
 .literal._esp_error_check_failed
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_err.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_err.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_err.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_err.c.obj)
 .rodata._esp_error_check_failed_without_abort.str1.1
                0x0000000000000000       0x70 zephyr/libzephyr.a(esp_err.c.obj)
 .text._esp_error_check_failed_without_abort
                0x0000000000000000       0x4b zephyr/libzephyr.a(esp_err.c.obj)
 .rodata._esp_error_check_failed.str1.1
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_err.c.obj)
 .text._esp_error_check_failed
                0x0000000000000000       0x4f zephyr/libzephyr.a(esp_err.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(esp_err.c.obj)
 .debug_info    0x0000000000000000      0x51d zephyr/libzephyr.a(esp_err.c.obj)
 .debug_abbrev  0x0000000000000000      0x1a5 zephyr/libzephyr.a(esp_err.c.obj)
 .debug_loc     0x0000000000000000      0x28a zephyr/libzephyr.a(esp_err.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_err.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(esp_err.c.obj)
 .debug_line    0x0000000000000000      0x4f1 zephyr/libzephyr.a(esp_err.c.obj)
 .debug_str     0x0000000000000000      0x317 zephyr/libzephyr.a(esp_err.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_err.c.obj)
 .literal.ets_timer_setfn
                0x0000000000000000       0x24 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1.literal
                0x0000000000000000       0x28 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x28 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .literal.ets_timer_done
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.ets_timer_setfn.str1.1
                0x0000000000000000       0xa1 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_setfn
                0x0000000000000000       0x52 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x66 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1       0x0000000000000000       0x57 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2       0x0000000000000000       0x5f zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_done
                0x0000000000000000       0x1c zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3       0x0000000000000000       0x16 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_init
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_deinit
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.__func__$2
                0x0000000000000000        0xe zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.__func__$1
                0x0000000000000000       0x11 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.__func__$0
                0x0000000000000000       0x10 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_info    0x0000000000000000      0x7cc zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_abbrev  0x0000000000000000      0x2f2 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_loc     0x0000000000000000      0x177 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_ranges  0x0000000000000000       0x88 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_line    0x0000000000000000      0x75b zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_str     0x0000000000000000      0x4d7 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_unlock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.5.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_set
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_advance
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_init
                0x0000000000000000       0x34 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_deinit
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_get_alarm_reg
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.4       0x0000000000000000       0x1a zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_lock
                0x0000000000000000        0xd zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_unlock
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.0       0x0000000000000000       0x44 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.1       0x0000000000000000       0x17 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.2       0x0000000000000000      0x10d zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.3       0x0000000000000000       0x12 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.5       0x0000000000000000       0x43 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_set
                0x0000000000000000       0x39 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_advance
                0x0000000000000000       0x1e zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .rodata.esp_timer_impl_init.str1.1
                0x0000000000000000       0x40 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_init
                0x0000000000000000       0x8b zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_deinit
                0x0000000000000000       0x26 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.6       0x0000000000000000        0x9 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_get_alarm_reg
                0x0000000000000000       0x23 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .data.timestamp_id$0
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss.s_time_update_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss.s_alarm_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.8.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.9.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.timer_task
                0x0000000000000000       0x34 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_create
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.1.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_delete
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_init
                0x0000000000000000       0x58 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_deinit
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_dump
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.11.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.13.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.14.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.8       0x0000000000000000       0x17 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.5       0x0000000000000000       0x52 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4       0x0000000000000000       0x75 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.9       0x0000000000000000        0xe zephyr/libzephyr.a(esp_timer.c.obj)
 .text.timer_task
                0x0000000000000000      0x123 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_create
                0x0000000000000000       0x64 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.0       0x0000000000000000       0xde zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.1       0x0000000000000000       0x6c zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2       0x0000000000000000       0x94 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3       0x0000000000000000       0x3c zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_delete
                0x0000000000000000       0x60 zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_init.str1.1
                0x0000000000000000       0x81 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_init
                0x0000000000000000       0xc0 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_deinit
                0x0000000000000000       0x2e zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_dump.str1.1
                0x0000000000000000       0x54 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_dump
                0x0000000000000000       0xc2 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.11      0x0000000000000000       0x36 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12      0x0000000000000000       0x4c zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.13      0x0000000000000000       0x45 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.14      0x0000000000000000       0x52 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.15      0x0000000000000000       0x13 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_semaphore
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_task
                0x0000000000000000       0x60 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.timer_task_stack
                0x0000000000000000     0x1000 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timers  0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.init_status
                0x0000000000000000        0x1 zephyr/libzephyr.a(esp_timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(system_time.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(system_time.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(system_time.c.obj)
 .debug_line    0x0000000000000000        0x0 zephyr/libzephyr.a(system_time.c.obj)
 .debug_str     0x0000000000000000      0x195 zephyr/libzephyr.a(system_time.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(system_time.c.obj)
 .literal.efuse_hal_get_mac
                0x0000000000000000        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_get_mac
                0x0000000000000000       0x17 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_blk_version
                0x0000000000000000        0x7 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.1       0x0000000000000000        0x7 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.2       0x0000000000000000       0x26 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.wdt_hal_init
                0x0000000000000000       0x48 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_deinit
                0x0000000000000000        0x8 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_config_stage
                0x0000000000000000       0x24 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_init
                0x0000000000000000      0x299 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_deinit
                0x0000000000000000       0xc6 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_config_stage
                0x0000000000000000      0x14c zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_enable
                0x0000000000000000       0x4c zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_handle_intr
                0x0000000000000000       0x51 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_feed
                0x0000000000000000       0x2a zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_is_enabled
                0x0000000000000000       0x1d zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .literal.efuse_hal_set_timing
                0x0000000000000000        0x8 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_read
                0x0000000000000000        0x8 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_clear_program_registers
                0x0000000000000000       0x7c zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_program
                0x0000000000000000        0xc zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_is_coding_error_in_block
                0x0000000000000000        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_set_timing
                0x0000000000000000       0x70 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_read
                0x0000000000000000       0x3c zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_clear_program_registers
                0x0000000000000000       0xff zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_program
                0x0000000000000000       0x42 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_is_coding_error_in_block
                0x0000000000000000       0x3a zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.esp_log_impl_lock
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.esp_log_impl_lock_timeout
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.esp_log_impl_unlock
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_noos.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_lock
                0x0000000000000000       0x16 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_lock_timeout
                0x0000000000000000        0xd zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_unlock
                0x0000000000000000       0x17 zephyr/libzephyr.a(log_noos.c.obj)
 .bss.s_lock    0x0000000000000000        0x4 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.heap_bubble_down
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .literal.s_log_level_get_and_unlock
                0x0000000000000000       0x2c zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_set_vprintf
                0x0000000000000000        0xc zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_level_set
                0x0000000000000000       0x44 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_level_get
                0x0000000000000000        0x8 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_writev
                0x0000000000000000        0xc zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_write
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .text.heap_bubble_down
                0x0000000000000000       0x49 zephyr/libzephyr.a(log.c.obj)
 .text.s_log_level_get_and_unlock
                0x0000000000000000       0xf1 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_set_vprintf
                0x0000000000000000       0x1a zephyr/libzephyr.a(log.c.obj)
 .rodata.esp_log_level_set.str1.1
                0x0000000000000000        0x2 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_level_set
                0x0000000000000000       0xf3 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_level_get
                0x0000000000000000       0x15 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_writev
                0x0000000000000000       0x32 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_write
                0x0000000000000000       0x26 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_misses
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .data.s_log_print_func
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_entry_count
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_max_generation
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache
                0x0000000000000000       0xf8 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_tags
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .data.esp_log_default_level
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(log.c.obj)
 .debug_info    0x0000000000000000      0x9e2 zephyr/libzephyr.a(log.c.obj)
 .debug_abbrev  0x0000000000000000      0x43a zephyr/libzephyr.a(log.c.obj)
 .debug_loc     0x0000000000000000      0x52c zephyr/libzephyr.a(log.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(log.c.obj)
 .debug_ranges  0x0000000000000000       0x98 zephyr/libzephyr.a(log.c.obj)
 .debug_line    0x0000000000000000      0xb43 zephyr/libzephyr.a(log.c.obj)
 .debug_str     0x0000000000000000      0x5dc zephyr/libzephyr.a(log.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(log.c.obj)
 .literal.heap_caps_alloc_failed
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc_base
                0x0000000000000000        0xc zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc_base
                0x0000000000000000        0xc zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.z_esp_aligned_alloc$constprop$0
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_register_failed_alloc_callback
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc_default
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc_prefer
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc_default
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc_prefer
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_free
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_calloc
                0x0000000000000000        0xc zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_calloc_prefer
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_get_info
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_print_heap_info
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_aligned_alloc
                0x0000000000000000        0xc zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_aligned_free
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_aligned_calloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.__wrap_k_malloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.__wrap_k_calloc
                0x0000000000000000        0xc zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_alloc_failed
                0x0000000000000000       0x16 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_base
                0x0000000000000000       0x24 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc_base
                0x0000000000000000       0x22 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.z_esp_aligned_alloc$constprop$0
                0x0000000000000000       0x29 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_register_failed_alloc_callback
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc
                0x0000000000000000       0x11 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_extmem_enable
                0x0000000000000000        0x5 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_default
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_prefer
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc_default
                0x0000000000000000       0x16 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc_prefer
                0x0000000000000000       0x16 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_free
                0x0000000000000000        0xe zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_calloc
                0x0000000000000000       0x2e zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_calloc_prefer
                0x0000000000000000       0x1e zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_total_size
                0x0000000000000000        0xa zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_free_size
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_minimum_free_size
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_largest_free_block
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_info
                0x0000000000000000       0x12 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.heap_caps_print_heap_info.str1.1
                0x0000000000000000       0x3e zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_print_heap_info
                0x0000000000000000        0xe zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_check_integrity
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_check_integrity_all
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_check_integrity_addr
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_dump
                0x0000000000000000        0x5 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_dump_all
                0x0000000000000000        0x5 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_allocated_size
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_aligned_alloc
                0x0000000000000000       0x22 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_aligned_free
                0x0000000000000000        0xe zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_aligned_calloc
                0x0000000000000000       0x2e zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.__wrap_k_malloc
                0x0000000000000000       0x1a zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.__wrap_k_calloc
                0x0000000000000000       0x36 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$0
                0x0000000000000000       0x18 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$1
                0x0000000000000000       0x11 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$2
                0x0000000000000000       0x17 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$3
                0x0000000000000000       0x16 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .bss.alloc_failed_callback
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 ._k_heap.static._internal_heap_1_
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .noinit.0      0x0000000000000000      0x400 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_frame   0x0000000000000000      0x310 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_info    0x0000000000000000     0x13b3 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_abbrev  0x0000000000000000      0x4cf zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_loc     0x0000000000000000      0x7b7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_aranges
                0x0000000000000000      0x118 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_ranges  0x0000000000000000      0x120 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_line    0x0000000000000000      0xdb1 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_str     0x0000000000000000      0xa21 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.spi_flash_op_lock
                0x0000000000000000        0x8 zephyr/libzephyr.a(cache_utils.c.obj)
 .literal.spi_flash_op_unlock
                0x0000000000000000        0x8 zephyr/libzephyr.a(cache_utils.c.obj)
 .iram1.6.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(cache_utils.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
 .text.spi_flash_init_lock
                0x0000000000000000        0x5 zephyr/libzephyr.a(cache_utils.c.obj)
 .text.spi_flash_op_lock
                0x0000000000000000       0x12 zephyr/libzephyr.a(cache_utils.c.obj)
 .text.spi_flash_op_unlock
                0x0000000000000000        0xe zephyr/libzephyr.a(cache_utils.c.obj)
 .iram1.6       0x0000000000000000       0x10 zephyr/libzephyr.a(cache_utils.c.obj)
 ._k_mutex.static.s_flash_op_mutex_
                0x0000000000000000       0x14 zephyr/libzephyr.a(cache_utils.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .debug_info    0x0000000000000000       0x6b zephyr/libzephyr.a(stubs.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(stubs.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(stubs.c.obj)
 .debug_line    0x0000000000000000       0x6c zephyr/libzephyr.a(stubs.c.obj)
 .debug_str     0x0000000000000000      0x217 zephyr/libzephyr.a(stubs.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(stubs.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .literal.arch_cpu_atomic_idle
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text.arch_cpu_atomic_idle
                0x0000000000000000       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .literal.xtensa_exccause
                0x0000000000000000        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .literal.arch_syscall_oops
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.xtensa_exccause.str1.1
                0x0000000000000000       0x11 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.xtensa_exccause
                0x0000000000000000       0x17 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.arch_syscall_oops
                0x0000000000000000        0xd zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.str1.1
                0x0000000000000000      0x1c9 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.CSWTCH$3
                0x0000000000000000      0x104 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .literal.z_arch_irq_connect_dynamic
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_irq_priority_set
                0x0000000000000000        0x5 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_arch_irq_connect_dynamic
                0x0000000000000000       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.xtensa_irq_is_enabled
                0x0000000000000000       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .literal.__stdin_hook_install
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.cbvprintf
                0x0000000000000000        0xc zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal._exit
                0x0000000000000000        0x8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_init_recursive
                0x0000000000000000        0x8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_init
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_close_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_close
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_acquire_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_acquire
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_try_acquire_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_try_acquire
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_release_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_release
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__chk_fail
                0x0000000000000000        0xc zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.z_errno_wrap
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.cbputc   0x0000000000000000       0x11 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__stdin_hook_install
                0x0000000000000000       0x15 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.cbvprintf
                0x0000000000000000       0x32 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata._exit.str1.1
                0x0000000000000000        0x6 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text._exit    0x0000000000000000        0xf zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_init_recursive
                0x0000000000000000       0x16 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_init
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_close_recursive
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_close
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_acquire_recursive
                0x0000000000000000       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_acquire
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_try_acquire_recursive
                0x0000000000000000       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_try_acquire
                0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_release_recursive
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_release
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.__chk_fail.str1.1
                0x0000000000000000       0x1e zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__chk_fail
                0x0000000000000000       0x14 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.z_errno_wrap
                0x0000000000000000        0xd zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 ._k_mutex.static.__lock___libc_recursive_mutex_
                0x0000000000000000       0x14 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.stdout
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.stdin  0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss.__stdin   0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .literal.malloc_lock
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.malloc_unlock
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.malloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.aligned_alloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.realloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.free  0x0000000000000000       0x10 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.calloc
                0x0000000000000000        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.reallocarray
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc_lock
                0x0000000000000000       0x12 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc_unlock
                0x0000000000000000        0xe zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc   0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.aligned_alloc
                0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.realloc  0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.free     0x0000000000000000       0x1c zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.calloc   0x0000000000000000       0x33 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.reallocarray
                0x0000000000000000       0x27 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .data.z_malloc_heap_mutex
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.esp_intr_mark_shared
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_reserve
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.2.literal
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_free
                0x0000000000000000       0x24 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_mark_shared
                0x0000000000000000       0x4e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_reserve
                0x0000000000000000       0x44 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.2       0x0000000000000000       0x78 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_intno
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_cpu
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.3       0x0000000000000000       0x7e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_free
                0x0000000000000000       0xc4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text.uart_register_input
                0x0000000000000000        0x5 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_set_timeout
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_idle_exit
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_info    0x0000000000000000       0xda zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_abbrev  0x0000000000000000       0x7e zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_line    0x0000000000000000      0x16c zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_str     0x0000000000000000      0x260 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .text.sys_clock_cycle_get_32
                0x0000000000000000        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .literal.z_device_get_all_static
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_device_get_binding
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(device.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_device_get_all_static
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_impl_device_get_binding
                0x0000000000000000       0x5a zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_z_errno
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .text.z_impl_z_errno
                0x0000000000000000        0xd zephyr/kernel/libkernel.a(errno.c.obj)
 .rodata._k_neg_eagain
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_info    0x0000000000000000      0x63c zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_abbrev  0x0000000000000000      0x1ab zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_line    0x0000000000000000      0x367 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_str     0x0000000000000000      0x68f zephyr/kernel/libkernel.a(errno.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(errno.c.obj)
 .literal.k_fatal_halt
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.k_fatal_halt
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(fatal.c.obj)
 .literal.z_early_memcpy
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_impl_device_init
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_early_rand_get
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_memcpy
                0x0000000000000000       0x12 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_impl_device_init
                0x0000000000000000       0x2c zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_rand_get
                0x0000000000000000       0x63 zephyr/kernel/libkernel.a(init.c.obj)
 .data.state$1  0x0000000000000000        0x8 zephyr/kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init_static.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init_static.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init_static.c.obj)
 .literal.k_heap_alloc
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(kheap.c.obj)
 .literal.k_heap_realloc
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_alloc
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_realloc
                0x0000000000000000       0x62 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .text.arch_spin_relax
                0x0000000000000000        0x7 zephyr/kernel/libkernel.a(idle.c.obj)
 .literal.adjust_owner_prio$isra$0
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_mutex_lock
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_mutex_unlock
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.adjust_owner_prio$isra$0
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_init
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_lock
                0x0000000000000000       0xcf zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_unlock
                0x0000000000000000       0x70 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_info    0x0000000000000000     0x11d3 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_abbrev  0x0000000000000000      0x40b zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_loc     0x0000000000000000      0x573 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_ranges  0x0000000000000000       0x88 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_line    0x0000000000000000      0xd95 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_str     0x0000000000000000      0x8eb zephyr/kernel/libkernel.a(mutex.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_sem_give
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.z_impl_k_sem_take
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.z_impl_k_sem_reset
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_init
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_give
                0x0000000000000000       0x44 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_take
                0x0000000000000000       0x3d zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_reset
                0x0000000000000000       0x2f zephyr/kernel/libkernel.a(sem.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_info    0x0000000000000000      0xc26 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x399 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x3a1 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x98b zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x7ca zephyr/kernel/libkernel.a(sem.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.z_impl_k_is_preempt_thread
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_state_str
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_impl_k_thread_create
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_user_mode_enter
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_is_preempt_thread
                0x0000000000000000       0x22 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_priority_get
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_set
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_name_get
                0x0000000000000000        0x7 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_copy
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.k_thread_state_str.str1.1
                0x0000000000000000        0x3 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_state_str
                0x0000000000000000       0x89 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_create
                0x0000000000000000       0x5a zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_init_thread_base
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_user_mode_enter
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_get
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_all_get
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_cpu_get
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x41 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.state_string$0
                0x0000000000000000       0x40 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_requeue_current
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_ready_thread_locked
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_move_thread_to_end_of_prio_q
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pend_thread
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_unpend1_no_timeout
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_unpend_first_thread
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_thread_prio_set
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_resume
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_priority_set
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.k_can_yield
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_usleep
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_wakeup
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_join
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wake
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wait
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_prio_cmp
                0x0000000000000000       0x1a zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_requeue_current
                0x0000000000000000       0x4e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_ready_thread_locked
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_move_thread_to_end_of_prio_q
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_thread
                0x0000000000000000       0x34 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend1_no_timeout
                0x0000000000000000       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend_first_thread
                0x0000000000000000       0x2e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_thread_prio_set
                0x0000000000000000       0x8e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_resume
                0x0000000000000000       0x36 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.init_ready_q
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_set
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.k_can_yield
                0x0000000000000000       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_usleep
                0x0000000000000000       0x31 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_wakeup
                0x0000000000000000       0x4e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_join
                0x0000000000000000       0x76 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wake
                0x0000000000000000       0x45 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wait
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_waitq_walk
                0x0000000000000000       0x30 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.k_sched_time_slice_set
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .text.k_sched_time_slice_set
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .literal.timeout_rem
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_remaining
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_expires
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_get_next_timeout_expiry
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_impl_k_uptime_ticks
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.timeout_rem
                0x0000000000000000       0x3d zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_remaining
                0x0000000000000000       0x3b zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_expires
                0x0000000000000000       0x30 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_get_next_timeout_expiry
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_impl_k_uptime_ticks
                0x0000000000000000        0xf zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.k_calloc
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
 .literal.k_realloc
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(mempool.c.obj)
 .literal.z_thread_aligned_alloc
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.k_calloc
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.k_realloc
                0x0000000000000000       0x45 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.z_thread_aligned_alloc
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .text          0x0000000000000000       0x18 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .text          0x0000000000000000       0x18 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .text          0x0000000000000000       0x14 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .text          0x0000000000000000       0x22 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .literal       0x0000000000000000       0x10 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .text          0x0000000000000000      0x312 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .literal       0x0000000000000000        0xc /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .text          0x0000000000000000      0x1ff /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .literal       0x0000000000000000       0x10 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .text          0x0000000000000000      0x213 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .literal       0x0000000000000000        0x4 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .text          0x0000000000000000       0x4c /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .literal       0x0000000000000000        0x4 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x6c /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x3d /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .text          0x0000000000000000       0x81 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .literal       0x0000000000000000        0x8 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .text          0x0000000000000000       0xa4 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .literal       0x0000000000000000        0x8 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000       0x62 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000       0x23 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .literal       0x0000000000000000        0xc /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000       0x37 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000      0x2ae /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .text          0x0000000000000000      0x270 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .text          0x0000000000000000      0x25e /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .literal       0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .text          0x0000000000000000      0x135 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .literal       0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .text          0x0000000000000000       0x74 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .text          0x0000000000000000       0xd8 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_setjmp.S.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_setjmp.S.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_setjmp.S.o)
 .literal       0x0000000000000000       0x1c /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .text          0x0000000000000000      0x123 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .literal       0x0000000000000000        0xc /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000       0x63 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .text.memcmp   0x0000000000000000       0x26 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strcspn.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strcspn.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strcspn.c.o)
 .text.strcspn  0x0000000000000000       0x25 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strcspn.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strcspn.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .text.strnlen  0x0000000000000000       0x1a /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strstr.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strstr.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strstr.c.o)
 .text.strstr   0x0000000000000000       0x36 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strstr.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strstr.c.o)
 .literal.fprintf
                0x0000000000000000        0x4 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text.fprintf  0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .text.fputc    0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .text.fputs    0x0000000000000000       0x33 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .literal.printf
                0x0000000000000000        0x8 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .text.printf   0x0000000000000000       0x2c /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .literal.snprintf
                0x0000000000000000        0xc /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text.snprintf
                0x0000000000000000       0x5e /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .literal.scanf_getc
                0x0000000000000000        0x4 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.scanf_ungetc$isra$0
                0x0000000000000000        0x4 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.skip_spaces
                0x0000000000000000        0x8 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.__l_vfscanf
                0x0000000000000000       0x50 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_getc
                0x0000000000000000       0x19 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.putval   0x0000000000000000       0x32 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_ungetc$isra$0
                0x0000000000000000       0x18 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.skip_spaces
                0x0000000000000000       0x34 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .rodata.__l_vfscanf.str1.1
                0x0000000000000000        0xc /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.__l_vfscanf
                0x0000000000000000      0x4a2 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .debug_frame   0x0000000000000000       0x88 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.vprintf
                0x0000000000000000        0x8 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .text.vprintf  0x0000000000000000       0x1a /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .text.strchr   0x0000000000000000       0x1d /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .literal.fgetc
                0x0000000000000000        0x4 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text.fgetc    0x0000000000000000       0x9a /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .text.__file_str_put
                0x0000000000000000       0x16 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .literal.ungetc
                0x0000000000000000        0x4 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .text          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .data          0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .bss           0x0000000000000000        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .text.ungetc   0x0000000000000000       0x7c /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x00000000003fff00 r
iram0_0_seg      0x0000000040080000 0x000000000003ac00 xr
dram0_0_seg      0x000000003ffb0000 0x0000000000030000 rw
dram0_shm0_seg   0x000000003ffe5230 0x0000000000000800 rw
dram0_sem0_seg   0x000000003ffe5a30 0x0000000000000008 rw
dram0_1_seg      0x000000003ffe5a38 0x0000000000000000 rw
irom0_0_seg      0x00000000400d0000 0x00000000003ff000 xr
drom0_0_seg      0x000000003f400000 0x00000000003ff000 r
rtc_iram_seg     0x00000000400c0000 0x0000000000002000 xrw
rtc_slow_seg     0x0000000050000000 0x0000000000001000 rw
IDT_LIST         0x000000003ebfe010 0x0000000000002000 rw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000040084cc8                vfprintf = __l_vfprintf
                0x0000000000000000                vfscanf = __l_vfscanf
LOAD zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
LOAD zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
LOAD app/libapp.a
LOAD zephyr/libzephyr.a
LOAD zephyr/arch/common/libarch__common.a
LOAD zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a
LOAD zephyr/lib/libc/picolibc/liblib__libc__picolibc.a
LOAD zephyr/lib/libc/common/liblib__libc__common.a
LOAD zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a
LOAD zephyr/drivers/clock_control/libdrivers__clock_control.a
LOAD zephyr/drivers/console/libdrivers__console.a
LOAD zephyr/drivers/gpio/libdrivers__gpio.a
LOAD zephyr/drivers/pinctrl/libdrivers__pinctrl.a
LOAD zephyr/drivers/serial/libdrivers__serial.a
LOAD zephyr/drivers/timer/libdrivers__timer.a
LOAD zephyr/kernel/libkernel.a
LOAD /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a
LOAD zephyr/arch/common/libisr_tables.a
LOAD /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a
LOAD /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a
LOAD /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a
                0x00000000400bac00                user_iram_end = 0x400bac00
                0x0000000040080000                user_iram_seg_org = 0x40080000
                0x000000000003ac00                user_iram_seg_len = (user_iram_end - user_iram_seg_org)
                0x000000003ffb0000                user_dram_seg_org = 0x3ffb0000
                0x0000000000030000                user_dram_seg_len = 0x30000
                0x000000003ffe5400                user_dram_2_seg_org = 0x3ffe5400
                0x000000000001ac00                user_dram_2_seg_len = 0x1ac00
                0x0000000000000000                _rom_store_table = 0x0
                [!provide]                        PROVIDE (_memmap_vecbase_reset = 0x40000450)
                [!provide]                        PROVIDE (_memmap_reset_vector = 0x40000400)
                0x000000003ffe4350                _heap_sentry = 0x3ffe4350

.rel.plt        0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rel.plt))
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rel.iplt))
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.rela.plt       0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rela.plt))
                [!provide]                        PROVIDE (__rela_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rela.iplt))
                [!provide]                        PROVIDE (__rela_iplt_end = .)

.rel.dyn
 *(SORT_BY_ALIGNMENT(.rel.*))

.rela.dyn
 *(SORT_BY_ALIGNMENT(.rela.*))

.rtc.text       0x00000000400c0000        0x0 load address 0x0000000000000000
                0x00000000400c0000                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rtc.literal) SORT_BY_ALIGNMENT(.rtc.text))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))

.rtc.data       0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                _rtc_data_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.data))
 *(SORT_BY_ALIGNMENT(.rtc.rodata))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.data) SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.data.*) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*))
                0x0000000050000000                _rtc_data_end = ABSOLUTE (.)

.rtc.bss        0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                _rtc_bss_start = ABSOLUTE (.)
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(COMMON))
                0x0000000050000000                _rtc_bss_end = ABSOLUTE (.)

.rtc.force_slow
                0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.force_slow) SORT_BY_ALIGNMENT(.rtc.force_slow.*))
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_end = ABSOLUTE (.)
                0x0000000000000000                _rtc_slow_length = (_rtc_force_slow_end - _rtc_data_start)

.iram0.vectors  0x0000000040080000      0x400 load address 0x0000000000000000
                0x0000000040080000                _iram_start = ABSOLUTE (.)
                0x0000000040080000                _init_start = ABSOLUTE (.)
                0x0000000000000000                . = 0x0
 *(SORT_BY_ALIGNMENT(.WindowVectors.text))
 .WindowVectors.text
                0x0000000040080000      0x16a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                0x0000000040080000                _WindowOverflow4
                0x0000000040080040                _WindowUnderflow4
                0x0000000040080050                _xt_alloca_exc
                0x0000000040080080                _WindowOverflow8
                0x00000000400800c0                _WindowUnderflow8
                0x0000000040080100                _WindowOverflow12
                0x0000000040080140                _WindowUnderflow12
                0x0000000000000180                . = 0x180
 *fill*         0x000000004008016a       0x16 
 *(SORT_BY_ALIGNMENT(.Level2InterruptVector.text))
 .Level2InterruptVector.text
                0x0000000040080180       0x29 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040080180                _Level2Vector
                0x00000000000001c0                . = 0x1c0
 *fill*         0x00000000400801a9       0x17 
 *(SORT_BY_ALIGNMENT(.Level3InterruptVector.text))
 .Level3InterruptVector.text
                0x00000000400801c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000400801c0                _Level3Vector
                0x0000000000000200                . = 0x200
 *fill*         0x00000000400801e5       0x1b 
 *(SORT_BY_ALIGNMENT(.Level4InterruptVector.text))
 .Level4InterruptVector.text
                0x0000000040080200       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040080200                _Level4Vector
                0x0000000000000240                . = 0x240
 *fill*         0x0000000040080225       0x1b 
 *(SORT_BY_ALIGNMENT(.Level5InterruptVector.text))
 .Level5InterruptVector.text
                0x0000000040080240       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040080240                _Level5Vector
                0x0000000000000280                . = 0x280
 *fill*         0x0000000040080265       0x1b 
 *(SORT_BY_ALIGNMENT(.DebugExceptionVector.text))
 .DebugExceptionVector.text
                0x0000000040080280       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040080280                _Level6Vector
                0x00000000000002c0                . = 0x2c0
 *fill*         0x00000000400802a5       0x1b 
 *(SORT_BY_ALIGNMENT(.NMIExceptionVector.text))
 .NMIExceptionVector.text
                0x00000000400802c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000400802c0                _Level7Vector
                0x0000000000000300                . = 0x300
 *fill*         0x00000000400802e5       0x1b 
 *(SORT_BY_ALIGNMENT(.KernelExceptionVector.text))
 .KernelExceptionVector.text
                0x0000000040080300        0x3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040080300                _KernelExceptionVector
                0x0000000000000340                . = 0x340
 *fill*         0x0000000040080303       0x3d 
 *(SORT_BY_ALIGNMENT(.UserExceptionVector.text))
 .UserExceptionVector.text
                0x0000000040080340       0x16 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040080340                _Level1RealVector
                0x00000000000003c0                . = 0x3c0
 *fill*         0x0000000040080356       0x6a 
 *(SORT_BY_ALIGNMENT(.DoubleExceptionVector.text))
 .DoubleExceptionVector.text
                0x00000000400803c0        0x3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x00000000400803c0                _DoubleExceptionVector
                0x0000000000000400                . = 0x400
 *fill*         0x00000000400803c3       0x3d 
 *(SORT_BY_ALIGNMENT(.*Vector.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.text))
                0x0000000040080400                . = ALIGN (0x10)
 *(SORT_BY_ALIGNMENT(.entry.text))
 *(SORT_BY_ALIGNMENT(.init.literal))
 *(.init)
                0x0000000040080400                _init_end = ABSOLUTE (.)

.iram0.text     0x0000000040080400     0x6ffc load address 0x0000000000000400
                0x0000000040080400                _iram_text_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram1) SORT_BY_ALIGNMENT(.iram1.*))
 .iram1.6.literal
                0x0000000040080400       0x14 zephyr/libzephyr.a(soc.c.obj)
                                         0x44 (size before relaxing)
 .iram1.7.literal
                0x0000000040080414        0x4 zephyr/libzephyr.a(soc.c.obj)
                                          0x8 (size before relaxing)
 .iram1.8.literal
                0x0000000040080418        0x4 zephyr/libzephyr.a(flash_ops.c.obj)
 .iram1.10.literal
                0x000000004008041c        0x4 zephyr/libzephyr.a(flash_ops.c.obj)
                                          0xc (size before relaxing)
 .iram1.5.literal
                0x0000000040080420        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.6.literal
                0x0000000040080428        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.10.literal
                0x000000004008042c        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                          0x8 (size before relaxing)
 .iram1.12.literal
                0x000000004008042c       0x10 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0x18 (size before relaxing)
 .iram1.13.literal
                0x000000004008043c        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                          0x8 (size before relaxing)
 .iram1.9.literal
                0x0000000040080440       0x18 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0x50 (size before relaxing)
 .iram1.21.literal
                0x0000000040080458        0xc zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0x14 (size before relaxing)
 .iram1.3.literal
                0x0000000040080464        0x4 zephyr/libzephyr.a(cache_esp32.c.obj)
 .iram1.1.literal
                0x0000000040080468        0x4 zephyr/libzephyr.a(flash_mmap.c.obj)
                                         0x10 (size before relaxing)
 .iram1.8.literal
                0x000000004008046c        0x4 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.7.literal
                0x0000000040080470        0x4 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                          0x8 (size before relaxing)
 .iram1.6.literal
                0x0000000040080474        0x4 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                          0x8 (size before relaxing)
 .iram1.1.literal
                0x0000000040080478        0x4 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .iram1.7.literal
                0x000000004008047c       0x28 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x2c (size before relaxing)
 .iram1.8.literal
                0x00000000400804a4        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .iram1.6.literal
                0x00000000400804a4        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x3c (size before relaxing)
 .iram1.9.literal
                0x00000000400804a4        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                          0x8 (size before relaxing)
 .iram1.10.literal
                0x00000000400804a4        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .iram1.13.literal
                0x00000000400804a4        0xc zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x40 (size before relaxing)
 .iram1.6.literal
                0x00000000400804b0       0x10 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .iram1.8.literal
                0x00000000400804c0       0x30 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                         0x54 (size before relaxing)
 .iram1.9.literal
                0x00000000400804f0        0x8 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                         0x10 (size before relaxing)
 .iram1.0.literal
                0x00000000400804f8        0x4 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .iram1.2.literal
                0x00000000400804fc        0x8 zephyr/libzephyr.a(esp_clk.c.obj)
                                          0xc (size before relaxing)
 .iram1.6.literal
                0x0000000040080504        0xc zephyr/libzephyr.a(rtc_module.c.obj)
                                         0x10 (size before relaxing)
 .iram1.7.literal
                0x0000000040080510        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
                                          0xc (size before relaxing)
 .iram1.1.literal
                0x0000000040080510        0x4 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.2.literal
                0x0000000040080514        0xc zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .iram1.3.literal
                0x0000000040080520        0x4 zephyr/libzephyr.a(esp_rom_uart.c.obj)
                                         0x10 (size before relaxing)
 .iram1.0.literal
                0x0000000040080524        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
                                          0x8 (size before relaxing)
 .iram1.0.literal
                0x0000000040080524        0x8 zephyr/libzephyr.a(efuse_hal.c.obj)
                                          0xc (size before relaxing)
 .iram1.1.literal
                0x000000004008052c        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
                                          0x4 (size before relaxing)
 .iram1.4.literal
                0x000000004008052c       0x14 zephyr/libzephyr.a(cache_utils.c.obj)
                                         0x20 (size before relaxing)
 .iram1.5.literal
                0x0000000040080540        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
                                         0x1c (size before relaxing)
 .iram1.literal
                0x0000000040080540        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                          0x4 (size before relaxing)
 .iram1.1.literal
                0x0000000040080540        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .iram1.0.literal
                0x0000000040080540        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .iram1.4.literal
                0x0000000040080544        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .iram1.5.literal
                0x0000000040080548        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x20 (size before relaxing)
 .iram1.6.literal
                0x0000000040080554        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .iram1.1.literal
                0x0000000040080554        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.arch_cpu_idle
                0x000000004008055c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_fatal_error
                0x000000004008055c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                          0xc (size before relaxing)
 .literal       0x000000004008055c        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                          0x8 (size before relaxing)
 .literal.z_irq_spurious
                0x0000000040080560        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                          0x4 (size before relaxing)
 .literal.arch_new_thread
                0x0000000040080560        0xc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .literal.return_to
                0x000000004008056c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_is_outside_stack_bounds
                0x000000004008056c        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_is_frame_pointer_valid
                0x0000000040080570        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_dump_stack
                0x0000000040080570        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int2_c
                0x0000000040080570        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int3_c
                0x0000000040080574        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0xc (size before relaxing)
 .literal.xtensa_int4_c
                0x0000000040080578        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int5_c
                0x0000000040080578        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int6_c
                0x0000000040080578        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int7_c
                0x0000000040080578        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_excint1_c
                0x0000000040080578        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x28 (size before relaxing)
 .literal.z_prep_c
                0x0000000040080580        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_cpu_process_stack_pc
                0x0000000040080580        0xc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .literal.xtensa_ptr_executable
                0x000000004008058c       0x1c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .literal.xtensa_stack_ptr_is_sane
                0x00000000400805a8        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                          0xc (size before relaxing)
 .literal.xtensa_backtrace_get_next_frame
                0x00000000400805b0        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x10 (size before relaxing)
 .literal.xtensa_backtrace_print
                0x00000000400805b0       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x54 (size before relaxing)
 .literal.k_sys_fatal_error_handler
                0x00000000400805c4        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_fatal_error
                0x00000000400805c4        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
 .literal.z_sys_init_run_level
                0x00000000400805c4        0x4 zephyr/kernel/libkernel.a(init.c.obj)
                                          0x8 (size before relaxing)
 .literal.bg_thread_main
                0x00000000400805c8       0x10 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x3c (size before relaxing)
 .literal.z_early_memset
                0x00000000400805d8        0x0 zephyr/kernel/libkernel.a(init.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_bss_zero
                0x00000000400805d8        0x8 zephyr/kernel/libkernel.a(init.c.obj)
                                          0xc (size before relaxing)
 .literal.z_init_cpu
                0x00000000400805e0        0xc zephyr/kernel/libkernel.a(init.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_cstart
                0x00000000400805ec       0x10 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x48 (size before relaxing)
 .literal.k_heap_init
                0x00000000400805fc        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0x4 (size before relaxing)
 .literal.statics_init
                0x00000000400805fc        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.k_heap_aligned_alloc
                0x0000000040080604        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x10 (size before relaxing)
 .literal.k_heap_free
                0x0000000040080604        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.idle  0x0000000040080604        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_thread_start
                0x0000000040080604        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_setup_new_thread
                0x0000000040080604        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                          0x8 (size before relaxing)
 .literal.unpend_thread_no_timeout
                0x0000000040080604        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.update_cache
                0x0000000040080604        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.unready_thread
                0x0000000040080608        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_swap
                0x0000000040080608        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.ready_thread
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_thread_halt
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x34 (size before relaxing)
 .literal.add_to_waitq_locked
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.move_thread_to_end_of_prio_q
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_ready_thread
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_thread_suspend
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_unpend_thread_no_timeout
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_sched_wake_thread
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_thread_timeout
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_pend_curr
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_unpend_thread
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_reschedule
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_start
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_reschedule_irqlock
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.k_sched_lock
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_sched_unlock
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_swap_next_thread
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_get_next_switch_handle
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_unpend_all
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_init
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_yield
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_tick_sleep
                0x000000004008060c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x24 (size before relaxing)
 .literal.z_impl_k_sleep
                0x000000004008060c        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_k_sched_current_thread_query
                0x0000000040080610        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_thread_abort
                0x0000000040080610        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_thread_abort
                0x0000000040080610        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.slice_timeout
                0x0000000040080610        0xc zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .literal.thread_is_sliceable
                0x000000004008061c        0x8 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                          0xc (size before relaxing)
 .literal.z_reset_time_slice
                0x0000000040080624        0x4 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x20 (size before relaxing)
 .literal.z_time_slice
                0x0000000040080628        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x14 (size before relaxing)
 .literal.elapsed
                0x0000000040080628        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.remove_timeout
                0x000000004008062c        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.next_timeout
                0x0000000040080630        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_add_timeout
                0x0000000040080634        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_abort_timeout
                0x0000000040080638        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_clock_announce
                0x0000000040080638        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x1c (size before relaxing)
 .literal.sys_clock_tick_get
                0x0000000040080638        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.sys_clock_tick_get_32
                0x0000000040080638        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_timepoint_calc
                0x0000000040080638        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_timepoint_timeout
                0x0000000040080638        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_heap_aligned_alloc
                0x0000000040080638        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_free
                0x0000000040080638        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_aligned_alloc
                0x0000000040080638        0x4 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_malloc
                0x000000004008063c        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_thread_system_pool_assign
                0x000000004008063c        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.boot_banner
                0x000000004008063c        0x4 zephyr/kernel/libkernel.a(banner.c.obj)
                                          0x8 (size before relaxing)
 .literal       0x0000000040080640        0x4 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .literal.char_out
                0x0000000040080644        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.vprintk
                0x0000000040080648        0x4 zephyr/libzephyr.a(printk.c.obj)
                                          0xc (size before relaxing)
 .literal.printk
                0x000000004008064c        0x0 zephyr/libzephyr.a(printk.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_log_early_timestamp
                0x000000004008064c        0x4 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.map_rom_segments
                0x0000000040080650       0x78 zephyr/libzephyr.a(loader.c.obj)
                                         0xec (size before relaxing)
 .literal.__start
                0x00000000400806c8       0x14 zephyr/libzephyr.a(loader.c.obj)
                                         0x40 (size before relaxing)
 .literal.rtc_init
                0x00000000400806dc       0x90 zephyr/libzephyr.a(rtc_init.c.obj)
                                         0xa4 (size before relaxing)
 .literal.rtc_vddsdio_get_config
                0x000000004008076c        0x8 zephyr/libzephyr.a(rtc_init.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_vddsdio_set_config
                0x0000000040080774        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_32k_enable_common
                0x0000000040080774        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_to_pll_mhz
                0x0000000040080780       0x18 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x30 (size before relaxing)
 .literal.rtc_clk_bbpll_disable
                0x0000000040080798        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_clk_32k_enable
                0x000000004008079c        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_32k_enable_external
                0x00000000400807a0        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_8m_enable
                0x00000000400807a0        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_8m_enabled
                0x00000000400807a0        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_8md256_enabled
                0x00000000400807a0        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_slow_src_set
                0x00000000400807a0        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_slow_src_get
                0x00000000400807a0        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_fast_src_set
                0x00000000400807a0        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_fast_src_get
                0x00000000400807a0        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_xtal_freq_get
                0x00000000400807a0        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_mhz_to_config
                0x00000000400807a8        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_get_config
                0x00000000400807a8        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x24 (size before relaxing)
 .literal.rtc_clk_xtal_freq_update
                0x00000000400807b4        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_apb_freq_update
                0x00000000400807b8        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_xtal
                0x00000000400807b8        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x24 (size before relaxing)
 .literal.rtc_clk_cpu_freq_set_config
                0x00000000400807bc       0x28 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xb8 (size before relaxing)
 .literal.rtc_clk_apb_freq_get
                0x00000000400807e4        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x14 (size before relaxing)
 .literal.rtc_clk_xtal_freq_estimate
                0x00000000400807f0       0x18 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0x48 (size before relaxing)
 .literal.rtc_clk_init
                0x0000000040080808       0x1c zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0x98 (size before relaxing)
 .literal.rtc_clk_cal_internal
                0x0000000040080824       0x28 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x5c (size before relaxing)
 .literal.rtc_clk_cal_ratio
                0x000000004008084c        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_cal
                0x000000004008084c        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x14 (size before relaxing)
 .literal.rtc_clk_wait_for_slow_cycle
                0x000000004008084c        0xc zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x30 (size before relaxing)
 .literal.rtc_clk_freq_cal
                0x0000000040080858        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                          0x4 (size before relaxing)
 .literal.ccompare_isr
                0x0000000040080858        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0xc (size before relaxing)
 .literal.sys_clock_set_timeout
                0x0000000040080860        0xc zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x14 (size before relaxing)
 .literal.sys_clock_elapsed
                0x000000004008086c        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0x8 (size before relaxing)
 .literal.console_out
                0x000000004008086c        0x4 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .literal.z_impl_zephyr_fputc
                0x0000000040080870        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.picolibc_put
                0x0000000040080874        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                          0x4 (size before relaxing)
 .literal.__stdout_hook_install
                0x0000000040080874        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                          0x8 (size before relaxing)
 .literal.__l_vfprintf
                0x0000000040080878       0x14 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                                         0x18 (size before relaxing)
 .literal.mmu_hal_unmap_all
                0x000000004008088c        0x4 zephyr/libzephyr.a(mmu_hal.c.obj)
 .literal.wdt_hal_write_protect_disable
                0x0000000040080890        0x4 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_disable
                0x0000000040080894        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.wdt_hal_set_flashboot_en
                0x0000000040080894        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_ll_set_buffer_data
                0x0000000040080894        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_ll_get_buffer_data
                0x0000000040080894        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_configure_host_io_mode
                0x0000000040080894        0x8 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x28 (size before relaxing)
 .literal.spi_flash_hal_common_command
                0x000000004008089c        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_hal_read
                0x000000004008089c        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_hal_erase_sector
                0x000000004008089c        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_erase_block
                0x000000004008089c        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_program_page
                0x000000004008089c        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x10 (size before relaxing)
 .literal.spi_flash_hal_check_status
                0x000000004008089c        0x4 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_resume
                0x00000000400808a0        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_hal_suspend
                0x00000000400808a0        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_encryption_hal_enable
                0x00000000400808a0        0x4 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .literal.spi_flash_encryption_hal_disable
                0x00000000400808a4        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_encryption_hal_prepare
                0x00000000400808a4        0xc zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .literal.spi_flash_encryption_hal_done
                0x00000000400808b0        0x4 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .literal.spi_flash_chip_gd_detect_size
                0x00000000400808b4        0x4 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_gd_get_io_mode
                0x00000000400808b8        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_gd_set_io_mode
                0x00000000400808b8       0x10 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_chip_generic_detect_size
                0x00000000400808c8        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_reset
                0x00000000400808c8        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_config_host_io_mode
                0x00000000400808c8        0xc zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x10 (size before relaxing)
 .literal.spi_flash_chip_generic_read
                0x00000000400808d4        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_chip_generic_write
                0x00000000400808dc        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_get_write_protect
                0x00000000400808dc        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_yield
                0x00000000400808dc        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_read_unique_id
                0x00000000400808dc        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_chip_generic_write_encrypted
                0x00000000400808e4        0x4 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_suspend_cmd_conf
                0x00000000400808e8        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_common_read_qe_sr$constprop$0$isra$0
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_read_status_16b_rdsr_rdsr2
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_common_write_qe_sr$isra$0
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_write_status_16b_wrsr
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_read_status_8b_rdsr2
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_get_io_mode
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_read_status_8b_rdsr
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_write_status_8b_wrsr
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_write_status_8b_wrsr2
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_set_io_mode
                0x00000000400808f0        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_issi_set_io_mode
                0x00000000400808f0        0x8 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_issi_get_io_mode
                0x00000000400808f8        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_winbond_read
                0x00000000400808f8        0x8 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_chip_winbond_erase_block
                0x0000000040080900        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_winbond_erase_sector
                0x0000000040080900        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_winbond_page_program
                0x0000000040080900        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                          0x8 (size before relaxing)
 .literal.memspi_host_read_status_hs
                0x0000000040080900        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                          0x4 (size before relaxing)
 .literal.memspi_host_read_id_hs
                0x0000000040080900        0xc zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                         0x18 (size before relaxing)
 .literal.memspi_host_flush_cache
                0x000000004008090c        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                          0x8 (size before relaxing)
 .literal.memspi_host_init_pointers
                0x000000004008090c        0xc zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_gpio_reserve_pins
                0x0000000040080918        0x4 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .literal.periph_ll_get_rst_en_mask
                0x000000004008091c        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.periph_ll_get_rst_en_reg
                0x0000000040080920        0xc zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.periph_module_enable
                0x000000004008092c       0x18 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.periph_module_disable
                0x0000000040080944        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.esp_rom_spiflash_read_status
                0x0000000040080944       0x10 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_rom_spiflash_wait_idle
                0x0000000040080954        0x8 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                                          0xc (size before relaxing)
 .literal.esp_rom_spiflash_read
                0x000000004008095c       0x3c zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                                         0x58 (size before relaxing)
 .literal.cache_sync
                0x0000000040080998        0x4 zephyr/libzephyr.a(cache_esp32.c.obj)
 .literal.bootloader_random_disable
                0x000000004008099c       0x30 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
                                         0x48 (size before relaxing)
 .literal.bootloader_random_enable
                0x00000000400809cc       0x24 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
                                         0x58 (size before relaxing)
 .iram1.6       0x00000000400809f0       0x4e zephyr/libzephyr.a(soc.c.obj)
                                         0x72 (size before relaxing)
                0x00000000400809f0                __esp_platform_start
 *fill*         0x0000000040080a3e        0x2 
 .iram1.7       0x0000000040080a40       0x1b zephyr/libzephyr.a(soc.c.obj)
                0x0000000040080a40                arch_printk_char_out
 *fill*         0x0000000040080a5b        0x1 
 .iram1.8       0x0000000040080a5c        0xa zephyr/libzephyr.a(flash_ops.c.obj)
                0x0000000040080a5c                spi_flash_guard_set
 *fill*         0x0000000040080a66        0x2 
 .iram1.10      0x0000000040080a68       0x33 zephyr/libzephyr.a(flash_ops.c.obj)
                                         0x37 (size before relaxing)
                0x0000000040080a68                esp_mspi_pin_init
 *fill*         0x0000000040080a9b        0x1 
 .iram1.5       0x0000000040080a9c       0x1e zephyr/libzephyr.a(esp_flash_api.c.obj)
 *fill*         0x0000000040080aba        0x2 
 .iram1.6       0x0000000040080abc       0x44 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.10      0x0000000040080b00       0x54 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.12      0x0000000040080b54       0x6c zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0x70 (size before relaxing)
 .iram1.13      0x0000000040080bc0       0x58 zephyr/libzephyr.a(esp_flash_api.c.obj)
                0x0000000040080bc0                esp_flash_get_physical_size
 .iram1.9       0x0000000040080c18      0x130 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                        0x13c (size before relaxing)
                0x0000000040080c18                esp_flash_init_main
 .iram1.21      0x0000000040080d48      0x110 zephyr/libzephyr.a(esp_flash_api.c.obj)
                0x0000000040080d48                esp_flash_read
 .iram1.3       0x0000000040080e58        0xe zephyr/libzephyr.a(cache_esp32.c.obj)
 *fill*         0x0000000040080e66        0x2 
 .iram1.1       0x0000000040080e68       0x56 zephyr/libzephyr.a(flash_mmap.c.obj)
                0x0000000040080e68                spi_flash_check_and_flush_cache
 *fill*         0x0000000040080ebe        0x2 
 .iram1.8       0x0000000040080ec0       0x10 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.7       0x0000000040080ed0       0x18 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.6       0x0000000040080ee8       0x18 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.1       0x0000000040080f00        0xa zephyr/libzephyr.a(esp_rom_sys.c.obj)
                0x0000000040080f00                esp_rom_set_cpu_ticks_per_us
 *fill*         0x0000000040080f0a        0x2 
 .iram1.7       0x0000000040080f0c      0x1c2 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                        0x1c6 (size before relaxing)
                0x0000000040080f0c                bootloader_flash_execute_command_common
 *fill*         0x00000000400810ce        0x2 
 .iram1.8       0x00000000400810d0       0x20 zephyr/libzephyr.a(bootloader_flash.c.obj)
                0x00000000400810d0                bootloader_execute_flash_command
 .iram1.6       0x00000000400810f0      0x122 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                        0x146 (size before relaxing)
                0x00000000400810f0                bootloader_flash_unlock
 *fill*         0x0000000040081212        0x2 
 .iram1.9       0x0000000040081214       0x26 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x2a (size before relaxing)
                0x0000000040081214                bootloader_flash_read_sfdp
 *fill*         0x000000004008123a        0x2 
 .iram1.10      0x000000004008123c       0x30 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x34 (size before relaxing)
                0x000000004008123c                bootloader_read_flash_id
 .iram1.13      0x000000004008126c       0x92 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0xa6 (size before relaxing)
                0x000000004008126c                bootloader_flash_xmc_startup
 *fill*         0x00000000400812fe        0x2 
 .iram1.6       0x0000000040081300       0x6e zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                0x0000000040081300                bootloader_flash_cs_timing_config
 *fill*         0x000000004008136e        0x2 
 .iram1.8       0x0000000040081370      0x1d0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                0x0000000040081370                bootloader_flash_gpio_config
 .iram1.9       0x0000000040081540       0x95 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                0x0000000040081540                bootloader_flash_dummy_config
 *fill*         0x00000000400815d5        0x3 
 .iram1.0       0x00000000400815d8       0x1e zephyr/libzephyr.a(bootloader_efuse.c.obj)
                0x00000000400815d8                bootloader_common_get_chip_ver_pkg
 *fill*         0x00000000400815f6        0x2 
 .iram1.2       0x00000000400815f8       0x16 zephyr/libzephyr.a(esp_clk.c.obj)
                0x00000000400815f8                esp_clk_apb_freq
 *fill*         0x000000004008160e        0x2 
 .iram1.6       0x0000000040081610       0x32 zephyr/libzephyr.a(rtc_module.c.obj)
                0x0000000040081610                rtc_isr_noniram_disable
 *fill*         0x0000000040081642        0x2 
 .iram1.7       0x0000000040081644       0x1e zephyr/libzephyr.a(rtc_module.c.obj)
                0x0000000040081644                rtc_isr_noniram_enable
 *fill*         0x0000000040081662        0x2 
 .iram1.1       0x0000000040081664       0x58 zephyr/libzephyr.a(esp_mmu_map.c.obj)
                0x0000000040081664                esp_mmu_paddr_find_caps
 .iram1.2       0x00000000400816bc       0x52 zephyr/libzephyr.a(esp_rom_uart.c.obj)
                0x00000000400816bc                esp_rom_uart_tx_wait_idle
 *fill*         0x000000004008170e        0x2 
 .iram1.3       0x0000000040081710       0x50 zephyr/libzephyr.a(esp_rom_uart.c.obj)
                0x0000000040081710                esp_rom_uart_set_clock_baudrate
 .iram1.0       0x0000000040081760       0x18 zephyr/libzephyr.a(efuse_hal.c.obj)
                                         0x1c (size before relaxing)
                0x0000000040081760                efuse_hal_chip_revision
 .iram1.0       0x0000000040081778       0x3e zephyr/libzephyr.a(efuse_hal.c.obj)
                0x0000000040081778                efuse_hal_get_major_chip_version
 *fill*         0x00000000400817b6        0x2 
 .iram1.1       0x00000000400817b8       0x10 zephyr/libzephyr.a(efuse_hal.c.obj)
                0x00000000400817b8                efuse_hal_get_minor_chip_version
 .iram1.4       0x00000000400817c8       0x5a zephyr/libzephyr.a(cache_utils.c.obj)
                                         0x62 (size before relaxing)
                0x00000000400817c8                spi_flash_disable_interrupts_caches_and_other_cpu
 *fill*         0x0000000040081822        0x2 
 .iram1.5       0x0000000040081824       0x56 zephyr/libzephyr.a(cache_utils.c.obj)
                                         0x5e (size before relaxing)
                0x0000000040081824                spi_flash_enable_interrupts_caches_and_other_cpu
 *fill*         0x000000004008187a        0x2 
 .iram1         0x000000004008187c       0x1a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                0x000000004008187c                xtensa_backtrace_get_start
 *fill*         0x0000000040081896        0x2 
 .iram1.1       0x0000000040081898       0x33 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x3a (size before relaxing)
 *fill*         0x00000000400818cb        0x1 
 .iram1.0       0x00000000400818cc       0x16 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x00000000400818cc                default_intr_handler
 *fill*         0x00000000400818e2        0x2 
 .iram1.4       0x00000000400818e4       0xae zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0xb2 (size before relaxing)
                0x00000000400818e4                esp_intr_disable
 *fill*         0x0000000040081992        0x2 
 .iram1.5       0x0000000040081994       0x4e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x5a (size before relaxing)
                0x0000000040081994                esp_intr_noniram_disable
 *fill*         0x00000000400819e2        0x2 
 .iram1.6       0x00000000400819e4       0x3c zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x48 (size before relaxing)
                0x00000000400819e4                esp_intr_noniram_enable
 .iram1.1       0x0000000040081a20       0x11 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x17 (size before relaxing)
 *fill*         0x0000000040081a31        0x0 
 *fill*         0x0000000040081a31        0x0 
 *fill*         0x0000000040081a31        0x3 
 .iram1.11      0x0000000040081a34        0x7 zephyr/libzephyr.a(flash_ops.c.obj)
                0x0000000040081a34                spi_flash_init_chip_state
 *fill*         0x0000000040081a3b        0x0 
 *fill*         0x0000000040081a3b        0x1 
 .iram1.3       0x0000000040081a3c       0x2b zephyr/libzephyr.a(esp_flash_api.c.obj)
 *fill*         0x0000000040081a67        0x1 
 .iram1.4       0x0000000040081a68       0x21 zephyr/libzephyr.a(esp_flash_api.c.obj)
 *fill*         0x0000000040081a89        0x0 
 *fill*         0x0000000040081a89        0x0 
 *fill*         0x0000000040081a89        0x0 
 *fill*         0x0000000040081a89        0x0 
 *fill*         0x0000000040081a89        0x3 
 .iram1.12      0x0000000040081a8c       0x46 zephyr/libzephyr.a(bootloader_flash.c.obj)
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x0 
 *fill*         0x0000000040081ad2        0x2 
 .iram1.0       0x0000000040081ad4       0xaf zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000040081b83        0x0 
 *(SORT_BY_ALIGNMENT(.iram0.literal) SORT_BY_ALIGNMENT(.iram.literal) SORT_BY_ALIGNMENT(.iram.text.literal) SORT_BY_ALIGNMENT(.iram0.text) SORT_BY_ALIGNMENT(.iram.text))
 *fill*         0x0000000040081b83        0x1 
 .iram0.text    0x0000000040081b84       0x2d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040081b84                _Level1Vector
 *fill*         0x0000000040081bb1        0x0 
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040081bb1        0x3 
 .text.arch_cpu_idle
                0x0000000040081bb4        0xb zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                          0xe (size before relaxing)
                0x0000000040081bb4                arch_cpu_idle
 *fill*         0x0000000040081bbf        0x1 
 .text.xtensa_fatal_error
                0x0000000040081bc0       0x26 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x2e (size before relaxing)
                0x0000000040081bc0                xtensa_fatal_error
 *fill*         0x0000000040081be6        0x2 
 .text          0x0000000040081be8      0x21c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040081be8                xtensa_spill_reg_windows
                0x0000000040081c08                xtensa_save_high_regs
                0x0000000040081c50                xtensa_restore_high_regs
                0x0000000040081c85                _restore_context
                0x0000000040081cbc                xtensa_arch_except
                0x0000000040081cbf                xtensa_arch_except_epc
                0x0000000040081cc4                xtensa_arch_kernel_oops
                0x0000000040081cc7                xtensa_arch_kernel_oops_epc
                0x0000000040081ccc                xtensa_switch
 .text.z_irq_spurious
                0x0000000040081e04       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040081e04                z_irq_spurious
 *fill*         0x0000000040081e16        0x2 
 .text.arch_new_thread
                0x0000000040081e18       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                0x0000000040081e18                arch_new_thread
 .text.return_to
                0x0000000040081e50       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x18 (size before relaxing)
 .text.xtensa_is_outside_stack_bounds
                0x0000000040081e64       0x3d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040081e64                xtensa_is_outside_stack_bounds
 *fill*         0x0000000040081ea1        0x3 
 .text.xtensa_is_frame_pointer_valid
                0x0000000040081ea4       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040081ea4                xtensa_is_frame_pointer_valid
 .text.xtensa_dump_stack
                0x0000000040081ecc        0xa zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0xe (size before relaxing)
                0x0000000040081ecc                xtensa_dump_stack
 *fill*         0x0000000040081ed6        0x2 
 .text.xtensa_int2_c
                0x0000000040081ed8       0x5a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040081ed8                xtensa_int2_c
 *fill*         0x0000000040081f32        0x2 
 .text.xtensa_int3_c
                0x0000000040081f34       0x82 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040081f34                xtensa_int3_c
 *fill*         0x0000000040081fb6        0x2 
 .text.xtensa_int4_c
                0x0000000040081fb8       0x6a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040081fb8                xtensa_int4_c
 *fill*         0x0000000040082022        0x2 
 .text.xtensa_int5_c
                0x0000000040082024       0x5e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040082024                xtensa_int5_c
 *fill*         0x0000000040082082        0x2 
 .text.xtensa_int6_c
                0x0000000040082084       0x15 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040082084                xtensa_int6_c
 *fill*         0x0000000040082099        0x3 
 .text.xtensa_int7_c
                0x000000004008209c       0x36 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x000000004008209c                xtensa_int7_c
 *fill*         0x00000000400820d2        0x2 
 .text.xtensa_excint1_c
                0x00000000400820d4      0x1be zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x1c6 (size before relaxing)
                0x00000000400820d4                xtensa_excint1_c
 *fill*         0x0000000040082292        0x2 
 .text.z_prep_c
                0x0000000040082294       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                         0x14 (size before relaxing)
                0x0000000040082294                z_prep_c
 .text.xtensa_cpu_process_stack_pc
                0x00000000400822a4       0x2b zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 *fill*         0x00000000400822cf        0x1 
 .text.xtensa_ptr_executable
                0x00000000400822d0       0x41 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 *fill*         0x0000000040082311        0x3 
 .text.xtensa_stack_ptr_is_sane
                0x0000000040082314       0x2c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .text.xtensa_backtrace_get_next_frame
                0x0000000040082340       0x3e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x4a (size before relaxing)
                0x0000000040082340                xtensa_backtrace_get_next_frame
 *fill*         0x000000004008237e        0x2 
 .text.xtensa_backtrace_print
                0x0000000040082380       0xdf zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                        0x103 (size before relaxing)
                0x0000000040082380                xtensa_backtrace_print
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *fill*         0x000000004008245f        0x0 
 *libkernel.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004008245f        0x1 
 .text.k_sys_fatal_error_handler
                0x0000000040082460        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
                0x0000000040082460                k_sys_fatal_error_handler
 .text.z_fatal_error
                0x0000000040082468       0x22 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040082468                z_fatal_error
 *fill*         0x000000004008248a        0x2 
 .text.z_sys_init_run_level
                0x000000004008248c       0x30 zephyr/kernel/libkernel.a(init.c.obj)
 .text.bg_thread_main
                0x00000000400824bc       0x9e zephyr/kernel/libkernel.a(init.c.obj)
                                         0xb6 (size before relaxing)
 *fill*         0x000000004008255a        0x2 
 .text.z_early_memset
                0x000000004008255c       0x12 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000004008255c                z_early_memset
 *fill*         0x000000004008256e        0x2 
 .text.z_bss_zero
                0x0000000040082570       0x13 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040082570                z_bss_zero
 *fill*         0x0000000040082583        0x1 
 .text.z_init_cpu
                0x0000000040082584       0x5b zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000040082584                z_init_cpu
 *fill*         0x00000000400825df        0x1 
 .text.z_cstart
                0x00000000400825e0       0x97 zephyr/kernel/libkernel.a(init.c.obj)
                                         0xbb (size before relaxing)
                0x00000000400825e0                z_cstart
 *fill*         0x0000000040082677        0x1 
 .text.k_heap_init
                0x0000000040082678       0x17 zephyr/kernel/libkernel.a(kheap.c.obj)
                0x0000000040082678                k_heap_init
 *fill*         0x000000004008268f        0x1 
 .text.statics_init
                0x0000000040082690       0x22 zephyr/kernel/libkernel.a(kheap.c.obj)
 *fill*         0x00000000400826b2        0x2 
 .text.k_heap_aligned_alloc
                0x00000000400826b4       0x5a zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x62 (size before relaxing)
                0x00000000400826b4                k_heap_aligned_alloc
 *fill*         0x000000004008270e        0x2 
 .text.k_heap_free
                0x0000000040082710       0x28 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x30 (size before relaxing)
                0x0000000040082710                k_heap_free
 .text.idle     0x0000000040082738        0xc zephyr/kernel/libkernel.a(idle.c.obj)
                                          0xf (size before relaxing)
                0x0000000040082738                idle
 *fill*         0x0000000040082744        0x0 
 .text.z_impl_k_thread_start
                0x0000000040082744        0xa zephyr/kernel/libkernel.a(thread.c.obj)
                                          0xe (size before relaxing)
                0x0000000040082744                z_impl_k_thread_start
 *fill*         0x000000004008274e        0x2 
 .text.z_setup_new_thread
                0x0000000040082750       0x5d zephyr/kernel/libkernel.a(thread.c.obj)
                0x0000000040082750                z_setup_new_thread
 *fill*         0x00000000400827ad        0x3 
 .text.unpend_thread_no_timeout
                0x00000000400827b0       0x19 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1d (size before relaxing)
 *fill*         0x00000000400827c9        0x3 
 .text.update_cache
                0x00000000400827cc       0x4a zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x0000000040082816        0x2 
 .text.unready_thread
                0x0000000040082818       0x2e zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x32 (size before relaxing)
 *fill*         0x0000000040082846        0x2 
 .text.z_swap   0x0000000040082848       0x3a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x3e (size before relaxing)
 *fill*         0x0000000040082882        0x2 
 .text.ready_thread
                0x0000000040082884       0x6e zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x00000000400828f2        0x2 
 .text.z_thread_halt
                0x00000000400828f4       0xe0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0xf8 (size before relaxing)
 .text.add_to_waitq_locked
                0x00000000400829d4       0x58 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x5c (size before relaxing)
 .text.move_thread_to_end_of_prio_q
                0x0000000040082a2c       0x78 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x7c (size before relaxing)
                0x0000000040082a2c                move_thread_to_end_of_prio_q
 .text.z_ready_thread
                0x0000000040082aa4       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040082aa4                z_ready_thread
 *fill*         0x0000000040082ab7        0x1 
 .text.z_impl_k_thread_suspend
                0x0000000040082ab8       0x29 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040082ab8                z_impl_k_thread_suspend
 *fill*         0x0000000040082ae1        0x3 
 .text.z_unpend_thread_no_timeout
                0x0000000040082ae4       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1c (size before relaxing)
                0x0000000040082ae4                z_unpend_thread_no_timeout
 .text.z_sched_wake_thread
                0x0000000040082afc       0x39 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x40 (size before relaxing)
                0x0000000040082afc                z_sched_wake_thread
 *fill*         0x0000000040082b35        0x3 
 .text.z_thread_timeout
                0x0000000040082b38        0xd zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
                0x0000000040082b38                z_thread_timeout
 *fill*         0x0000000040082b45        0x3 
 .text.z_pend_curr
                0x0000000040082b48       0x34 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x3c (size before relaxing)
                0x0000000040082b48                z_pend_curr
 .text.z_unpend_thread
                0x0000000040082b7c       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x17 (size before relaxing)
                0x0000000040082b7c                z_unpend_thread
 *fill*         0x0000000040082b8c        0x0 
 .text.z_reschedule
                0x0000000040082b8c       0x2b zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2f (size before relaxing)
                0x0000000040082b8c                z_reschedule
 *fill*         0x0000000040082bb7        0x1 
 .text.z_sched_start
                0x0000000040082bb8       0x32 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x36 (size before relaxing)
                0x0000000040082bb8                z_sched_start
 *fill*         0x0000000040082bea        0x2 
 .text.z_reschedule_irqlock
                0x0000000040082bec       0x40 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x44 (size before relaxing)
                0x0000000040082bec                z_reschedule_irqlock
 .text.k_sched_lock
                0x0000000040082c2c       0x1b zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040082c2c                k_sched_lock
 *fill*         0x0000000040082c47        0x1 
 .text.k_sched_unlock
                0x0000000040082c48       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2e (size before relaxing)
                0x0000000040082c48                k_sched_unlock
 *fill*         0x0000000040082c6e        0x2 
 .text.z_swap_next_thread
                0x0000000040082c70        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040082c70                z_swap_next_thread
 *fill*         0x0000000040082c7a        0x2 
 .text.z_get_next_switch_handle
                0x0000000040082c7c       0x14 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040082c7c                z_get_next_switch_handle
 .text.z_unpend_all
                0x0000000040082c90       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2a (size before relaxing)
                0x0000000040082c90                z_unpend_all
 *fill*         0x0000000040082cb6        0x2 
 .text.z_sched_init
                0x0000000040082cb8        0xf zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040082cb8                z_sched_init
 *fill*         0x0000000040082cc7        0x1 
 .text.z_impl_k_yield
                0x0000000040082cc8       0x7a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x7e (size before relaxing)
                0x0000000040082cc8                z_impl_k_yield
 *fill*         0x0000000040082d42        0x2 
 .text.z_tick_sleep
                0x0000000040082d44       0x6a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x76 (size before relaxing)
 *fill*         0x0000000040082dae        0x2 
 .text.z_impl_k_sleep
                0x0000000040082db0       0x42 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040082db0                z_impl_k_sleep
 *fill*         0x0000000040082df2        0x2 
 .text.z_impl_k_sched_current_thread_query
                0x0000000040082df4        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040082df4                z_impl_k_sched_current_thread_query
 *fill*         0x0000000040082dfe        0x2 
 .text.z_thread_abort
                0x0000000040082e00       0x2f zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x36 (size before relaxing)
                0x0000000040082e00                z_thread_abort
 *fill*         0x0000000040082e2f        0x1 
 .text.z_impl_k_thread_abort
                0x0000000040082e30        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xe (size before relaxing)
                0x0000000040082e30                z_impl_k_thread_abort
 *fill*         0x0000000040082e3a        0x2 
 .text.slice_timeout
                0x0000000040082e3c       0x1e zephyr/kernel/libkernel.a(timeslicing.c.obj)
 *fill*         0x0000000040082e5a        0x2 
 .text.thread_is_sliceable
                0x0000000040082e5c       0x45 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                0x0000000040082e5c                thread_is_sliceable
 *fill*         0x0000000040082ea1        0x3 
 .text.z_reset_time_slice
                0x0000000040082ea4       0x3f zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x47 (size before relaxing)
                0x0000000040082ea4                z_reset_time_slice
 *fill*         0x0000000040082ee3        0x1 
 .text.z_time_slice
                0x0000000040082ee4       0x3b zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x42 (size before relaxing)
                0x0000000040082ee4                z_time_slice
 *fill*         0x0000000040082f1f        0x1 
 .text.elapsed  0x0000000040082f20       0x14 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x18 (size before relaxing)
 .text.remove_timeout
                0x0000000040082f34       0x3a zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x0000000040082f6e        0x2 
 .text.next_timeout
                0x0000000040082f70       0x4b zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x0000000040082fbb        0x1 
 .text.z_add_timeout
                0x0000000040082fbc      0x10c zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x114 (size before relaxing)
                0x0000000040082fbc                z_add_timeout
 .text.z_abort_timeout
                0x00000000400830c8       0x1e zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x22 (size before relaxing)
                0x00000000400830c8                z_abort_timeout
 *fill*         0x00000000400830e6        0x2 
 .text.sys_clock_announce
                0x00000000400830e8       0xd5 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0xdd (size before relaxing)
                0x00000000400830e8                sys_clock_announce
 *fill*         0x00000000400831bd        0x3 
 .text.sys_clock_tick_get
                0x00000000400831c0       0x28 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x2c (size before relaxing)
                0x00000000400831c0                sys_clock_tick_get
 .text.sys_clock_tick_get_32
                0x00000000400831e8        0xa zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0xd (size before relaxing)
                0x00000000400831e8                sys_clock_tick_get_32
 *fill*         0x00000000400831f2        0x2 
 .text.sys_timepoint_calc
                0x00000000400831f4       0x4a zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x4e (size before relaxing)
                0x00000000400831f4                sys_timepoint_calc
 *fill*         0x000000004008323e        0x2 
 .text.sys_timepoint_timeout
                0x0000000040083240       0x4a zephyr/kernel/libkernel.a(timeout.c.obj)
                0x0000000040083240                sys_timepoint_timeout
 *fill*         0x000000004008328a        0x2 
 .text.z_heap_aligned_alloc
                0x000000004008328c       0x25 zephyr/kernel/libkernel.a(mempool.c.obj)
                                         0x29 (size before relaxing)
 *fill*         0x00000000400832b1        0x3 
 .text.k_free   0x00000000400832b4       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x00000000400832b4                k_free
 .text.k_aligned_alloc
                0x00000000400832c8       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x00000000400832c8                k_aligned_alloc
 .text.k_malloc
                0x00000000400832dc       0x11 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x00000000400832dc                k_malloc
 *fill*         0x00000000400832ed        0x3 
 .text.k_thread_system_pool_assign
                0x00000000400832f0        0xb zephyr/kernel/libkernel.a(mempool.c.obj)
                0x00000000400832f0                k_thread_system_pool_assign
 *fill*         0x00000000400832fb        0x1 
 .text.boot_banner
                0x00000000400832fc        0xb zephyr/kernel/libkernel.a(banner.c.obj)
                                          0xe (size before relaxing)
                0x00000000400832fc                boot_banner
 *fill*         0x0000000040083307        0x1 
 .text.z_device_state_init
                0x0000000040083308        0x5 zephyr/kernel/libkernel.a(device.c.obj)
                0x0000000040083308                z_device_state_init
 *fill*         0x000000004008330d        0x3 
 .text.z_impl_device_is_ready
                0x0000000040083310       0x1a zephyr/kernel/libkernel.a(device.c.obj)
                0x0000000040083310                z_impl_device_is_ready
 *fill*         0x000000004008332a        0x2 
 .text.arch_system_halt
                0x000000004008332c        0x9 zephyr/kernel/libkernel.a(fatal.c.obj)
                0x000000004008332c                arch_system_halt
 *fill*         0x0000000040083335        0x0 
 *fill*         0x0000000040083335        0x3 
 .text.do_device_init
                0x0000000040083338       0x33 zephyr/kernel/libkernel.a(init.c.obj)
 *fill*         0x000000004008336b        0x0 
 *fill*         0x000000004008336b        0x0 
 *fill*         0x000000004008336b        0x0 
 *fill*         0x000000004008336b        0x0 
 *fill*         0x000000004008336b        0x0 
 *fill*         0x000000004008336b        0x1 
 .text.z_init_static
                0x000000004008336c        0x5 zephyr/kernel/libkernel.a(init_static.c.obj)
                0x000000004008336c                z_init_static
 *fill*         0x0000000040083371        0x0 
 *fill*         0x0000000040083371        0x0 
 *fill*         0x0000000040083371        0x0 
 *fill*         0x0000000040083371        0x0 
 *fill*         0x0000000040083371        0x3 
 .text.k_is_in_isr
                0x0000000040083374       0x11 zephyr/kernel/libkernel.a(thread.c.obj)
                0x0000000040083374                k_is_in_isr
 *fill*         0x0000000040083385        0x0 
 *fill*         0x0000000040083385        0x0 
 *fill*         0x0000000040083385        0x3 
 .text.sys_dlist_remove
                0x0000000040083388       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *fill*         0x000000004008339b        0x0 
 *libgcc.a:lib2funcs.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:windowspill_asm.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004008339b        0x1 
 .text          0x000000004008339c      0x137 zephyr/libzephyr.a(windowspill_asm.S.obj)
                0x000000004008339c                xthal_window_spill_nw
                0x000000004008339c                xthal_spill_registers_into_stack_nw
                0x00000000400834b0                xthal_window_spill
 *fill*         0x00000000400834d3        0x0 
 *libzephyr.a:cbprintf_complete.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:printk.*(SORT_BY_ALIGNMENT(.literal.printk) SORT_BY_ALIGNMENT(.literal.vprintk) SORT_BY_ALIGNMENT(.literal.char_out) SORT_BY_ALIGNMENT(.text.printk) SORT_BY_ALIGNMENT(.text.vprintk) SORT_BY_ALIGNMENT(.text.char_out))
 *fill*         0x00000000400834d3        0x1 
 .text.char_out
                0x00000000400834d4       0x11 zephyr/libzephyr.a(printk.c.obj)
 *fill*         0x00000000400834e5        0x3 
 .text.vprintk  0x00000000400834e8       0x28 zephyr/libzephyr.a(printk.c.obj)
                                         0x2c (size before relaxing)
                0x00000000400834e8                vprintk
 .text.printk   0x0000000040083510       0x22 zephyr/libzephyr.a(printk.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040083510                printk
 *fill*         0x0000000040083532        0x0 
 *fill*         0x0000000040083532        0x0 
 *libzephyr.a:log_noos.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040083532        0x2 
 .text.esp_log_early_timestamp
                0x0000000040083534       0x1d zephyr/libzephyr.a(log_noos.c.obj)
                0x0000000040083534                esp_log_timestamp
                0x0000000040083534                esp_log_early_timestamp
 *fill*         0x0000000040083551        0x0 
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_msg.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_list.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040083551        0x3 
 .text.map_rom_segments
                0x0000000040083554      0x397 zephyr/libzephyr.a(loader.c.obj)
                                        0x3af (size before relaxing)
                0x0000000040083554                map_rom_segments
 *fill*         0x00000000400838eb        0x1 
 .text.__start  0x00000000400838ec       0x4e zephyr/libzephyr.a(loader.c.obj)
                                         0x62 (size before relaxing)
                0x00000000400838ec                __start
 *fill*         0x000000004008393a        0x0 
 *fill*         0x000000004008393a        0x0 
 *libzephyr.a:rtc_*.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004008393a        0x2 
 .text.rtc_init
                0x000000004008393c      0x3a0 zephyr/libzephyr.a(rtc_init.c.obj)
                0x000000004008393c                rtc_init
 .text.rtc_vddsdio_get_config
                0x0000000040083cdc       0x97 zephyr/libzephyr.a(rtc_init.c.obj)
                0x0000000040083cdc                rtc_vddsdio_get_config
 *fill*         0x0000000040083d73        0x1 
 .text.rtc_vddsdio_set_config
                0x0000000040083d74       0x48 zephyr/libzephyr.a(rtc_init.c.obj)
                0x0000000040083d74                rtc_vddsdio_set_config
 .text.rtc_clk_32k_enable_common
                0x0000000040083dbc       0x89 zephyr/libzephyr.a(rtc_clk.c.obj)
 *fill*         0x0000000040083e45        0x3 
 .text.rtc_clk_cpu_freq_to_pll_mhz
                0x0000000040083e48       0xa0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xa8 (size before relaxing)
 .text.rtc_clk_bbpll_disable
                0x0000000040083ee8       0x3c zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enable
                0x0000000040083f24       0x35 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x39 (size before relaxing)
                0x0000000040083f24                rtc_clk_32k_enable
 *fill*         0x0000000040083f59        0x3 
 .text.rtc_clk_32k_enable_external
                0x0000000040083f5c        0xa zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0xe (size before relaxing)
                0x0000000040083f5c                rtc_clk_32k_enable_external
 *fill*         0x0000000040083f66        0x2 
 .text.rtc_clk_8m_enable
                0x0000000040083f68       0x82 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000040083f68                rtc_clk_8m_enable
 *fill*         0x0000000040083fea        0x2 
 .text.rtc_clk_8m_enabled
                0x0000000040083fec       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000040083fec                rtc_clk_8m_enabled
 *fill*         0x0000000040084001        0x3 
 .text.rtc_clk_8md256_enabled
                0x0000000040084004       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000040084004                rtc_clk_8md256_enabled
 *fill*         0x0000000040084019        0x3 
 .text.rtc_clk_slow_src_set
                0x000000004008401c       0x7c zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004008401c                rtc_clk_slow_src_set
 .text.rtc_clk_slow_src_get
                0x0000000040084098       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000040084098                rtc_clk_slow_src_get
 .text.rtc_clk_fast_src_set
                0x00000000400840a8       0x44 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x47 (size before relaxing)
                0x00000000400840a8                rtc_clk_fast_src_set
 *fill*         0x00000000400840ec        0x0 
 .text.rtc_clk_fast_src_get
                0x00000000400840ec       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400840ec                rtc_clk_fast_src_get
 .text.rtc_clk_xtal_freq_get
                0x00000000400840fc       0x26 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400840fc                rtc_get_xtal
                0x00000000400840fc                rtc_clk_xtal_freq_get
 *fill*         0x0000000040084122        0x2 
 .text.rtc_clk_cpu_freq_mhz_to_config
                0x0000000040084124       0x58 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x5c (size before relaxing)
                0x0000000040084124                rtc_clk_cpu_freq_mhz_to_config
 .text.rtc_clk_cpu_freq_get_config
                0x000000004008417c       0xa0 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004008417c                rtc_clk_cpu_freq_get_config
 .text.rtc_clk_xtal_freq_update
                0x000000004008421c       0x29 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004008421c                rtc_clk_xtal_freq_update
 *fill*         0x0000000040084245        0x3 
 .text.rtc_clk_apb_freq_update
                0x0000000040084248       0x19 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000040084248                rtc_clk_apb_freq_update
 *fill*         0x0000000040084261        0x3 
 .text.rtc_clk_cpu_freq_to_xtal
                0x0000000040084264       0x6b zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x73 (size before relaxing)
                0x0000000040084264                rtc_clk_cpu_freq_to_xtal
 *fill*         0x00000000400842cf        0x1 
 .text.rtc_clk_cpu_freq_set_config
                0x00000000400842d0      0x2ac zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x2c8 (size before relaxing)
                0x00000000400842d0                rtc_clk_cpu_freq_set_config
 .text.rtc_clk_apb_freq_get
                0x000000004008457c       0x2a zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004008457c                rtc_clk_apb_freq_get
 *fill*         0x00000000400845a6        0x2 
 .text.rtc_clk_xtal_freq_estimate
                0x00000000400845a8       0xb0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0xc8 (size before relaxing)
 .text.rtc_clk_init
                0x0000000040084658      0x1ba zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                        0x1ee (size before relaxing)
                0x0000000040084658                rtc_clk_init
 *fill*         0x0000000040084812        0x2 
 .text.rtc_clk_cal_internal
                0x0000000040084814      0x1d1 zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x1d9 (size before relaxing)
 *fill*         0x00000000400849e5        0x3 
 .text.rtc_clk_cal_ratio
                0x00000000400849e8       0x20 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x24 (size before relaxing)
                0x00000000400849e8                rtc_clk_cal_ratio
 .text.rtc_clk_cal
                0x0000000040084a08       0xb2 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0xba (size before relaxing)
                0x0000000040084a08                rtc_clk_cal
 *fill*         0x0000000040084aba        0x2 
 .text.rtc_clk_wait_for_slow_cycle
                0x0000000040084abc       0xa6 zephyr/libzephyr.a(rtc_time.c.obj)
                0x0000000040084abc                rtc_clk_wait_for_slow_cycle
 *fill*         0x0000000040084b62        0x2 
 .text.rtc_clk_freq_cal
                0x0000000040084b64       0x1c zephyr/libzephyr.a(rtc_time.c.obj)
                0x0000000040084b64                rtc_clk_freq_cal
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *fill*         0x0000000040084b80        0x0 
 *libzephyr.a:cpu_util.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__timer.a:xtensa_sys_timer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.ccompare_isr
                0x0000000040084b80       0x32 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x0000000040084bb2        0x2 
 .text.sys_clock_set_timeout
                0x0000000040084bb4       0x68 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040084bb4                sys_clock_set_timeout
 .text.sys_clock_elapsed
                0x0000000040084c1c       0x22 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040084c1c                sys_clock_elapsed
 *fill*         0x0000000040084c3e        0x2 
 .text.sys_clock_driver_init
                0x0000000040084c40       0x23 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *fill*         0x0000000040084c63        0x0 
 *libdrivers__console.a:uart_console.*(SORT_BY_ALIGNMENT(.literal.console_out) SORT_BY_ALIGNMENT(.text.console_out))
 *fill*         0x0000000040084c63        0x1 
 .text.console_out
                0x0000000040084c64       0x22 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 *fill*         0x0000000040084c86        0x0 
 *liblib__libc__picolib.a:abort.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *liblib__libc__minimal.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *liblib__libc__newlib.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libc.a:*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040084c86        0x2 
 .text.z_impl_zephyr_fputc
                0x0000000040084c88       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000040084c88                z_impl_zephyr_fputc
 *fill*         0x0000000040084c9a        0x2 
 .text.picolibc_put
                0x0000000040084c9c       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 *fill*         0x0000000040084cae        0x2 
 .text.__stdout_hook_install
                0x0000000040084cb0       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000040084cb0                __stdout_hook_install
 .text.__l_vfprintf
                0x0000000040084cc8      0x5ba /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                0x0000000040084cc8                __l_vfprintf
 *fill*         0x0000000040085282        0x0 
 *fill*         0x0000000040085282        0x0 
 *fill*         0x0000000040085282        0x2 
 .text.__assert_no_args
                0x0000000040085284        0x3 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000040085284                __assert_no_args
 *fill*         0x0000000040085287        0x1 
 .text.__ultoa_invert
                0x0000000040085288      0x116 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 *fill*         0x000000004008539e        0x0 
 *libphy.a:(SORT_BY_ALIGNMENT(.phyiram) SORT_BY_ALIGNMENT(.phyiram.*))
 *libgcov.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_rom_patch.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mmu_psram_flash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_psram_impl_quad.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_psram_impl_octal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mmu_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004008539e        0x2 
 .text.mmu_hal_unmap_all
                0x00000000400853a0       0x1a zephyr/libzephyr.a(mmu_hal.c.obj)
                0x00000000400853a0                mmu_hal_unmap_all
 *fill*         0x00000000400853ba        0x0 
 *libzephyr.a:cache_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:ledc_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:i2c_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:wdt_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400853ba        0x2 
 .text.wdt_hal_write_protect_disable
                0x00000000400853bc       0x1d zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x00000000400853bc                wdt_hal_write_protect_disable
 *fill*         0x00000000400853d9        0x3 
 .text.wdt_hal_disable
                0x00000000400853dc       0x31 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x00000000400853dc                wdt_hal_disable
 *fill*         0x000000004008540d        0x3 
 .text.wdt_hal_set_flashboot_en
                0x0000000040085410       0x42 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x0000000040085410                wdt_hal_set_flashboot_en
 *fill*         0x0000000040085452        0x0 
 *fill*         0x0000000040085452        0x2 
 .text.wdt_hal_write_protect_enable
                0x0000000040085454       0x1c zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x0000000040085454                wdt_hal_write_protect_enable
 *fill*         0x0000000040085470        0x0 
 *libzephyr.a:spi_flash_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 .text.spi_flash_ll_set_buffer_data
                0x0000000040085470       0x40 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spi_flash_ll_get_buffer_data
                0x00000000400854b0       0x58 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spi_flash_hal_configure_host_io_mode
                0x0000000040085508      0x208 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085508                spi_flash_hal_configure_host_io_mode
 .text.spi_flash_hal_common_command
                0x0000000040085710      0x168 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                        0x170 (size before relaxing)
                0x0000000040085710                spi_flash_hal_common_command
 .text.spi_flash_hal_read
                0x0000000040085878       0xbc zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085878                spi_flash_hal_read
 .text.spi_flash_hal_erase_sector
                0x0000000040085934       0x5f zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085934                spi_flash_hal_erase_sector
 *fill*         0x0000000040085993        0x1 
 .text.spi_flash_hal_erase_block
                0x0000000040085994       0x58 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085994                spi_flash_hal_erase_block
 .text.spi_flash_hal_program_page
                0x00000000400859ec       0x7a zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x00000000400859ec                spi_flash_hal_program_page
 *fill*         0x0000000040085a66        0x2 
 .text.spi_flash_hal_check_status
                0x0000000040085a68       0x33 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085a68                spi_flash_hal_check_status
 *fill*         0x0000000040085a9b        0x1 
 .text.spi_flash_hal_resume
                0x0000000040085a9c        0x6 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x9 (size before relaxing)
                0x0000000040085a9c                spi_flash_hal_resume
 *fill*         0x0000000040085aa2        0x2 
 .text.spi_flash_hal_suspend
                0x0000000040085aa4        0x6 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x9 (size before relaxing)
                0x0000000040085aa4                spi_flash_hal_suspend
 *fill*         0x0000000040085aaa        0x2 
 .text.spi_flash_hal_poll_cmd_done
                0x0000000040085aac        0xf zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085aac                spi_flash_hal_poll_cmd_done
 *fill*         0x0000000040085abb        0x1 
 .text.spi_flash_hal_device_config
                0x0000000040085abc       0xdb zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085abc                spi_flash_hal_device_config
 *fill*         0x0000000040085b97        0x1 
 .text.spi_flash_hal_erase_chip
                0x0000000040085b98       0x23 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085b98                spi_flash_hal_erase_chip
 *fill*         0x0000000040085bbb        0x0 
 *fill*         0x0000000040085bbb        0x0 
 *fill*         0x0000000040085bbb        0x1 
 .text.spi_flash_hal_set_write_protect
                0x0000000040085bbc       0x30 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085bbc                spi_flash_hal_set_write_protect
 *fill*         0x0000000040085bec        0x0 
 .text.spi_flash_hal_setup_read_suspend
                0x0000000040085bec        0x7 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040085bec                spi_flash_hal_setup_read_suspend
 *fill*         0x0000000040085bf3        0x0 
 *fill*         0x0000000040085bf3        0x0 
 *libzephyr.a:spi_flash_encrypt_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040085bf3        0x1 
 .text.spi_flash_encryption_hal_enable
                0x0000000040085bf4       0x18 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040085bf4                spi_flash_encryption_hal_enable
 .text.spi_flash_encryption_hal_disable
                0x0000000040085c0c       0x18 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040085c0c                spi_flash_encryption_hal_disable
 .text.spi_flash_encryption_hal_prepare
                0x0000000040085c24       0x2c zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040085c24                spi_flash_encryption_hal_prepare
 .text.spi_flash_encryption_hal_done
                0x0000000040085c50       0x10 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040085c50                spi_flash_encryption_hal_done
 *fill*         0x0000000040085c60        0x0 
 .text.spi_flash_encryption_hal_destroy
                0x0000000040085c60        0x5 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040085c60                spi_flash_encryption_hal_destroy
 *fill*         0x0000000040085c65        0x3 
 .text.spi_flash_encryption_hal_check
                0x0000000040085c68        0xf zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040085c68                spi_flash_encryption_hal_check
 *libzephyr.a:lldesc.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_write) SORT_BY_ALIGNMENT(.text.esp_log_write))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_timestamp) SORT_BY_ALIGNMENT(.text.esp_log_timestamp))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_early_timestamp) SORT_BY_ALIGNMENT(.text.esp_log_early_timestamp))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_impl_lock) SORT_BY_ALIGNMENT(.text.esp_log_impl_lock))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_impl_lock_timeout) SORT_BY_ALIGNMENT(.text.esp_log_impl_lock_timeout))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_impl_unlock) SORT_BY_ALIGNMENT(.text.esp_log_impl_unlock))
 *libzephyr.a:spi_flash_chip_boya.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_chip_gd.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040085c77        0x1 
 .text.spi_flash_chip_gd_detect_size
                0x0000000040085c78       0x2d zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040085c78                spi_flash_chip_gd_detect_size
 *fill*         0x0000000040085ca5        0x3 
 .text.spi_flash_chip_gd_get_io_mode
                0x0000000040085ca8       0x1e zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040085ca8                spi_flash_chip_gd_get_io_mode
 *fill*         0x0000000040085cc6        0x2 
 .text.spi_flash_chip_gd_set_io_mode
                0x0000000040085cc8       0x3e zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040085cc8                spi_flash_chip_gd_set_io_mode
 *fill*         0x0000000040085d06        0x2 
 .text.spi_flash_chip_gd_get_caps
                0x0000000040085d08       0x19 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040085d08                spi_flash_chip_gd_get_caps
 *fill*         0x0000000040085d21        0x0 
 *fill*         0x0000000040085d21        0x0 
 *fill*         0x0000000040085d21        0x3 
 .text.spi_flash_chip_gd_probe
                0x0000000040085d24       0x22 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040085d24                spi_flash_chip_gd_probe
 *fill*         0x0000000040085d46        0x0 
 *libzephyr.a:spi_flash_chip_generic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040085d46        0x2 
 .text.spi_flash_chip_generic_detect_size
                0x0000000040085d48       0x41 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040085d48                spi_flash_chip_generic_detect_size
 *fill*         0x0000000040085d89        0x3 
 .text.spi_flash_chip_generic_reset
                0x0000000040085d8c       0x55 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040085d8c                spi_flash_chip_generic_reset
 *fill*         0x0000000040085de1        0x3 
 .text.spi_flash_chip_generic_config_host_io_mode
                0x0000000040085de4       0xfa zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040085de4                spi_flash_chip_generic_config_host_io_mode
 *fill*         0x0000000040085ede        0x2 
 .text.spi_flash_chip_generic_read
                0x0000000040085ee0       0x9a zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x9e (size before relaxing)
                0x0000000040085ee0                spi_flash_chip_generic_read
 *fill*         0x0000000040085f7a        0x2 
 .text.spi_flash_chip_generic_write
                0x0000000040085f7c       0x82 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040085f7c                spi_flash_chip_generic_write
 *fill*         0x0000000040085ffe        0x2 
 .text.spi_flash_chip_generic_get_write_protect
                0x0000000040086000       0x29 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040086000                spi_flash_chip_generic_get_write_protect
 *fill*         0x0000000040086029        0x3 
 .text.spi_flash_chip_generic_yield
                0x000000004008602c       0x44 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x48 (size before relaxing)
                0x000000004008602c                spi_flash_chip_generic_yield
 .text.spi_flash_chip_generic_read_unique_id
                0x0000000040086070       0x79 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086070                spi_flash_chip_generic_read_unique_id
 *fill*         0x00000000400860e9        0x3 
 .text.spi_flash_chip_generic_write_encrypted
                0x00000000400860ec       0xa0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x00000000400860ec                spi_flash_chip_generic_write_encrypted
 .text.spi_flash_chip_generic_suspend_cmd_conf
                0x000000004008618c       0x3d zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004008618c                spi_flash_chip_generic_suspend_cmd_conf
 *fill*         0x00000000400861c9        0x3 
 .text.spi_flash_common_read_qe_sr$constprop$0$isra$0
                0x00000000400861cc       0x31 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 *fill*         0x00000000400861fd        0x3 
 .text.spi_flash_common_read_status_16b_rdsr_rdsr2
                0x0000000040086200       0x30 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x34 (size before relaxing)
                0x0000000040086200                spi_flash_common_read_status_16b_rdsr_rdsr2
 .text.spi_flash_common_write_qe_sr$isra$0
                0x0000000040086230       0x2e zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 *fill*         0x000000004008625e        0x2 
 .text.spi_flash_common_write_status_16b_wrsr
                0x0000000040086260       0x15 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086260                spi_flash_common_write_status_16b_wrsr
 *fill*         0x0000000040086275        0x3 
 .text.spi_flash_common_read_status_8b_rdsr2
                0x0000000040086278       0x10 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x14 (size before relaxing)
                0x0000000040086278                spi_flash_common_read_status_8b_rdsr2
 .text.spi_flash_chip_generic_get_io_mode
                0x0000000040086288       0x1e zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086288                spi_flash_chip_generic_get_io_mode
 *fill*         0x00000000400862a6        0x2 
 .text.spi_flash_common_read_status_8b_rdsr
                0x00000000400862a8       0x10 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x14 (size before relaxing)
                0x00000000400862a8                spi_flash_common_read_status_8b_rdsr
 .text.spi_flash_common_write_status_8b_wrsr
                0x00000000400862b8       0x15 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x00000000400862b8                spi_flash_common_write_status_8b_wrsr
 *fill*         0x00000000400862cd        0x3 
 .text.spi_flash_common_write_status_8b_wrsr2
                0x00000000400862d0       0x15 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x00000000400862d0                spi_flash_common_write_status_8b_wrsr2
 *fill*         0x00000000400862e5        0x3 
 .text.spi_flash_chip_generic_set_io_mode
                0x00000000400862e8       0x18 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x00000000400862e8                spi_flash_chip_generic_set_io_mode
 *fill*         0x0000000040086300        0x0 
 *fill*         0x0000000040086300        0x0 
 .text.spi_flash_chip_generic_probe
                0x0000000040086300        0x7 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086300                spi_flash_chip_generic_probe
 *fill*         0x0000000040086307        0x0 
 *fill*         0x0000000040086307        0x1 
 .text.spi_flash_chip_generic_erase_chip
                0x0000000040086308       0x88 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086308                spi_flash_chip_generic_erase_chip
 .text.spi_flash_chip_generic_erase_sector
                0x0000000040086390       0x90 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086390                spi_flash_chip_generic_erase_sector
 .text.spi_flash_chip_generic_erase_block
                0x0000000040086420       0x90 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086420                spi_flash_chip_generic_erase_block
 .text.spi_flash_chip_generic_set_write_protect
                0x00000000400864b0       0x52 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x00000000400864b0                spi_flash_chip_generic_set_write_protect
 *fill*         0x0000000040086502        0x2 
 .text.spi_flash_chip_generic_read_reg
                0x0000000040086504       0x12 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086504                spi_flash_chip_generic_read_reg
 *fill*         0x0000000040086516        0x2 
 .text.spi_flash_chip_generic_wait_idle
                0x0000000040086518       0x80 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086518                spi_flash_chip_generic_wait_idle
 *fill*         0x0000000040086598        0x0 
 .text.spi_flash_chip_generic_get_caps
                0x0000000040086598       0x17 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086598                spi_flash_chip_generic_get_caps
 *fill*         0x00000000400865af        0x0 
 *fill*         0x00000000400865af        0x0 
 *fill*         0x00000000400865af        0x0 
 *fill*         0x00000000400865af        0x1 
 .text.spi_flash_chip_generic_page_program
                0x00000000400865b0       0x65 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x00000000400865b0                spi_flash_chip_generic_page_program
 *fill*         0x0000000040086615        0x0 
 *fill*         0x0000000040086615        0x0 
 *fill*         0x0000000040086615        0x0 
 *fill*         0x0000000040086615        0x0 
 *fill*         0x0000000040086615        0x3 
 .text.spi_flash_chip_generic_read_unique_id_none
                0x0000000040086618        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086618                spi_flash_chip_generic_read_unique_id_none
 *fill*         0x0000000040086620        0x0 
 *fill*         0x0000000040086620        0x0 
 *fill*         0x0000000040086620        0x0 
 .text.spi_flash_common_set_io_mode
                0x0000000040086620       0x8e zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040086620                spi_flash_common_set_io_mode
 *fill*         0x00000000400866ae        0x0 
 *libzephyr.a:spi_flash_chip_issi.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400866ae        0x2 
 .text.spi_flash_chip_issi_set_io_mode
                0x00000000400866b0       0x14 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0x18 (size before relaxing)
                0x00000000400866b0                spi_flash_chip_issi_set_io_mode
 .text.spi_flash_chip_issi_get_io_mode
                0x00000000400866c4       0x1c zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0x20 (size before relaxing)
                0x00000000400866c4                spi_flash_chip_issi_get_io_mode
 .text.spi_flash_chip_issi_probe
                0x00000000400866e0       0x22 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                0x00000000400866e0                spi_flash_chip_issi_probe
 *fill*         0x0000000040086702        0x2 
 .text.spi_flash_chip_issi_get_caps
                0x0000000040086704        0x7 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                0x0000000040086704                spi_flash_chip_issi_get_caps
 *fill*         0x000000004008670b        0x0 
 *libzephyr.a:spi_flash_chip_mxic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004008670b        0x1 
 .text.spi_flash_chip_mxic_probe
                0x000000004008670c       0x20 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000004008670c                spi_flash_chip_mxic_probe
 .text.spi_flash_chip_mxic_get_caps
                0x000000004008672c        0x7 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000004008672c                spi_flash_chip_mxic_get_caps
 *libzephyr.a:spi_flash_chip_mxic_opi.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_chip_th.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_chip_winbond.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040086733        0x1 
 .text.spi_flash_chip_winbond_read
                0x0000000040086734       0xaa zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x0000000040086734                spi_flash_chip_winbond_read
 *fill*         0x00000000400867de        0x2 
 .text.spi_flash_chip_winbond_erase_block
                0x00000000400867e0       0x84 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x00000000400867e0                spi_flash_chip_winbond_erase_block
 .text.spi_flash_chip_winbond_erase_sector
                0x0000000040086864       0x84 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x0000000040086864                spi_flash_chip_winbond_erase_sector
 .text.spi_flash_chip_winbond_page_program
                0x00000000400868e8       0x64 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x00000000400868e8                spi_flash_chip_winbond_page_program
 *fill*         0x000000004008694c        0x0 
 .text.spi_flash_chip_winbond_probe
                0x000000004008694c       0x16 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004008694c                spi_flash_chip_winbond_probe
 *fill*         0x0000000040086962        0x2 
 .text.spi_flash_chip_winbond_get_caps
                0x0000000040086964       0x19 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x0000000040086964                spi_flash_chip_winbond_get_caps
 *fill*         0x000000004008697d        0x0 
 *fill*         0x000000004008697d        0x0 
 *libzephyr.a:memspi_host_driver.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004008697d        0x3 
 .text.memspi_host_read_status_hs
                0x0000000040086980       0x38 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x0000000040086980                memspi_host_read_status_hs
 .text.memspi_host_read_id_hs
                0x00000000400869b8       0x82 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                         0x86 (size before relaxing)
                0x00000000400869b8                memspi_host_read_id_hs
 *fill*         0x0000000040086a3a        0x2 
 .text.memspi_host_flush_cache
                0x0000000040086a3c       0x19 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x0000000040086a3c                memspi_host_flush_cache
 *fill*         0x0000000040086a55        0x3 
 .text.memspi_host_init_pointers
                0x0000000040086a58       0x32 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                         0x35 (size before relaxing)
                0x0000000040086a58                memspi_host_init_pointers
 *fill*         0x0000000040086a8a        0x2 
 .text.memspi_host_write_data_slicer
                0x0000000040086a8c       0x30 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x0000000040086a8c                memspi_host_write_data_slicer
 .text.memspi_host_read_data_slicer
                0x0000000040086abc       0x27 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x0000000040086abc                memspi_host_read_data_slicer
 *fill*         0x0000000040086ae3        0x0 
 *fill*         0x0000000040086ae3        0x0 
 *fill*         0x0000000040086ae3        0x0 
 *libzephyr.a:flash_brownout_hook.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_wrap.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_hpm_enable.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_oct_flash_init*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_err.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *(SORT_BY_ALIGNMENT(.literal.esp_system_abort) SORT_BY_ALIGNMENT(.text.esp_system_abort))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_stall) SORT_BY_ALIGNMENT(.text.esp_cpu_stall))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_unstall) SORT_BY_ALIGNMENT(.text.esp_cpu_unstall))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_reset) SORT_BY_ALIGNMENT(.text.esp_cpu_reset))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_wait_for_intr) SORT_BY_ALIGNMENT(.text.esp_cpu_wait_for_intr))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_compare_and_set) SORT_BY_ALIGNMENT(.text.esp_cpu_compare_and_set))
 *(SORT_BY_ALIGNMENT(.literal.esp_gpio_reserve_pins) SORT_BY_ALIGNMENT(.text.esp_gpio_reserve_pins))
 *fill*         0x0000000040086ae3        0x1 
 .text.esp_gpio_reserve_pins
                0x0000000040086ae4       0x19 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                0x0000000040086ae4                esp_gpio_reserve_pins
 *fill*         0x0000000040086afd        0x0 
 *(SORT_BY_ALIGNMENT(.literal.esp_gpio_is_pin_reserved) SORT_BY_ALIGNMENT(.text.esp_gpio_is_pin_reserved))
 *(SORT_BY_ALIGNMENT(.literal.rtc_vddsdio_get_config) SORT_BY_ALIGNMENT(.text.rtc_vddsdio_get_config))
 *(SORT_BY_ALIGNMENT(.literal.rtc_vddsdio_set_config) SORT_BY_ALIGNMENT(.text.rtc_vddsdio_set_config))
 *libzephyr.a:esp_memory_utils.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:rtc_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:rtc_clk.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:rtc_clk_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:rtc_sleep.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:rtc_time.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:systimer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mspi_timing_config.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mspi_timing_tuning.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:periph_ctrl.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040086afd        0x3 
 .text.periph_ll_get_rst_en_mask
                0x0000000040086b00       0xc3 zephyr/libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x0000000040086bc3        0x1 
 .text.periph_ll_get_rst_en_reg
                0x0000000040086bc4       0x2f zephyr/libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x0000000040086bf3        0x1 
 .text.periph_module_enable
                0x0000000040086bf4       0x9b zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x9f (size before relaxing)
                0x0000000040086bf4                periph_module_enable
 *fill*         0x0000000040086c8f        0x1 
 .text.periph_module_disable
                0x0000000040086c90       0x99 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x9d (size before relaxing)
                0x0000000040086c90                periph_module_disable
 *fill*         0x0000000040086d29        0x0 
 *fill*         0x0000000040086d29        0x0 
 *fill*         0x0000000040086d29        0x0 
 *fill*         0x0000000040086d29        0x0 
 *(SORT_BY_ALIGNMENT(.literal.sar_periph_ctrl_power_enable) SORT_BY_ALIGNMENT(.text.sar_periph_ctrl_power_enable))
 *libzephyr.a:esp_system_chip.*(SORT_BY_ALIGNMENT(.literal.esp_system_abort) SORT_BY_ALIGNMENT(.text.esp_system_abort))
 *libzephyr.a:spi_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_slave_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_brownout_hook.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:heap_caps_zephyr.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *(SORT_BY_ALIGNMENT(.literal.GPIO_HOLD_MASK) SORT_BY_ALIGNMENT(.text.GPIO_HOLD_MASK))
 *libzephyr.a:esp_rom_spiflash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040086d29        0x3 
 .text.esp_rom_spiflash_read_status
                0x0000000040086d2c       0x5f zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                0x0000000040086d2c                esp_rom_spiflash_read_status
 *fill*         0x0000000040086d8b        0x1 
 .text.esp_rom_spiflash_wait_idle
                0x0000000040086d8c       0x30 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                0x0000000040086d8c                esp_rom_spiflash_wait_idle
 .text.esp_rom_spiflash_read
                0x0000000040086dbc      0x2f9 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                0x0000000040086dbc                esp_rom_spiflash_read
 *fill*         0x00000000400870b5        0x0 
 *fill*         0x00000000400870b5        0x0 
 *libzephyr.a:esp_rom_systimer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_rom_wdt.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_cache.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:cache_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400870b5        0x3 
 .text.cache_sync
                0x00000000400870b8       0x16 zephyr/libzephyr.a(cache_esp32.c.obj)
                0x00000000400870b8                cache_sync
 *fill*         0x00000000400870ce        0x0 
 *libzephyr.a:bootloader_soc.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400870ce        0x2 
 .text.bootloader_ana_clock_glitch_reset_config
                0x00000000400870d0        0x5 zephyr/libzephyr.a(bootloader_soc.c.obj)
                0x00000000400870d0                bootloader_ana_clock_glitch_reset_config
 *libzephyr.a:bootloader_random*.*(SORT_BY_ALIGNMENT(.literal.bootloader_random_disable) SORT_BY_ALIGNMENT(.text.bootloader_random_disable))
 *fill*         0x00000000400870d5        0x3 
 .text.bootloader_random_disable
                0x00000000400870d8      0x13c zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
                0x00000000400870d8                bootloader_random_disable
 *fill*         0x0000000040087214        0x0 
 *libzephyr.a:bootloader_random*.*(SORT_BY_ALIGNMENT(.literal.bootloader_random_enable) SORT_BY_ALIGNMENT(.text.bootloader_random_enable))
 .text.bootloader_random_enable
                0x0000000040087214      0x1e5 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
                0x0000000040087214                bootloader_random_enable
                0x00000000400873fc                . = ALIGN (0x4)
 *fill*         0x00000000400873f9        0x3 

.loader.text    0x00000000400873fc      0xc24 load address 0x00000000000073fc
                0x00000000400873fc                . = ALIGN (0x4)
 *libzephyr.a:bootloader_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .literal.bootloader_read_bootloader_header
                0x00000000400873fc       0x10 zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x18 (size before relaxing)
 .literal.bootloader_check_bootloader_validity
                0x000000004008740c        0x8 zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x20 (size before relaxing)
 .literal.bootloader_config_wdt
                0x0000000040087414        0x8 zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x20 (size before relaxing)
 .literal.bootloader_enable_random
                0x000000004008741c        0x4 zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x14 (size before relaxing)
 .literal.bootloader_print_banner
                0x0000000040087420        0xc zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x28 (size before relaxing)
 .literal.bootloader_init
                0x000000004008742c       0x6c zephyr/libzephyr.a(bootloader_esp32.c.obj)
                                         0xd8 (size before relaxing)
 .literal.bootloader_clock_configure
                0x0000000040087498       0x20 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
                                         0x3c (size before relaxing)
 .literal.bootloader_flash_read
                0x00000000400874b8       0x24 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x50 (size before relaxing)
 .literal.bootloader_enable_wp
                0x00000000400874dc        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .literal.bootloader_flash_update_id
                0x00000000400874dc        0x4 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.bootloader_flash_get_wp_pin
                0x00000000400874e0        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.bootloader_init_spi_flash
                0x00000000400874e0       0x44 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                         0x84 (size before relaxing)
 .literal.bootloader_common_check_chip_validity
                0x0000000040087524       0x10 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
                                         0x30 (size before relaxing)
 .literal.bootloader_common_vddsdio_configure
                0x0000000040087534        0x4 zephyr/libzephyr.a(bootloader_common.c.obj)
                                          0xc (size before relaxing)
 .literal.bootloader_init_mem
                0x0000000040087538        0x0 zephyr/libzephyr.a(bootloader_mem.c.obj)
                                          0x4 (size before relaxing)
 .literal.bootloader_clock_get_rated_freq_mhz
                0x0000000040087538        0x0 zephyr/libzephyr.a(bootloader_efuse.c.obj)
                                          0x4 (size before relaxing)
 .literal.bootloader_console_init
                0x0000000040087538        0x4 zephyr/libzephyr.a(bootloader_console.c.obj)
                                         0x10 (size before relaxing)
 .literal.get_flash_clock_divider
                0x000000004008753c       0x28 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                         0x4c (size before relaxing)
 .literal.spi_flash_hal_init
                0x0000000040087564       0x18 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                         0x24 (size before relaxing)
 .literal.spi_flash_hal_supports_direct_write
                0x000000004008757c        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_hal_supports_direct_read
                0x000000004008757c        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_flash_read_chip_id
                0x000000004008757c        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_flash_init_default_chip
                0x000000004008757c       0x14 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x2c (size before relaxing)
 .literal.efuse_hal_get_rated_freq_mhz
                0x0000000040087590        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.esp_cpu_configure_region_protection
                0x0000000040087594        0x8 zephyr/libzephyr.a(cpu_region_protect.c.obj)
                                         0x10 (size before relaxing)
 .text.bootloader_read_bootloader_header
                0x000000004008759c       0x2c zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x30 (size before relaxing)
                0x000000004008759c                bootloader_read_bootloader_header
 .text.bootloader_check_bootloader_validity
                0x00000000400875c8       0x44 zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x4c (size before relaxing)
                0x00000000400875c8                bootloader_check_bootloader_validity
 .text.bootloader_config_wdt
                0x000000004008760c       0x3e zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x4e (size before relaxing)
                0x000000004008760c                bootloader_config_wdt
 *fill*         0x000000004008764a        0x2 
 .text.bootloader_enable_random
                0x000000004008764c       0x19 zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x20 (size before relaxing)
                0x000000004008764c                bootloader_enable_random
 *fill*         0x0000000040087665        0x3 
 .text.bootloader_print_banner
                0x0000000040087668       0x3a zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x42 (size before relaxing)
                0x0000000040087668                bootloader_print_banner
 *fill*         0x00000000400876a2        0x0 
 *libzephyr.a:bootloader_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400876a2        0x2 
 .text.bootloader_init
                0x00000000400876a4      0x200 zephyr/libzephyr.a(bootloader_esp32.c.obj)
                                        0x238 (size before relaxing)
                0x00000000400876a4                bootloader_init
 *fill*         0x00000000400878a4        0x0 
 *libzephyr.a:bootloader_clock_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.bootloader_clock_configure
                0x00000000400878a4       0xf1 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
                                        0x101 (size before relaxing)
                0x00000000400878a4                bootloader_clock_configure
 *libzephyr.a:bootloader_wdt.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_flash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040087995        0x3 
 .text.bootloader_flash_read
                0x0000000040087998       0xff zephyr/libzephyr.a(bootloader_flash.c.obj)
                                        0x103 (size before relaxing)
                0x0000000040087998                bootloader_flash_read
 *fill*         0x0000000040087a97        0x1 
 .text.bootloader_enable_wp
                0x0000000040087a98       0x13 zephyr/libzephyr.a(bootloader_flash.c.obj)
                0x0000000040087a98                bootloader_enable_wp
 *fill*         0x0000000040087aab        0x0 
 *fill*         0x0000000040087aab        0x0 
 *libzephyr.a:bootloader_flash_config_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040087aab        0x1 
 .text.bootloader_flash_update_id
                0x0000000040087aac        0xd zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                         0x10 (size before relaxing)
                0x0000000040087aac                bootloader_flash_update_id
 *fill*         0x0000000040087ab9        0x3 
 .text.bootloader_flash_get_wp_pin
                0x0000000040087abc       0x38 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                0x0000000040087abc                bootloader_flash_get_wp_pin
 .text.bootloader_init_spi_flash
                0x0000000040087af4       0xec zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                        0x104 (size before relaxing)
                0x0000000040087af4                bootloader_init_spi_flash
 *fill*         0x0000000040087be0        0x0 
 *libzephyr.a:bootloader_clock_loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_common_loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.bootloader_common_check_chip_validity
                0x0000000040087be0       0xe8 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
                                         0xf0 (size before relaxing)
                0x0000000040087be0                bootloader_common_check_chip_validity
 *libzephyr.a:bootloader_common.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.bootloader_common_vddsdio_configure
                0x0000000040087cc8       0x37 zephyr/libzephyr.a(bootloader_common.c.obj)
                                         0x3b (size before relaxing)
                0x0000000040087cc8                bootloader_common_vddsdio_configure
 *libzephyr.a:bootloader_mem.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040087cff        0x1 
 .text.bootloader_init_mem
                0x0000000040087d00        0x8 zephyr/libzephyr.a(bootloader_mem.c.obj)
                                          0xb (size before relaxing)
                0x0000000040087d00                bootloader_init_mem
 *fill*         0x0000000040087d08        0x0 
 *libzephyr.a:bootloader_random.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_efuse.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040087d08        0x0 
 .text.bootloader_clock_get_rated_freq_mhz
                0x0000000040087d08        0xa zephyr/libzephyr.a(bootloader_efuse.c.obj)
                                          0xd (size before relaxing)
                0x0000000040087d08                bootloader_clock_get_rated_freq_mhz
 *fill*         0x0000000040087d12        0x0 
 *libzephyr.a:bootloader_utility.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_sha.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_console.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040087d12        0x2 
 .text.bootloader_console_init
                0x0000000040087d14       0x22 zephyr/libzephyr.a(bootloader_console.c.obj)
                                         0x2a (size before relaxing)
                0x0000000040087d14                bootloader_console_init
 *fill*         0x0000000040087d36        0x0 
 *libzephyr.a:bootloader_panic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_image_format.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_encrypt.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_encryption_secure_features.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_partitions.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040087d36        0x2 
 .text.get_flash_clock_divider
                0x0000000040087d38       0xa4 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                         0xb0 (size before relaxing)
 .text.spi_flash_hal_init
                0x0000000040087ddc       0xf1 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                         0xf9 (size before relaxing)
                0x0000000040087ddc                spi_flash_hal_init
 *fill*         0x0000000040087ecd        0x3 
 .text.spi_flash_hal_supports_direct_write
                0x0000000040087ed0       0x14 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                0x0000000040087ed0                spi_flash_hal_supports_direct_write
 .text.spi_flash_hal_supports_direct_read
                0x0000000040087ee4       0x14 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                0x0000000040087ee4                spi_flash_hal_supports_direct_read
 *fill*         0x0000000040087ef8        0x0 
 *fill*         0x0000000040087ef8        0x0 
 *libzephyr.a:spi_flash_hal_common.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_flash_api.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.esp_flash_read_chip_id
                0x0000000040087ef8       0x10 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0x14 (size before relaxing)
                0x0000000040087ef8                esp_flash_read_chip_id
 *libzephyr.a:esp_flash_spi_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.esp_flash_init_default_chip
                0x0000000040087f08       0x67 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x6f (size before relaxing)
                0x0000000040087f08                esp_flash_init_default_chip
 *libzephyr.a:secure_boot.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:secure_boot_secure_features.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:secure_boot_signatures_bootloader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:efuse_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040087f6f        0x1 
 .text.efuse_hal_get_rated_freq_mhz
                0x0000000040087f70       0x22 zephyr/libzephyr.a(efuse_hal.c.obj)
                0x0000000040087f70                efuse_hal_get_rated_freq_mhz
 *fill*         0x0000000040087f92        0x0 
 *libzephyr.a:esp_efuse_table.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_fields.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_api.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_utility.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_api_key_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:app_cpu_start.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mpu_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040087f92        0x2 
 .text.mpu_hal_set_region_access
                0x0000000040087f94       0x3d zephyr/libzephyr.a(mpu_hal.c.obj)
                0x0000000040087f94                mpu_hal_set_region_access
 *libzephyr.a:cpu_region_protect.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040087fd1        0x3 
 .text.esp_cpu_configure_region_protection
                0x0000000040087fd4       0x2f zephyr/libzephyr.a(cpu_region_protect.c.obj)
                                         0x33 (size before relaxing)
                0x0000000040087fd4                esp_cpu_configure_region_protection
 *fill*         0x0000000040088003        0x0 
                0x0000000040088013                . = (. + 0x10)
 *fill*         0x0000000040088003       0x10 
                0x0000000040088020                . = ALIGN (0x10)
 *fill*         0x0000000040088013        0xd 

.iram0.text_end
                0x0000000040088020       0xe0 load address 0x0000000000008020
                0x0000000040088030                . = (. + 0x10)
 *fill*         0x0000000040088020       0x10 
                0x0000000040088100                . = ALIGN (0x100)
 *fill*         0x0000000040088030       0xd0 
                0x0000000040088100                _iram_text_end = ABSOLUTE (.)

.iram0.data     0x0000000040088100        0x0 load address 0x0000000000008020
                0x0000000040088100                . = ALIGN (0x10)
 *(SORT_BY_ALIGNMENT(.iram.data))
 *(SORT_BY_ALIGNMENT(.iram.data*))

.iram0.bss      0x0000000040088100        0x0 load address 0x0000000000008020
                0x0000000040088100                . = ALIGN (0x10)
                0x0000000040088100                _iram_bss_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram.bss))
 *(SORT_BY_ALIGNMENT(.iram.bss.*))
                0x0000000040088100                _iram_bss_end = ABSOLUTE (.)
                0x0000000040088100                . = ALIGN (0x4)
                0x0000000040088100                _iram_end = ABSOLUTE (.)

.dram0.data     0x000000003ffb0000      0xb68 load address 0x0000000000008020
                0x000000003ffb0000                _dram_data_start = ABSOLUTE (.)
                0x000000003ffb0000                _data_start = ABSOLUTE (.)
                0x000000003ffb0000                _btdm_data_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.data) SORT_BY_ALIGNMENT(.data.*))
                0x000000003ffb0000                . = ALIGN (0x4)
                0x000000003ffb0000                _btdm_data_end = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.data))
 *(SORT_BY_ALIGNMENT(.data.*))
 .data._char_out
                0x000000003ffb0000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .data.s_cache_drv
                0x000000003ffb0004        0x8 zephyr/libzephyr.a(cache_esp32.c.obj)
 .data.esp_flash_registered_chips
                0x000000003ffb000c        0x4 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
                0x000000003ffb000c                esp_flash_registered_chips
 .data.default_registered_chips
                0x000000003ffb0010       0x18 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .data.current_read_mapping
                0x000000003ffb0028        0x4 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .data.__stdout
                0x000000003ffb002c       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .data.gpio_config_1
                0x000000003ffb003c       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.gpio_config_0
                0x000000003ffb004c       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.uart_esp32_data_0
                0x000000003ffb005c        0xc zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data.timeout_list
                0x000000003ffb0068        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.d.*))
 *(SORT_BY_ALIGNMENT(.data1))
 *(SORT_BY_ALIGNMENT(.sdata))
 *(SORT_BY_ALIGNMENT(.sdata.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s.*))
 *(SORT_BY_ALIGNMENT(.sdata2))
 *(SORT_BY_ALIGNMENT(.sdata2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s2.*))
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.xtensa_backtrace_print.str1.1
                0x000000003ffb0070       0x3f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 *libkernel.a:fatal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libkernel.a:init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003ffb00af        0x1 
 .rodata.levels$0
                0x000000003ffb00b0       0x18 zephyr/kernel/libkernel.a(init.c.obj)
 .rodata.z_cstart.str1.1
                0x000000003ffb00c8        0x5 zephyr/kernel/libkernel.a(init.c.obj)
 *libzephyr.a:cbprintf_complete*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003ffb00cd        0x3 
 .rodata._app_drom_vaddr
                0x000000003ffb00d0        0x4 zephyr/libzephyr.a(loader.c.obj)
 .rodata._app_drom_size
                0x000000003ffb00d4        0x4 zephyr/libzephyr.a(loader.c.obj)
 .rodata._app_drom_start
                0x000000003ffb00d8        0x4 zephyr/libzephyr.a(loader.c.obj)
 .rodata._app_irom_vaddr
                0x000000003ffb00dc        0x4 zephyr/libzephyr.a(loader.c.obj)
 .rodata._app_irom_size
                0x000000003ffb00e0        0x4 zephyr/libzephyr.a(loader.c.obj)
 .rodata._app_irom_start
                0x000000003ffb00e4        0x4 zephyr/libzephyr.a(loader.c.obj)
 .rodata.map_rom_segments.str1.1
                0x000000003ffb00e8      0x14c zephyr/libzephyr.a(loader.c.obj)
 .rodata.__start.str1.1
                0x000000003ffb0234       0x25 zephyr/libzephyr.a(loader.c.obj)
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_rom_patch.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libdrivers__serial.a:uart_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003ffb0259        0x3 
 .rodata.__pinctrl_dev_config__device_dts_ord_70
                0x000000003ffb025c        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_states__device_dts_ord_70
                0x000000003ffb0264        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_state_pins_0__device_dts_ord_70
                0x000000003ffb026c       0x10 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.str1.1
                0x000000003ffb027c        0xe zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *libzephyr.a:esp_memory_utils.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:mmu_psram_flash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_psram_impl_octal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_psram_impl_quad.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:mmu_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003ffb028a        0x2 
 .rodata.spi_flash_hal_configure_host_io_mode
                0x000000003ffb028c       0x18 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 *libzephyr.a:spi_flash_encrypt_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:cache_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:ledc_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:i2c_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:wdt_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:systimer_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_hal_gpspi.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:lldesc.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_write))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_timestamp))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_early_timestamp))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_impl_lock))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_impl_lock_timeout))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_impl_unlock))
 *libzephyr.a:spi_flash_chip_boya.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:spi_flash_chip_gd.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.esp_flash_chip_gd
                0x000000003ffb02a4       0x7c zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x000000003ffb02a4                esp_flash_chip_gd
 .rodata.chip_name
                0x000000003ffb0320        0x3 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 *libzephyr.a:spi_flash_chip_generic.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *fill*         0x000000003ffb0323        0x1 
 .rodata.spi_flash_chip_generic_config_host_io_mode
                0x000000003ffb0324       0x18 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.esp_flash_chip_generic
                0x000000003ffb033c       0x7c zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003ffb033c                esp_flash_chip_generic
 .rodata.spi_flash_chip_generic_read.str1.1
                0x000000003ffb03b8       0x38 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.spi_flash_chip_generic_read_unique_id.str1.1
                0x000000003ffb03f0       0x47 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.spi_flash_chip_generic_suspend_cmd_conf.str1.1
                0x000000003ffb0437       0x54 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.chip_name
                0x000000003ffb048b        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.TAG    0x000000003ffb0493        0xd zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 *libzephyr.a:spi_flash_chip_issi.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.esp_flash_chip_issi
                0x000000003ffb04a0       0x7c zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                0x000000003ffb04a0                esp_flash_chip_issi
 .rodata.chip_name
                0x000000003ffb051c        0x5 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 *libzephyr.a:spi_flash_chip_mxic.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *fill*         0x000000003ffb0521        0x3 
 .rodata.esp_flash_chip_mxic
                0x000000003ffb0524       0x7c zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000003ffb0524                esp_flash_chip_mxic
 .rodata.chip_name
                0x000000003ffb05a0        0x5 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 *libzephyr.a:spi_flash_chip_mxic_opi.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:spi_flash_chip_th.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:spi_flash_chip_winbond.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *fill*         0x000000003ffb05a5        0x3 
 .rodata.esp_flash_chip_winbond
                0x000000003ffb05a8       0x7c zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000003ffb05a8                esp_flash_chip_winbond
 .rodata.spi_flash_chip_winbond_read.str1.1
                0x000000003ffb0624       0x38 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .rodata.chip_name
                0x000000003ffb0624        0x8 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .rodata.TAG    0x000000003ffb062c        0x8 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 *libzephyr.a:memspi_host_driver.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.memspi_host_read_id_hs.str1.1
                0x000000003ffb0634       0x19 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .rodata.TAG    0x000000003ffb064d        0x7 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 *libzephyr.a:flash_brownout_hook.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_wrap.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_hpm_enable.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_oct_flash_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_cache.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_stall))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_unstall))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_reset))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_wait_for_intr))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_compare_and_set))
 *(SORT_BY_ALIGNMENT(.rodata.esp_gpio_reserve_pins))
 *(SORT_BY_ALIGNMENT(.rodata.esp_gpio_is_pin_reserved))
 *(SORT_BY_ALIGNMENT(.rodata.rtc_vddsdio_get_config))
 *(SORT_BY_ALIGNMENT(.rodata.rtc_vddsdio_set_config))
 *libzephyr.a:esp_memory_utils.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:rtc_clk.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.rtc_clk_apll_coeff_calc.str1.1
                0x000000003ffb0654       0xa3 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_get_config.str1.1
                0x000000003ffb06f7       0x30 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$61
                0x000000003ffb0727       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$59
                0x000000003ffb0738       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$58
                0x000000003ffb0749       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$57
                0x000000003ffb075a       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$56
                0x000000003ffb076b       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$55
                0x000000003ffb077c       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$54
                0x000000003ffb078d       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 *libzephyr.a:rtc_clk_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.rtc_clk_xtal_freq_estimate.str1.1
                0x000000003ffb079e       0xc2 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .rodata.rtc_clk_init.str1.1
                0x000000003ffb0860       0xb2 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 *libzephyr.a:systimer.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:mspi_timing_config.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:mspi_timing_tuning.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.rodata.sar_periph_ctrl_power_enable))
 *libzephyr.a:cache_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:esp_cache.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:esp_err.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:i2c_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:ledc_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:mmu_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:spi_flash_encrypt_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:spi_flash_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.get_flash_clock_divider.str1.1
                0x000000003ffb0912       0x77 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 *libzephyr.a:spi_flash_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:spi_flash_hal_common.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:spi_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:spi_slave_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:flash_brownout_hook.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:memspi_host_driver.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:spi_flash_wrap.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:heap_caps_zephyr.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:esp_rom_spiflash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:esp_rom_systimer.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_rom_wdt.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.jcr))
 *(SORT_BY_ALIGNMENT(.dram1) SORT_BY_ALIGNMENT(.dram1.*))
 *fill*         0x000000003ffb0989        0x3 
 .dram1.6       0x000000003ffb098c        0x8 zephyr/libzephyr.a(flash_ops.c.obj)
                0x000000003ffb098c                g_flash_guard_default_ops
 .dram1.2       0x000000003ffb0994        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
                0x000000003ffb0994                rom_spiflash_api_funcs
 .dram1.1       0x000000003ffb0998       0x10 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.2       0x000000003ffb09a8       0x20 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .dram1.1       0x000000003ffb09c8       0x28 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .dram1.0       0x000000003ffb09f0       0x58 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .dram1.5       0x000000003ffb0a48       0x14 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003ffb0a48                spi_flash_chip_generic_timeout
 .dram1.4       0x000000003ffb0a5c       0x18 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .dram1.3       0x000000003ffb0a74        0x4 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003ffb0a74                rom_flash_chip_dummy_hpm
 .dram1.2       0x000000003ffb0a78        0x4 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003ffb0a78                rom_flash_chip_dummy
 .dram1.10      0x000000003ffb0a7c       0x28 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                0x000000003ffb0a7c                esp_flash_noos_functions
 .dram1.3       0x000000003ffb0aa4        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.2       0x000000003ffb0aa8        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.1       0x000000003ffb0aac        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.2       0x000000003ffb0ab0       0x18 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .dram1.1       0x000000003ffb0ac8       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .dram1.0       0x000000003ffb0adc        0xa zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.1       0x000000003ffb0ae6        0x6 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .dram1.0       0x000000003ffb0aec        0x6 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .dram1.0       0x000000003ffb0af2       0x28 zephyr/libzephyr.a(gpio_periph.c.obj)
                0x000000003ffb0af2                GPIO_PIN_MUX_REG_OFFSET
 .dram1.17      0x000000003ffb0b1a       0x1e zephyr/libzephyr.a(bootloader_flash.c.obj)
 .dram1.16      0x000000003ffb0b38       0x1e zephyr/libzephyr.a(bootloader_flash.c.obj)
 .dram1.11      0x000000003ffb0b56       0x11 zephyr/libzephyr.a(bootloader_flash.c.obj)
                0x000000003ffb0b68                . = ALIGN (0x4)
 *fill*         0x000000003ffb0b67        0x1 
                0x000000003ffb0b68                . = ALIGN (0x4)

.loader.data    0x000000003ffb0b68      0xa8c load address 0x0000000000008b88
                0x000000003ffb0b68                . = ALIGN (0x4)
                0x000000003ffb0b68                _loader_data_start = ABSOLUTE (.)
 *libzephyr.a:bootloader_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata        0x000000003ffb0b68        0x8 zephyr/libzephyr.a(bootloader_init.c.obj)
 .rodata.bootloader_read_bootloader_header.str1.1
                0x000000003ffb0b70       0x39 zephyr/libzephyr.a(bootloader_init.c.obj)
 .rodata.bootloader_check_bootloader_validity.str1.1
                0x000000003ffb0ba9       0x22 zephyr/libzephyr.a(bootloader_init.c.obj)
 .rodata.bootloader_enable_random.str1.1
                0x000000003ffb0bcb       0x31 zephyr/libzephyr.a(bootloader_init.c.obj)
 .rodata.bootloader_print_banner.str1.1
                0x000000003ffb0bfc       0x69 zephyr/libzephyr.a(bootloader_init.c.obj)
 *libzephyr.a:bootloader_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.bootloader_init.str1.1
                0x000000003ffb0c65      0x16b zephyr/libzephyr.a(bootloader_esp32.c.obj)
 *libzephyr.a:bootloader_clock_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata        0x000000003ffb0dd0        0x8 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 *libzephyr.a:bootloader_wdt.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:bootloader_flash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.CSWTCH$37
                0x000000003ffb0dd8        0x6 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .rodata.bootloader_mmap.str1.1
                0x000000003ffb0dde       0xaf zephyr/libzephyr.a(bootloader_flash.c.obj)
 .rodata.bootloader_flash_read.str1.1
                0x000000003ffb0e8d       0xc1 zephyr/libzephyr.a(bootloader_flash.c.obj)
 *libzephyr.a:bootloader_flash_config_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *fill*         0x000000003ffb0f4e        0x2 
 .rodata.CSWTCH$17
                0x000000003ffb0f50       0x14 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .rodata.CSWTCH$16
                0x000000003ffb0f64       0x40 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .rodata.bootloader_init_spi_flash.str1.1
                0x000000003ffb0fa4       0x8a zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                         0x95 (size before relaxing)
 .rodata.CSWTCH$19
                0x000000003ffb102e        0x5 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .rodata.str1.1
                0x000000003ffb1033       0x2b zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 *libzephyr.a:bootloader_common.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:bootloader_common_loader.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.bootloader_common_check_chip_validity.str1.1
                0x000000003ffb105e       0xc2 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 *libzephyr.a:bootloader_efuse.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:cpu_util.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:clk.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:esp_clk.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:rtc_clk_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:rtc_time.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.rtc_clk_cal_internal.str1.1
                0x000000003ffb1120       0x47 zephyr/libzephyr.a(rtc_time.c.obj)
 .rodata.rtc_clk_wait_for_slow_cycle.str1.1
                0x000000003ffb1167       0x28 zephyr/libzephyr.a(rtc_time.c.obj)
 *libzephyr.a:efuse_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.CSWTCH$21
                0x000000003ffb118f        0x7 zephyr/libzephyr.a(efuse_hal.c.obj)
 *libzephyr.a:cpu_region_protect.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *fill*         0x000000003ffb1196        0x2 
 .rodata        0x000000003ffb1198       0x14 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 *libzephyr.a:periph_ctrl.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.periph_ll_get_rst_en_mask
                0x000000003ffb11ac       0x84 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$13
                0x000000003ffb1230       0x84 zephyr/libzephyr.a(periph_ctrl.c.obj)
 *libzephyr.a:esp_flash_api.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.str1.1
                0x000000003ffb12b4      0x186 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .rodata.esp_flash_read_unique_chip_id.str1.1
                0x000000003ffb143a       0x79 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .rodata.io_mode_str
                0x000000003ffb14b3       0xb4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 *libzephyr.a:esp_flash_spi_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.esp_flash_init_default_chip.str1.1
                0x000000003ffb1567       0x80 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .rodata.TAG    0x000000003ffb15e7        0xa zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                0x000000003ffb15f4                . = ALIGN (0x4)
 *fill*         0x000000003ffb15f1        0x3 
                0x000000003ffb15f4                _loader_data_end = ABSOLUTE (.)

sw_isr_table    0x000000003ffb15f4      0x100 load address 0x0000000000009614
                0x000000003ffb15f4                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sw_isr_table*))
 .gnu.linkonce.sw_isr_table
                0x000000003ffb15f4      0x100 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003ffb15f4                _sw_isr_table

device_states   0x000000003ffb16f4        0x8 load address 0x0000000000009714
                0x000000003ffb16f4                __device_states_start = .
 *(SORT_BY_ALIGNMENT(.z_devstate))
 .z_devstate    0x000000003ffb16f4        0x2 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_devstate    0x000000003ffb16f6        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_devstate    0x000000003ffb16fa        0x2 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(.z_devstate.*))
                0x000000003ffb16fc                __device_states_end = .

log_mpsc_pbuf_area
                0x000000003ffb16fc        0x0 load address 0x000000000000971c
                0x000000003ffb16fc                _log_mpsc_pbuf_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_mpsc_pbuf.static.*)))
                0x000000003ffb16fc                _log_mpsc_pbuf_list_end = .

log_msg_ptr_area
                0x000000003ffb16fc        0x0 load address 0x000000000000971c
                0x000000003ffb16fc                _log_msg_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_msg_ptr.static.*)))
                0x000000003ffb16fc                _log_msg_ptr_list_end = .

log_dynamic_area
                0x000000003ffb16fc        0x0 load address 0x000000000000971c
                0x000000003ffb16fc                _log_dynamic_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_dynamic.static.*)))
                0x000000003ffb16fc                _log_dynamic_list_end = .

k_timer_area    0x000000003ffb16fc        0x0 load address 0x000000000000971c
                0x000000003ffb16fc                _k_timer_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_timer.static.*)))
                0x000000003ffb16fc                _k_timer_list_end = .

k_mem_slab_area
                0x000000003ffb16fc        0x0 load address 0x000000000000971c
                0x000000003ffb16fc                _k_mem_slab_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mem_slab.static.*)))
                0x000000003ffb16fc                _k_mem_slab_list_end = .

k_heap_area     0x000000003ffb16fc       0x14 load address 0x000000000000971c
                0x000000003ffb16fc                _k_heap_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_heap.static.*)))
 ._k_heap.static._system_heap_
                0x000000003ffb16fc       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000003ffb16fc                _system_heap
                0x000000003ffb1710                _k_heap_list_end = .

k_mutex_area    0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_mutex_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mutex.static.*)))
                0x000000003ffb1710                _k_mutex_list_end = .

k_stack_area    0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_stack_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_stack.static.*)))
                0x000000003ffb1710                _k_stack_list_end = .

k_msgq_area     0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_msgq_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_msgq.static.*)))
                0x000000003ffb1710                _k_msgq_list_end = .

k_mbox_area     0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_mbox_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mbox.static.*)))
                0x000000003ffb1710                _k_mbox_list_end = .

k_pipe_area     0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_pipe_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_pipe.static.*)))
                0x000000003ffb1710                _k_pipe_list_end = .

k_sem_area      0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_sem_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_sem.static.*)))
                0x000000003ffb1710                _k_sem_list_end = .

k_event_area    0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_event_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_event.static.*)))
                0x000000003ffb1710                _k_event_list_end = .

k_queue_area    0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_queue_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_queue.static.*)))
                0x000000003ffb1710                _k_queue_list_end = .

k_fifo_area     0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_fifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_fifo.static.*)))
                0x000000003ffb1710                _k_fifo_list_end = .

k_lifo_area     0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_lifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_lifo.static.*)))
                0x000000003ffb1710                _k_lifo_list_end = .

k_condvar_area  0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _k_condvar_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_condvar.static.*)))
                0x000000003ffb1710                _k_condvar_list_end = .

sys_mem_blocks_ptr_area
                0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _sys_mem_blocks_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sys_mem_blocks_ptr.static.*)))
                0x000000003ffb1710                _sys_mem_blocks_ptr_list_end = .

net_buf_pool_area
                0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _net_buf_pool_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._net_buf_pool.static.*)))
                0x000000003ffb1710                _net_buf_pool_list_end = .

log_strings_area
                0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _log_strings_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_strings.static.*)))
                0x000000003ffb1710                _log_strings_list_end = .

log_const_area  0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _log_const_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_const.static.*)))
                0x000000003ffb1710                _log_const_list_end = .

log_backend_area
                0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _log_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_backend.static.*)))
                0x000000003ffb1710                _log_backend_list_end = .

log_link_area   0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                _log_link_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_link.static.*)))
                0x000000003ffb1710                _log_link_list_end = .

.dram0.end      0x000000003ffb1710        0x0 load address 0x0000000000009730
                0x000000003ffb1710                __data_end = ABSOLUTE (.)
                0x000000003ffb1710                _data_end = ABSOLUTE (.)

.dram0.bss      0x000000003ffb1710     0x13a0 load address 0x0000000000009730
                0x000000003ffb1710                . = ALIGN (0x8)
                0x000000003ffb1710                _bss_start = ABSOLUTE (.)
                0x000000003ffb1710                __bss_start = ABSOLUTE (.)
                0x000000003ffb1710                _btdm_bss_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*) SORT_BY_ALIGNMENT(COMMON))
                0x000000003ffb1710                . = ALIGN (0x4)
                0x000000003ffb1710                _btdm_bss_end = ABSOLUTE (.)
 *libkernel.a:mempool.*(SORT_BY_ALIGNMENT(.noinit.kheap_buf__system_heap) SORT_BY_ALIGNMENT(.noinit.*.kheap_buf__system_heap))
 .noinit."WEST_TOPDIR/zephyr/kernel/mempool.c".kheap_buf__system_heap
                0x000000003ffb1710     0x1000 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000003ffb1710                kheap__system_heap
 *(SORT_BY_ALIGNMENT(.dynsbss))
 *(SORT_BY_ALIGNMENT(.sbss))
 *(SORT_BY_ALIGNMENT(.sbss.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb.*))
 *(SORT_BY_ALIGNMENT(.scommon))
 *(SORT_BY_ALIGNMENT(.sbss2))
 *(SORT_BY_ALIGNMENT(.sbss2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb2.*))
 *(SORT_BY_ALIGNMENT(.dynbss))
 *(SORT_BY_ALIGNMENT(.bss))
 *(SORT_BY_ALIGNMENT(.bss.*))
 .bss.s_reserve_status
                0x000000003ffb2710        0x8 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .bss.z_idle_threads
                0x000000003ffb2718       0x60 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb2718                z_idle_threads
 .bss.z_main_thread
                0x000000003ffb2778       0x60 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb2778                z_main_thread
 .bss._thread_dummy
                0x000000003ffb27d8       0x60 zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000003ffb27d8                _thread_dummy
 .bss.slice_timeouts
                0x000000003ffb2838       0x18 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .bss.curr_tick
                0x000000003ffb2850        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.s_flash_guard_ops
                0x000000003ffb2858        0x4 zephyr/libzephyr.a(flash_ops.c.obj)
 .bss.esp_flash_default_chip
                0x000000003ffb285c        0x4 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                0x000000003ffb285c                esp_flash_default_chip
 .bss.bootloader_image_hdr
                0x000000003ffb2860       0x18 zephyr/libzephyr.a(bootloader_init.c.obj)
                0x000000003ffb2860                bootloader_image_hdr
 .bss.periph_spinlock
                0x000000003ffb2878        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.s_calibrated_freq
                0x000000003ffb287c        0x8 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .bss.s_cur_pll_freq
                0x000000003ffb2884        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss.s_mmu_ctx
                0x000000003ffb2888       0x7c zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .bss.s_reset_reason
                0x000000003ffb2904        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .bss.s_intr_saved_state
                0x000000003ffb2908        0x4 zephyr/libzephyr.a(cache_utils.c.obj)
 .bss.s_cache_ops_saved_state
                0x000000003ffb290c        0x8 zephyr/libzephyr.a(cache_utils.c.obj)
 .bss.cause     0x000000003ffb2914        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .bss.mask      0x000000003ffb2918        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .bss._stdout_hook
                0x000000003ffb291c        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss.z_malloc_heap
                0x000000003ffb2920        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss.non_iram_int_disabled
                0x000000003ffb292c        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.non_iram_int_mask
                0x000000003ffb2930        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.vector_desc_head
                0x000000003ffb2934        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.intr_alloc_table
                0x000000003ffb2938      0x100 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.esp_intc_csec
                0x000000003ffb2a38        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.gpio_data_1
                0x000000003ffb2a3c        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.gpio_data_0
                0x000000003ffb2a48        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.last_count
                0x000000003ffb2a54        0x4 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss._kernel   0x000000003ffb2a58       0x20 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb2a58                _kernel
 .bss.slice_max_prio
                0x000000003ffb2a78        0x4 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .bss.slice_ticks
                0x000000003ffb2a7c        0x4 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .bss.announce_remaining
                0x000000003ffb2a80        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.ref_counts
                0x000000003ffb2a84       0x22 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.non_iram_int_disabled_flag
                0x000000003ffb2aa6        0x1 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.isr_connected$0
                0x000000003ffb2aa7        0x1 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.z_sys_post_kernel
                0x000000003ffb2aa8        0x1 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb2aa8                z_sys_post_kernel
 .bss._sched_spinlock
                0x000000003ffb2aa9        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000003ffb2aa9                _sched_spinlock
 .bss.slice_expired
                0x000000003ffb2aa9        0x1 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 *(SORT_BY_ALIGNMENT(.share.mem))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.b.*))
 *(SORT_BY_ALIGNMENT(COMMON))
                0x000000003ffb2ab0                . = ALIGN (0x8)
 *fill*         0x000000003ffb2aaa        0x6 
                0x000000003ffb2ab0                __bss_end = ABSOLUTE (.)
                0x000000003ffb2ab0                _bss_end = ABSOLUTE (.)
                0x0000000000000001                ASSERT (((__bss_end - ORIGIN (dram0_0_seg)) <= LENGTH (dram0_0_seg)), DRAM segment data does not fit.)

.dram0.noinit   0x000000003ffb2ab0     0x1400 load address 0x0000000000009730
                0x000000003ffb2ab0                . = ALIGN (0x8)
 *(SORT_BY_ALIGNMENT(.noinit))
 *(SORT_BY_ALIGNMENT(.noinit.*))
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".2
                0x000000003ffb2ab0      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb2ab0                z_interrupt_stacks
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".1
                0x000000003ffb32b0      0x400 zephyr/kernel/libkernel.a(init.c.obj)
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".0
                0x000000003ffb36b0      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb36b0                z_main_stack
                0x000000003ffb3eb0                . = ALIGN (0x8)

.dram0.end      0x000000003ffb3eb0        0x0 load address 0x0000000000009730
                0x000000003ffb3eb0                . = ALIGN (0x4)
                0x000000003ffb3eb0                _end = ABSOLUTE (.)

.flash.rodata_dummy
                0x0000000000009730     0x68d0
                0x0000000000010000                . = ALIGN (0x10000)
 *fill*         0x0000000000009730     0x68d0 
                0x0000000000010000                _image_drom_start = LOADADDR (.flash.rodata)
                0x0000000000000bf4                _image_drom_size = (LOADADDR (.flash.rodata_end) - LOADADDR (.flash.rodata))
                0x000000003f400000                _image_drom_vaddr = ADDR (.flash.rodata)

.flash.rodata   0x000000003f400000      0xb64 load address 0x0000000000010000
                0x000000003f400000                _rodata_start = ABSOLUTE (.)
                0x000000003f400000                _rodata_reserved_start = ABSOLUTE (.)
                0x000000003f400000                . = ALIGN (0x4)
                0x000000003f400000                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.relay  0x000000003f400000        0x8 app/libapp.a(gpio.c.obj)
 .rodata.debug  0x000000003f400008        0x8 app/libapp.a(gpio.c.obj)
 .rodata.power  0x000000003f400010        0x8 app/libapp.a(gpio.c.obj)
 .rodata.GPIO_PIN_MUX_REG
                0x000000003f400018       0xa0 zephyr/libzephyr.a(gpio_periph.c.obj)
                0x000000003f400018                GPIO_PIN_MUX_REG
 .rodata.rtc_io_desc
                0x000000003f4000b8      0x3f0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003f4000b8                rtc_io_desc
 .rodata.rtc_io_num_map
                0x000000003f4004a8       0xa0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003f4004a8                rtc_io_num_map
 .rodata.intr_desc_table
                0x000000003f400548      0x200 zephyr/libzephyr.a(cpu.c.obj)
 .rodata.esp_clk_tree_src_get_freq_hz
                0x000000003f400748       0x2c zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .rodata.g_mmu_mem_regions
                0x000000003f400774       0x48 zephyr/libzephyr.a(ext_mem_layout.c.obj)
                0x000000003f400774                g_mmu_mem_regions
 .rodata.esp_reset_reason_init
                0x000000003f4007bc       0x20 zephyr/libzephyr.a(reset_reason.c.obj)
 .rodata        0x000000003f4007dc        0x4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.CSWTCH$21
                0x000000003f4007e0       0x84 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.esp32_clock_config0
                0x000000003f400864       0x14 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.clock_control_esp32_api
                0x000000003f400878       0x1c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.gpio_esp32_driver_api
                0x000000003f400894       0x24 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.esp32_gpio_ports_addrs
                0x000000003f4008b8        0x8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .rodata.__l_vfprintf
                0x000000003f4008c0       0x90 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .rodata.s_mspi_io_num_default
                0x000000003f400950        0x6 zephyr/libzephyr.a(flash_ops.c.obj)
 .rodata.esp_clk_tree_src_get_freq_hz.str1.1
                0x000000003f400956       0xb4 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .rodata.__FUNCTION__$0
                0x000000003f400a0a       0x1d zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .rodata.clk_hal_cpu_get_freq_hz.str1.1
                0x000000003f400a27       0x27 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .rodata.abort.str1.1
                0x000000003f400a4e        0x9 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .rodata.str1.1
                0x000000003f400a57       0x23 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.CSWTCH$62
                0x000000003f400a7a        0x6 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.str1.1
                0x000000003f400a80        0xd zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.str1.1
                0x000000003f400a8d       0x1c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.boot_banner.str1.1
                0x000000003f400aa9       0x2e zephyr/kernel/libkernel.a(banner.c.obj)
 .rodata.__l_vfprintf.str1.1
                0x000000003f400ad7        0xf /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                0x000000003f400ae6                _flash_rodata_start = ABSOLUTE (.)
                0x000000003f400ae6                __rodata_region_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.irom1.text))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.r.*))
 *(SORT_BY_ALIGNMENT(.rodata1))
                0x000000003f400ae6                __XT_EXCEPTION_TABLE_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_table))
 *(SORT_BY_ALIGNMENT(.gcc_except_table) SORT_BY_ALIGNMENT(.gcc_except_table.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.e.*))
 *(SORT_BY_ALIGNMENT(.gnu.version_r))
                0x000000003f400ae8                . = ((. + 0x3) & 0xfffffffffffffffc)
 *fill*         0x000000003f400ae6        0x2 
                0x000000003f400ae8                __eh_frame = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.eh_frame))
 .eh_frame      0x000000003f400ae8       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .eh_frame      0x000000003f400b10       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .eh_frame      0x000000003f400b38       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                0x000000003f400b64                . = ((. + 0x7) & 0xfffffffffffffffc)
 *fill*         0x000000003f400b60        0x4 
                0x000000003f400b64                __XT_EXCEPTION_DESCS_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.h.*))
                0x000000003f400b64                __XT_EXCEPTION_DESCS_END__ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc_end))
 *(SORT_BY_ALIGNMENT(.dynamic))
 *(SORT_BY_ALIGNMENT(.gnu.version_d))
                0x000000003f400b64                . = ALIGN (0x4)
                0x000000003f400b64                __rodata_region_end = ABSOLUTE (.)
                0x000000003f400b64                _lit4_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(*.lit4))
 *(SORT_BY_ALIGNMENT(.lit4.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.lit4.*))
                0x000000003f400b64                _lit4_end = ABSOLUTE (.)
                0x000000003f400b64                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rodata_wlog))
 *(SORT_BY_ALIGNMENT(.rodata_wlog*))
                0x000000003f400b64                . = ALIGN (0x4)

init_array      0x000000003f400b64        0x0 load address 0x0000000000010b64
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.ctors*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.init_array*)))
                0x0000000000000001                ASSERT ((SIZEOF (init_array) == 0x0), GNU-style constructors required but STATIC_INIT_GNU not enabled)

initlevel       0x000000003f400b64       0x40 load address 0x0000000000010b64
                0x000000003f400b64                __init_start = .
                0x000000003f400b64                __init_EARLY_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY??_*)))
                0x000000003f400b64                __init_PRE_KERNEL_1_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1??_*)))
 .z_init_PRE_KERNEL_130_00006_
                0x000000003f400b64        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_init_PRE_KERNEL_130_0_
                0x000000003f400b6c        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
 .z_init_PRE_KERNEL_140_00011_
                0x000000003f400b74        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_140_00020_
                0x000000003f400b7c        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_150_00070_
                0x000000003f400b84        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .z_init_PRE_KERNEL_160_0_
                0x000000003f400b8c        0x8 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                0x000000003f400b94                __init_PRE_KERNEL_2_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2?_*)))
 .z_init_PRE_KERNEL_20_0_
                0x000000003f400b94        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2??_*)))
                0x000000003f400b9c                __init_POST_KERNEL_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL??_*)))
 .z_init_POST_KERNEL35_0_
                0x000000003f400b9c        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                0x000000003f400ba4                __init_APPLICATION_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION??_*)))
                0x000000003f400ba4                __init_SMP_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP??_*)))
                0x000000003f400ba4                __init_end = .
                0x000000003f400ba4                __deferred_init_list_start = .
 *(SORT_BY_ALIGNMENT(.z_deferred_init*))
                0x000000003f400ba4                __deferred_init_list_end = .

device_area     0x000000003f400ba4       0x50 load address 0x0000000000010ba4
                0x000000003f400ba4                _device_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_??_*)))
 ._device.static.1_30_
                0x000000003f400ba4       0x14 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                0x000000003f400ba4                __device_dts_ord_6
 ._device.static.1_40_
                0x000000003f400bb8       0x28 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                0x000000003f400bb8                __device_dts_ord_20
                0x000000003f400bcc                __device_dts_ord_11
 ._device.static.1_50_
                0x000000003f400be0       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003f400be0                __device_dts_ord_70
                0x000000003f400bf4                _device_list_end = .

initlevel_error
                0x000000003f400b64        0x0
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_[_A-Z0-9]*)))
                0x0000000000000001                ASSERT ((SIZEOF (initlevel_error) == 0x0), Undefined initialization levels used.)

app_shmem_regions
                0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                __app_shmem_regions_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.app_regions.*)))
                0x000000003f400bf4                __app_shmem_regions_end = .

k_p4wq_initparam_area
                0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _k_p4wq_initparam_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_p4wq_initparam.static.*)))
                0x000000003f400bf4                _k_p4wq_initparam_list_end = .

_static_thread_data_area
                0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                __static_thread_data_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__static_thread_data.static.*)))
                0x000000003f400bf4                __static_thread_data_list_end = .

device_deps     0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                __device_deps_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__device_deps_pass2*)))
                0x000000003f400bf4                __device_deps_end = .

ztest           0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _ztest_expected_result_entry_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_expected_result_entry.static.*)))
                0x000000003f400bf4                _ztest_expected_result_entry_list_end = .
                0x000000003f400bf4                _ztest_suite_node_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_suite_node.static.*)))
                0x000000003f400bf4                _ztest_suite_node_list_end = .
                0x000000003f400bf4                _ztest_unit_test_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_unit_test.static.*)))
                0x000000003f400bf4                _ztest_unit_test_list_end = .
                0x000000003f400bf4                _ztest_test_rule_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_test_rule.static.*)))
                0x000000003f400bf4                _ztest_test_rule_list_end = .

bt_l2cap_fixed_chan_area
                0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _bt_l2cap_fixed_chan_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_l2cap_fixed_chan.static.*)))
                0x000000003f400bf4                _bt_l2cap_fixed_chan_list_end = .

bt_gatt_service_static_area
                0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _bt_gatt_service_static_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_gatt_service_static.static.*)))
                0x000000003f400bf4                _bt_gatt_service_static_list_end = .

tracing_backend_area
                0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _tracing_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tracing_backend.static.*)))
                0x000000003f400bf4                _tracing_backend_list_end = .

zephyr_dbg_info
 *(SORT_BY_ALIGNMENT(.dbg_thread_info))

symbol_to_keep  0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                __symbol_to_keep_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.symbol_to_keep*)))
                0x000000003f400bf4                __symbol_to_keep_end = .

shell_area      0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _shell_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell.static.*)))
                0x000000003f400bf4                _shell_list_end = .

shell_root_cmds_area
                0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _shell_root_cmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_root_cmds.static.*)))
                0x000000003f400bf4                _shell_root_cmds_list_end = .

shell_subcmds_area
                0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _shell_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_subcmds.static.*)))
                0x000000003f400bf4                _shell_subcmds_list_end = .

shell_dynamic_subcmds_area
                0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _shell_dynamic_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_dynamic_subcmds.static.*)))
                0x000000003f400bf4                _shell_dynamic_subcmds_list_end = .

cfb_font_area   0x000000003f400bf4        0x0 load address 0x0000000000010bf4
                0x000000003f400bf4                _cfb_font_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._cfb_font.static.*)))
                0x000000003f400bf4                _cfb_font_list_end = .

.intList        0x000000003f400bf4       0x18 load address 0x000000003ebfe010
 *(SORT_BY_ALIGNMENT(.irq_info*))
 .irq_info      0x000000003f400bf4        0x8 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003f400bf4                _iheader
 *(SORT_BY_ALIGNMENT(.intList*))
 .intList       0x000000003f400bfc       0x10 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)

.flash.rodata_end
                0x000000003f400c0c     0xf3f4 load address 0x0000000000010bf4
                0x000000003f410000                . = ALIGN (0x10000)
 *fill*         0x000000003f400c0c     0xf3f4 
                0x000000003f410000                _rodata_end = ABSOLUTE (.)
                0x000000003f410000                _rodata_reserved_end = ABSOLUTE (.)

.flash.text_dummy
                0x0000000000010bf4     0xf40c
                0x0000000000020000                . = ALIGN (0x10000)
 *fill*         0x0000000000010bf4     0xf40c 
                0x0000000000020000                _image_irom_start = LOADADDR (.flash.text)
                0x0000000000002f80                _image_irom_size = ((LOADADDR (.flash.text) + SIZEOF (.flash.text)) - _image_irom_start)
                0x00000000400d0000                _image_irom_vaddr = ADDR (.flash.text)

.flash.text     0x00000000400d0000     0x2f80 load address 0x0000000000020000
                0x00000000400d0000                _stext = .
                0x00000000400d0000                _instruction_reserved_start = ABSOLUTE (.)
                0x00000000400d0000                _text_start = ABSOLUTE (.)
                0x00000000400d0000                __text_region_start = ABSOLUTE (.)
                0x00000000400d0000                __rom_region_start = ABSOLUTE (.)
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*) SORT_BY_ALIGNMENT(.wifiorslpiram) SORT_BY_ALIGNMENT(.wifiorslpiram.*))
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *(SORT_BY_ALIGNMENT(.fini.literal))
 *(.fini)
 *(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .literal.main  0x00000000400d0000        0x0 app/libapp.a(main.c.obj)
                                         0x14 (size before relaxing)
 .literal.gpio_pin_configure_dt$constprop$0$isra$0
                0x00000000400d0000        0x4 app/libapp.a(gpio.c.obj)
 .literal.gpio_init
                0x00000000400d0004       0x14 app/libapp.a(gpio.c.obj)
                                         0x38 (size before relaxing)
 .literal.relay_on
                0x00000000400d0018        0x0 app/libapp.a(gpio.c.obj)
                                          0x8 (size before relaxing)
 .literal.powerLED_on
                0x00000000400d0018        0x0 app/libapp.a(gpio.c.obj)
                                          0x8 (size before relaxing)
 .literal.debugLED_on
                0x00000000400d0018        0x0 app/libapp.a(gpio.c.obj)
                                          0x8 (size before relaxing)
 .literal.free_list_add
                0x00000000400d0018        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.free_list_remove
                0x00000000400d0018        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x8 (size before relaxing)
 .literal.alloc_chunk
                0x00000000400d0018        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x8 (size before relaxing)
 .literal.merge_chunks
                0x00000000400d0018        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0xc (size before relaxing)
 .literal.split_chunks
                0x00000000400d0018        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x8 (size before relaxing)
 .literal.free_chunk
                0x00000000400d0018        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x1c (size before relaxing)
 .literal.sys_heap_free
                0x00000000400d0018        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x8 (size before relaxing)
 .literal.sys_heap_alloc
                0x00000000400d0018        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x14 (size before relaxing)
 .literal.sys_heap_aligned_alloc
                0x00000000400d0018        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x20 (size before relaxing)
 .literal.sys_heap_init
                0x00000000400d0018        0x4 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.__printk_hook_install
                0x00000000400d001c        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_thread_entry
                0x00000000400d0020        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_mspi_get_io
                0x00000000400d0020        0x8 zephyr/libzephyr.a(flash_ops.c.obj)
                                         0x10 (size before relaxing)
 .literal.uart_hal_get_baudrate
                0x00000000400d0028        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_hw_flow_ctrl
                0x00000000400d002c        0xc zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_txfifo_empty_thr
                0x00000000400d0038        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_mode
                0x00000000400d003c        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_inverse_signal
                0x00000000400d0040       0x1c zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x20 (size before relaxing)
 .literal.uart_hal_set_rx_timeout
                0x00000000400d005c        0x8 zephyr/libzephyr.a(uart_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.uart_hal_rxfifo_rst
                0x00000000400d0064       0x14 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.uart_hal_write_txfifo
                0x00000000400d0078        0x8 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                         0x10 (size before relaxing)
 .literal.uart_hal_read_rxfifo
                0x00000000400d0080        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_cpu_intr_get_desc
                0x00000000400d0080        0x4 zephyr/libzephyr.a(cpu.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_clk_slowclk_cal_set
                0x00000000400d0084        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_tree_rc_fast_d256_get_freq_hz
                0x00000000400d0088        0x8 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x18 (size before relaxing)
 .literal.esp_clk_tree_xtal32k_get_freq_hz
                0x00000000400d0090        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_clk_tree_lp_slow_get_freq_hz
                0x00000000400d0090        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_clk_tree_rc_fast_get_freq_hz
                0x00000000400d0090        0x4 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_clk_tree_lp_fast_get_freq_hz
                0x00000000400d0094        0x8 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_clk_tree_src_get_freq_hz
                0x00000000400d009c       0x2c zephyr/libzephyr.a(esp_clk_tree.c.obj)
                                         0x68 (size before relaxing)
 .literal.esp_mmu_map_init
                0x00000000400d00c8       0x44 zephyr/libzephyr.a(esp_mmu_map.c.obj)
                                         0x4c (size before relaxing)
 .literal.esp_reset_reason_get_hint
                0x00000000400d010c        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .literal.esp_reset_reason_init
                0x00000000400d0110        0xc zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_timer_impl_early_init
                0x00000000400d011c       0x24 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                         0x28 (size before relaxing)
 .literal.esp_timer_early_init
                0x00000000400d0140        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
                                          0x4 (size before relaxing)
 .literal.clk_hal_lp_slow_get_freq_hz
                0x00000000400d0140        0x4 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.clk_hal_xtal_get_freq_mhz
                0x00000000400d0144        0x8 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .literal.clk_hal_apll_get_freq_hz
                0x00000000400d014c       0x10 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x28 (size before relaxing)
 .literal.clk_hal_soc_root_get_freq_mhz
                0x00000000400d015c        0x4 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.clk_hal_cpu_get_freq_hz
                0x00000000400d0160        0xc zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x28 (size before relaxing)
 .literal.clk_hal_ahb_get_freq_hz
                0x00000000400d016c        0x4 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.clk_hal_apb_get_freq_hz
                0x00000000400d0170        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_isr_install
                0x00000000400d0170        0x4 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x8 (size before relaxing)
 .literal.arch_irq_connect_dynamic
                0x00000000400d0174        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x4 (size before relaxing)
 .literal.abort
                0x00000000400d0174        0x4 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                          0xc (size before relaxing)
 .literal.malloc_prepare
                0x00000000400d0178        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_intr_lock
                0x00000000400d0184        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_unlock
                0x00000000400d0188        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.find_desc_for_int
                0x00000000400d0188        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.is_vect_desc_usable
                0x00000000400d018c        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.get_desc_for_int
                0x00000000400d0194        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.set_interrupt_handler
                0x00000000400d0198        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.esp_intr_initialize
                0x00000000400d0198        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_intr_alloc_intrstatus
                0x00000000400d0198       0x28 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x8c (size before relaxing)
 .literal.esp_intr_alloc
                0x00000000400d01c0        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_get_status
                0x00000000400d01c0       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .literal.esp32_select_rtc_slow_clk
                0x00000000400d01d0        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x1c (size before relaxing)
 .literal.esp32_cpu_clock_configure
                0x00000000400d01d0       0x20 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x48 (size before relaxing)
 .literal.clock_control_esp32_off
                0x00000000400d01f0        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.clock_control_esp32_on
                0x00000000400d01f0        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.clock_control_esp32_configure
                0x00000000400d01f0        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x14 (size before relaxing)
 .literal.clock_control_esp32_get_rate
                0x00000000400d01f0        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.clock_control_esp32_init
                0x00000000400d01f0       0x20 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x48 (size before relaxing)
 .literal.uart_console_init
                0x00000000400d0210        0x8 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x14 (size before relaxing)
 .literal.rtcio_ll_set_drive_capability
                0x00000000400d0218        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .literal.gpio_esp32_pin_interrupt_configure
                0x00000000400d021c        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .literal.gpio_esp32_init
                0x00000000400d0220        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.gpio_esp32_config
                0x00000000400d0228       0x24 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x30 (size before relaxing)
 .literal.pinctrl_configure_pins
                0x00000000400d024c       0x10 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                         0x3c (size before relaxing)
 .literal.uart_esp32_config_get
                0x00000000400d025c        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x20 (size before relaxing)
 .literal.uart_esp32_poll_out
                0x00000000400d025c        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_poll_in
                0x00000000400d025c        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_configure
                0x00000000400d025c        0x4 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x48 (size before relaxing)
 .literal.uart_esp32_init
                0x00000000400d0260        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .text.main     0x00000000400d0260       0x1f app/libapp.a(main.c.obj)
                                         0x2f (size before relaxing)
                0x00000000400d0260                main
 *fill*         0x00000000400d027f        0x1 
 .text.gpio_pin_configure_dt$constprop$0$isra$0
                0x00000000400d0280       0x2b app/libapp.a(gpio.c.obj)
 *fill*         0x00000000400d02ab        0x1 
 .text.gpio_init
                0x00000000400d02ac       0x56 app/libapp.a(gpio.c.obj)
                                         0x6e (size before relaxing)
                0x00000000400d02ac                gpio_init
 *fill*         0x00000000400d0302        0x2 
 .text.relay_on
                0x00000000400d0304        0xd app/libapp.a(gpio.c.obj)
                                         0x10 (size before relaxing)
                0x00000000400d0304                relay_on
 *fill*         0x00000000400d0311        0x3 
 .text.powerLED_on
                0x00000000400d0314        0xd app/libapp.a(gpio.c.obj)
                                         0x10 (size before relaxing)
                0x00000000400d0314                powerLED_on
 *fill*         0x00000000400d0321        0x3 
 .text.debugLED_on
                0x00000000400d0324        0xd app/libapp.a(gpio.c.obj)
                                         0x10 (size before relaxing)
                0x00000000400d0324                debugLED_on
 *fill*         0x00000000400d0331        0x3 
 .text.free_list_add
                0x00000000400d0334       0x5b zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d038f        0x1 
 .text.free_list_remove
                0x00000000400d0390       0x1e zephyr/libzephyr.a(heap.c.obj)
                                         0x22 (size before relaxing)
 *fill*         0x00000000400d03ae        0x2 
 .text.alloc_chunk
                0x00000000400d03b0       0x77 zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d0427        0x1 
 .text.merge_chunks
                0x00000000400d0428       0x2f zephyr/libzephyr.a(heap.c.obj)
                                         0x37 (size before relaxing)
 *fill*         0x00000000400d0457        0x1 
 .text.split_chunks
                0x00000000400d0458       0x38 zephyr/libzephyr.a(heap.c.obj)
                                         0x3c (size before relaxing)
 .text.free_chunk
                0x00000000400d0490       0x5e zephyr/libzephyr.a(heap.c.obj)
                                         0x76 (size before relaxing)
 *fill*         0x00000000400d04ee        0x2 
 .text.sys_heap_free
                0x00000000400d04f0       0x24 zephyr/libzephyr.a(heap.c.obj)
                                         0x28 (size before relaxing)
                0x00000000400d04f0                sys_heap_free
 .text.sys_heap_alloc
                0x00000000400d0514       0x58 zephyr/libzephyr.a(heap.c.obj)
                                         0x64 (size before relaxing)
                0x00000000400d0514                sys_heap_alloc
 .text.sys_heap_aligned_alloc
                0x00000000400d056c       0xc2 zephyr/libzephyr.a(heap.c.obj)
                                         0xd2 (size before relaxing)
                0x00000000400d056c                sys_heap_aligned_alloc
 *fill*         0x00000000400d062e        0x2 
 .text.sys_heap_init
                0x00000000400d0630       0x7e zephyr/libzephyr.a(heap.c.obj)
                                         0x86 (size before relaxing)
                0x00000000400d0630                sys_heap_init
 *fill*         0x00000000400d06ae        0x2 
 .text.__printk_hook_install
                0x00000000400d06b0        0xa zephyr/libzephyr.a(printk.c.obj)
                0x00000000400d06b0                __printk_hook_install
 *fill*         0x00000000400d06ba        0x2 
 .text.z_thread_entry
                0x00000000400d06bc       0x14 zephyr/libzephyr.a(thread_entry.c.obj)
                                         0x18 (size before relaxing)
                0x00000000400d06bc                z_thread_entry
 .text.esp_mspi_get_io
                0x00000000400d06d0       0x3c zephyr/libzephyr.a(flash_ops.c.obj)
                                         0x40 (size before relaxing)
                0x00000000400d06d0                esp_mspi_get_io
 .text.uart_hal_get_baudrate
                0x00000000400d070c       0x32 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d070c                uart_hal_get_baudrate
 *fill*         0x00000000400d073e        0x2 
 .text.uart_hal_set_hw_flow_ctrl
                0x00000000400d0740       0x64 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d0740                uart_hal_set_hw_flow_ctrl
 .text.uart_hal_set_txfifo_empty_thr
                0x00000000400d07a4       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d07a4                uart_hal_set_txfifo_empty_thr
 .text.uart_hal_set_mode
                0x00000000400d07c4      0x19b zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d07c4                uart_hal_set_mode
 *fill*         0x00000000400d095f        0x1 
 .text.uart_hal_inverse_signal
                0x00000000400d0960       0xe3 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d0960                uart_hal_inverse_signal
 *fill*         0x00000000400d0a43        0x1 
 .text.uart_hal_set_rx_timeout
                0x00000000400d0a44       0x61 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x65 (size before relaxing)
                0x00000000400d0a44                uart_hal_set_rx_timeout
 *fill*         0x00000000400d0aa5        0x3 
 .text.uart_hal_rxfifo_rst
                0x00000000400d0aa8       0x56 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000400d0aa8                uart_hal_rxfifo_rst
 *fill*         0x00000000400d0afe        0x2 
 .text.uart_hal_write_txfifo
                0x00000000400d0b00       0x5a zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000400d0b00                uart_hal_write_txfifo
 *fill*         0x00000000400d0b5a        0x2 
 .text.uart_hal_read_rxfifo
                0x00000000400d0b5c       0xb9 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000400d0b5c                uart_hal_read_rxfifo
 *fill*         0x00000000400d0c15        0x3 
 .text.esp_cpu_intr_get_desc
                0x00000000400d0c18       0x25 zephyr/libzephyr.a(cpu.c.obj)
                                         0x28 (size before relaxing)
                0x00000000400d0c18                esp_cpu_intr_get_desc
 *fill*         0x00000000400d0c3d        0x3 
 .text.esp_clk_slowclk_cal_set
                0x00000000400d0c40        0xd zephyr/libzephyr.a(esp_clk.c.obj)
                0x00000000400d0c40                esp_clk_slowclk_cal_set
 *fill*         0x00000000400d0c4d        0x3 
 .text.esp_clk_tree_rc_fast_d256_get_freq_hz
                0x00000000400d0c50       0x41 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x4c (size before relaxing)
                0x00000000400d0c50                esp_clk_tree_rc_fast_d256_get_freq_hz
 *fill*         0x00000000400d0c91        0x3 
 .text.esp_clk_tree_xtal32k_get_freq_hz
                0x00000000400d0c94       0x44 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x4c (size before relaxing)
                0x00000000400d0c94                esp_clk_tree_xtal32k_get_freq_hz
 .text.esp_clk_tree_lp_slow_get_freq_hz
                0x00000000400d0cd8       0x3c zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x48 (size before relaxing)
                0x00000000400d0cd8                esp_clk_tree_lp_slow_get_freq_hz
 .text.esp_clk_tree_rc_fast_get_freq_hz
                0x00000000400d0d14       0x13 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x16 (size before relaxing)
                0x00000000400d0d14                esp_clk_tree_rc_fast_get_freq_hz
 *fill*         0x00000000400d0d27        0x1 
 .text.esp_clk_tree_lp_fast_get_freq_hz
                0x00000000400d0d28       0x37 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                0x00000000400d0d28                esp_clk_tree_lp_fast_get_freq_hz
 *fill*         0x00000000400d0d5f        0x1 
 .text.esp_clk_tree_src_get_freq_hz
                0x00000000400d0d60      0x102 zephyr/libzephyr.a(esp_clk_tree.c.obj)
                                        0x116 (size before relaxing)
                0x00000000400d0d60                esp_clk_tree_src_get_freq_hz
 *fill*         0x00000000400d0e62        0x2 
 .text.esp_mmu_map_init
                0x00000000400d0e64      0x28c zephyr/libzephyr.a(esp_mmu_map.c.obj)
                                        0x290 (size before relaxing)
                0x00000000400d0e64                esp_mmu_map_init
 .text.esp_reset_reason_get_hint
                0x00000000400d10f0       0x1c zephyr/libzephyr.a(reset_reason.c.obj)
                0x00000000400d10f0                esp_reset_reason_get_hint
 .text.esp_reset_reason_init
                0x00000000400d110c       0x98 zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x9c (size before relaxing)
                0x00000000400d110c                esp_reset_reason_init
 .text.esp_timer_impl_early_init
                0x00000000400d11a4       0x7a zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                         0x7e (size before relaxing)
                0x00000000400d11a4                esp_timer_impl_early_init
 *fill*         0x00000000400d121e        0x2 
 .text.esp_timer_early_init
                0x00000000400d1220        0xa zephyr/libzephyr.a(esp_timer.c.obj)
                                          0xd (size before relaxing)
                0x00000000400d1220                esp_timer_early_init
 *fill*         0x00000000400d122a        0x2 
 .text.clk_hal_lp_slow_get_freq_hz
                0x00000000400d122c       0x24 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                0x00000000400d122c                clk_hal_lp_slow_get_freq_hz
 .text.clk_hal_xtal_get_freq_mhz
                0x00000000400d1250       0x26 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                0x00000000400d1250                clk_hal_xtal_get_freq_mhz
 *fill*         0x00000000400d1276        0x2 
 .text.clk_hal_apll_get_freq_hz
                0x00000000400d1278       0xa4 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0xac (size before relaxing)
                0x00000000400d1278                clk_hal_apll_get_freq_hz
 .text.clk_hal_soc_root_get_freq_mhz
                0x00000000400d131c       0x4f zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x56 (size before relaxing)
                0x00000000400d131c                clk_hal_soc_root_get_freq_mhz
 *fill*         0x00000000400d136b        0x1 
 .text.clk_hal_cpu_get_freq_hz
                0x00000000400d136c       0x9a zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0xa2 (size before relaxing)
                0x00000000400d136c                clk_hal_cpu_get_freq_hz
 *fill*         0x00000000400d1406        0x2 
 .text.clk_hal_ahb_get_freq_hz
                0x00000000400d1408       0x32 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x36 (size before relaxing)
                0x00000000400d1408                clk_hal_ahb_get_freq_hz
 *fill*         0x00000000400d143a        0x2 
 .text.clk_hal_apb_get_freq_hz
                0x00000000400d143c        0xa zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                          0xd (size before relaxing)
                0x00000000400d143c                clk_hal_apb_get_freq_hz
 *fill*         0x00000000400d1446        0x2 
 .text.z_isr_install
                0x00000000400d1448       0x14 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x18 (size before relaxing)
                0x00000000400d1448                z_isr_install
 .text.arch_irq_connect_dynamic
                0x00000000400d145c        0xe zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x12 (size before relaxing)
                0x00000000400d145c                arch_irq_connect_dynamic
 *fill*         0x00000000400d146a        0x2 
 .text.abort    0x00000000400d146c        0xe zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                         0x14 (size before relaxing)
                0x00000000400d146c                abort
 *fill*         0x00000000400d147a        0x2 
 .text.malloc_prepare
                0x00000000400d147c       0x21 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 *fill*         0x00000000400d149d        0x3 
 .text.esp_intr_lock
                0x00000000400d14a0        0xd zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d14ad        0x3 
 .text.esp_intr_unlock
                0x00000000400d14b0       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.find_desc_for_int
                0x00000000400d14c0       0x23 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d14e3        0x1 
 .text.is_vect_desc_usable
                0x00000000400d14e4       0xaa zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d158e        0x2 
 .text.get_desc_for_int
                0x00000000400d1590       0x94 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .text.set_interrupt_handler
                0x00000000400d1624       0x27 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x2b (size before relaxing)
 *fill*         0x00000000400d164b        0x1 
 .text.esp_intr_initialize
                0x00000000400d164c       0x1a zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x00000000400d164c                esp_intr_initialize
 *fill*         0x00000000400d1666        0x2 
 .text.esp_intr_alloc_intrstatus
                0x00000000400d1668      0x38f zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0x3bb (size before relaxing)
                0x00000000400d1668                esp_intr_alloc_intrstatus
 *fill*         0x00000000400d19f7        0x1 
 .text.esp_intr_alloc
                0x00000000400d19f8       0x18 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x1c (size before relaxing)
                0x00000000400d19f8                esp_intr_alloc
 .text.clock_control_esp32_get_status
                0x00000000400d1a10       0x51 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x00000000400d1a61        0x3 
 .text.esp32_select_rtc_slow_clk
                0x00000000400d1a64       0x65 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x79 (size before relaxing)
 *fill*         0x00000000400d1ac9        0x3 
 .text.esp32_cpu_clock_configure
                0x00000000400d1acc       0xf0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x10c (size before relaxing)
 .text.clock_control_esp32_off
                0x00000000400d1bbc       0x18 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x1c (size before relaxing)
 .text.clock_control_esp32_on
                0x00000000400d1bd4       0x2c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x30 (size before relaxing)
 .text.clock_control_esp32_configure
                0x00000000400d1c00       0x5d zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x61 (size before relaxing)
 *fill*         0x00000000400d1c5d        0x3 
 .text.clock_control_esp32_get_rate
                0x00000000400d1c60       0x2a zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x32 (size before relaxing)
 *fill*         0x00000000400d1c8a        0x2 
 .text.clock_control_esp32_init
                0x00000000400d1c8c      0x106 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x10e (size before relaxing)
 *fill*         0x00000000400d1d92        0x2 
 .text.uart_console_init
                0x00000000400d1d94       0x20 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x28 (size before relaxing)
 .text.rtcio_ll_set_drive_capability
                0x00000000400d1db4       0x3a zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d1dee        0x2 
 .text.gpio_esp32_pin_interrupt_configure
                0x00000000400d1df0      0x120 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_init
                0x00000000400d1f10       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x25 (size before relaxing)
 *fill*         0x00000000400d1f31        0x3 
 .text.gpio_esp32_config
                0x00000000400d1f34      0x394 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.pinctrl_configure_pins
                0x00000000400d22c8      0x48e zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                0x00000000400d22c8                pinctrl_configure_pins
 *fill*         0x00000000400d2756        0x2 
 .text.uart_esp32_config_get
                0x00000000400d2758       0xae zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0xbe (size before relaxing)
 *fill*         0x00000000400d2806        0x2 
 .text.uart_esp32_poll_out
                0x00000000400d2808       0x32 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d283a        0x2 
 .text.uart_esp32_poll_in
                0x00000000400d283c       0x98 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text.uart_esp32_configure
                0x00000000400d28d4      0x14e zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x18a (size before relaxing)
 *fill*         0x00000000400d2a22        0x2 
 .text.uart_esp32_init
                0x00000000400d2a24       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text._OffsetAbsSyms
                0x00000000400d2a38        0x5 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                0x00000000400d2a38                _OffsetAbsSyms
 *fill*         0x00000000400d2a3d        0x0 
 *fill*         0x00000000400d2a3d        0x3 
 .text.gpio_pin_set_dt$isra$0
                0x00000000400d2a40       0x2e app/libapp.a(gpio.c.obj)
 *fill*         0x00000000400d2a6e        0x0 
 *fill*         0x00000000400d2a6e        0x0 
 *fill*         0x00000000400d2a6e        0x2 
 .text.chunk_size
                0x00000000400d2a70        0xe zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d2a7e        0x2 
 .text.set_chunk_used
                0x00000000400d2a80       0x1a zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d2a9a        0x0 
 *fill*         0x00000000400d2a9a        0x2 
 .text.free_list_remove_bidx
                0x00000000400d2a9c       0x3e zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d2ada        0x0 
 *fill*         0x00000000400d2ada        0x0 
 *fill*         0x00000000400d2ada        0x0 
 *fill*         0x00000000400d2ada        0x0 
 *fill*         0x00000000400d2ada        0x0 
 *fill*         0x00000000400d2ada        0x0 
 *fill*         0x00000000400d2ada        0x0 
 *fill*         0x00000000400d2ada        0x2 
 .text._ConfigAbsSyms
                0x00000000400d2adc        0x5 zephyr/libzephyr.a(configs.c.obj)
                0x00000000400d2adc                _ConfigAbsSyms
 *fill*         0x00000000400d2ae1        0x3 
 .text.sys_trace_idle
                0x00000000400d2ae4        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
                0x00000000400d2ae4                sys_trace_idle
 *fill*         0x00000000400d2ae9        0x3 
 .text.uart_hal_get_sclk
                0x00000000400d2aec       0x18 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2aec                uart_hal_get_sclk
 *fill*         0x00000000400d2b04        0x0 
 .text.uart_hal_set_stop_bits
                0x00000000400d2b04       0x5d zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2b04                uart_hal_set_stop_bits
 *fill*         0x00000000400d2b61        0x3 
 .text.uart_hal_get_stop_bits
                0x00000000400d2b64       0x28 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2b64                uart_hal_get_stop_bits
 .text.uart_hal_set_data_bit_num
                0x00000000400d2b8c       0x1f zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2b8c                uart_hal_set_data_bit_num
 *fill*         0x00000000400d2bab        0x1 
 .text.uart_hal_get_data_bit_num
                0x00000000400d2bac       0x11 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2bac                uart_hal_get_data_bit_num
 *fill*         0x00000000400d2bbd        0x3 
 .text.uart_hal_set_parity
                0x00000000400d2bc0       0x35 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2bc0                uart_hal_set_parity
 *fill*         0x00000000400d2bf5        0x3 
 .text.uart_hal_get_parity
                0x00000000400d2bf8       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2bf8                uart_hal_get_parity
 .text.uart_hal_get_hw_flow_ctrl
                0x00000000400d2c18       0x24 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2c18                uart_hal_get_hw_flow_ctrl
 .text.uart_hal_set_rxfifo_full_thr
                0x00000000400d2c3c       0x1d zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2c3c                uart_hal_set_rxfifo_full_thr
 *fill*         0x00000000400d2c59        0x0 
 *fill*         0x00000000400d2c59        0x3 
 .text.uart_hal_is_mode_rs485_half_duplex
                0x00000000400d2c5c       0x1b zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2c5c                uart_hal_is_mode_rs485_half_duplex
 *fill*         0x00000000400d2c77        0x0 
 *fill*         0x00000000400d2c77        0x1 
 .text.uart_hal_get_symb_len
                0x00000000400d2c78       0x7b zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d2c78                uart_hal_get_symb_len
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x0 
 *fill*         0x00000000400d2cf3        0x1 
 .text.z_get_sw_isr_table_idx
                0x00000000400d2cf4        0x5 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                0x00000000400d2cf4                z_get_sw_isr_table_idx
 *fill*         0x00000000400d2cf9        0x0 
 *fill*         0x00000000400d2cf9        0x0 
 *fill*         0x00000000400d2cf9        0x3 
 .text.z_xt_ints_off
                0x00000000400d2cfc       0x16 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x0 
 *fill*         0x00000000400d2d12        0x2 
 .text.gpio_esp32_port_get_raw
                0x00000000400d2d14       0x23 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d2d37        0x1 
 .text.gpio_esp32_port_set_masked_raw
                0x00000000400d2d38       0x55 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d2d8d        0x3 
 .text.gpio_esp32_port_set_bits_raw
                0x00000000400d2d90       0x2e zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d2dbe        0x2 
 .text.gpio_esp32_port_clear_bits_raw
                0x00000000400d2dc0       0x2e zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d2dee        0x2 
 .text.gpio_esp32_port_toggle_bits
                0x00000000400d2df0       0x48 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_manage_callback
                0x00000000400d2e38       0x56 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d2e8e        0x2 
 .text.gpio_esp32_get_pending_int
                0x00000000400d2e90       0x51 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d2ee1        0x0 
 *fill*         0x00000000400d2ee1        0x3 
 .text.pinctrl_lookup_state
                0x00000000400d2ee4       0x2a zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                0x00000000400d2ee4                pinctrl_lookup_state
 *fill*         0x00000000400d2f0e        0x0 
 *fill*         0x00000000400d2f0e        0x2 
 .text.uart_esp32_err_check
                0x00000000400d2f10       0x13 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d2f23        0x0 
 *fill*         0x00000000400d2f23        0x0 
 *fill*         0x00000000400d2f23        0x0 
 *fill*         0x00000000400d2f23        0x1 
 .text          0x00000000400d2f24       0x59 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
                0x00000000400d2f24                __divsf3
                0x00000000400d2f80                . = ALIGN (0x4)
 *fill*         0x00000000400d2f7d        0x3 
                0x00000000400d2f80                _text_end = ABSOLUTE (.)
                0x00000000400d2f80                _instruction_reserved_end = ABSOLUTE (.)
                0x00000000400d2f80                __text_region_end = ABSOLUTE (.)
                0x00000000400d2f80                __rom_region_end = ABSOLUTE (.)
                0x00000000400d2f80                _etext = .

.stab
 *(SORT_BY_ALIGNMENT(.stab))

.stabstr
 *(SORT_BY_ALIGNMENT(.stabstr))

.stab.excl
 *(SORT_BY_ALIGNMENT(.stab.excl))

.stab.exclstr
 *(SORT_BY_ALIGNMENT(.stab.exclstr))

.stab.index
 *(SORT_BY_ALIGNMENT(.stab.index))

.stab.indexstr
 *(SORT_BY_ALIGNMENT(.stab.indexstr))

.gnu.build.attributes
 *(SORT_BY_ALIGNMENT(.gnu.build.attributes) SORT_BY_ALIGNMENT(.gnu.build.attributes.*))

.comment        0x0000000000000000       0x20
 *(SORT_BY_ALIGNMENT(.comment))
 .comment       0x0000000000000000       0x20 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                                         0x21 (size before relaxing)
 .comment       0x0000000000000020       0x21 app/libapp.a(main.c.obj)
 .comment       0x0000000000000020       0x21 app/libapp.a(gpio.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(heap.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(printk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(thread_entry.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(configs.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(loader.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(tracing_none.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(flash_ops.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(cache_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(mmu_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(flash_mmap.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(uart_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_console.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(mpu_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(gpio_periph.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(cpu.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_module.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_time.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(reset_reason.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(efuse_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(efuse_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log_noos.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(cache_utils.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(device.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(init_static.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(kheap.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(idle.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(sched.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(timeout.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(mempool.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(banner.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug
 *(SORT_BY_ALIGNMENT(.debug))

.line
 *(SORT_BY_ALIGNMENT(.line))

.debug_srcinfo
 *(SORT_BY_ALIGNMENT(.debug_srcinfo))

.debug_sfnames
 *(SORT_BY_ALIGNMENT(.debug_sfnames))

.debug_aranges  0x0000000000000000     0x2118
 *(SORT_BY_ALIGNMENT(.debug_aranges))
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_aranges
                0x0000000000000020       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_aranges
                0x0000000000000040       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_aranges
                0x00000000000000b0       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_aranges
                0x00000000000000d0       0x20 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_aranges
                0x00000000000000f0       0x20 app/libapp.a(main.c.obj)
 .debug_aranges
                0x0000000000000110       0x60 app/libapp.a(gpio.c.obj)
 .debug_aranges
                0x0000000000000170       0x90 zephyr/libzephyr.a(heap.c.obj)
 .debug_aranges
                0x0000000000000200       0x50 zephyr/libzephyr.a(printk.c.obj)
 .debug_aranges
                0x0000000000000250       0x20 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_aranges
                0x0000000000000270       0x20 zephyr/libzephyr.a(configs.c.obj)
 .debug_aranges
                0x0000000000000290       0x30 zephyr/libzephyr.a(soc.c.obj)
 .debug_aranges
                0x00000000000002c0       0x28 zephyr/libzephyr.a(loader.c.obj)
 .debug_aranges
                0x00000000000002e8       0x38 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_aranges
                0x0000000000000320       0x48 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_aranges
                0x0000000000000368      0x110 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_aranges
                0x0000000000000478       0x28 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_aranges
                0x00000000000004a0       0x30 zephyr/libzephyr.a(cache_esp32.c.obj)
 .debug_aranges
                0x00000000000004d0       0x60 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_aranges
                0x0000000000000530       0x48 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000578       0x38 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_aranges
                0x00000000000005b0       0x98 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000648       0x40 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_aranges
                0x0000000000000688       0x58 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_aranges
                0x00000000000006e0       0x78 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_aranges
                0x0000000000000758       0x18 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_aranges
                0x0000000000000770       0x40 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_aranges
                0x00000000000007b0      0x110 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_aranges
                0x00000000000008c0       0x38 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_aranges
                0x00000000000008f8       0x28 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_aranges
                0x0000000000000920       0x48 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_aranges
                0x0000000000000968       0x40 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_aranges
                0x00000000000009a8       0xf8 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_aranges
                0x0000000000000aa0       0x40 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000ae0       0x20 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .debug_aranges
                0x0000000000000b00       0x20 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_aranges
                0x0000000000000b20       0x20 zephyr/libzephyr.a(bootloader_console.c.obj)
 .debug_aranges
                0x0000000000000b40       0x28 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_aranges
                0x0000000000000b68       0x20 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_aranges
                0x0000000000000b88       0x20 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .debug_aranges
                0x0000000000000ba8       0x48 zephyr/libzephyr.a(bootloader_init.c.obj)
 .debug_aranges
                0x0000000000000bf0       0x38 zephyr/libzephyr.a(bootloader_common.c.obj)
 .debug_aranges
                0x0000000000000c28       0x48 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .debug_aranges
                0x0000000000000c70       0x18 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_aranges
                0x0000000000000c88       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_aranges
                0x0000000000000ca0       0xa8 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_aranges
                0x0000000000000d48       0x60 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_aranges
                0x0000000000000da8       0x28 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .debug_aranges
                0x0000000000000dd0       0x28 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .debug_aranges
                0x0000000000000df8       0x20 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .debug_aranges
                0x0000000000000e18       0x68 zephyr/libzephyr.a(cpu.c.obj)
 .debug_aranges
                0x0000000000000e80       0x68 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_aranges
                0x0000000000000ee8       0x50 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_aranges
                0x0000000000000f38       0x40 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_aranges
                0x0000000000000f78       0x40 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_aranges
                0x0000000000000fb8       0x20 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_aranges
                0x0000000000000fd8       0x20 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_aranges
                0x0000000000000ff8       0x30 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_aranges
                0x0000000000001028      0x118 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_aranges
                0x0000000000001140       0x28 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_aranges
                0x0000000000001168       0x58 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_aranges
                0x00000000000011c0       0x18 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .debug_aranges
                0x00000000000011d8       0x90 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_aranges
                0x0000000000001268       0x28 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_aranges
                0x0000000000001290       0xa0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_aranges
                0x0000000000001330       0x38 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_aranges
                0x0000000000001368       0x90 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_aranges
                0x00000000000013f8       0xb8 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_aranges
                0x00000000000014b0       0x40 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_aranges
                0x00000000000014f0       0x70 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_aranges
                0x0000000000001560       0x50 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_aranges
                0x00000000000015b0       0x58 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_aranges
                0x0000000000001608       0x38 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_aranges
                0x0000000000001640       0x48 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_aranges
                0x0000000000001688       0x20 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_aranges
                0x00000000000016a8       0x28 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_aranges
                0x00000000000016d0       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_aranges
                0x00000000000016f8       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_aranges
                0x0000000000001728       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_aranges
                0x0000000000001760       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_aranges
                0x0000000000001780       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_aranges
                0x00000000000017f0       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_aranges
                0x0000000000001810       0x40 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_aranges
                0x0000000000001850       0xb8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_aranges
                0x0000000000001908       0x20 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_aranges
                0x0000000000001928       0x60 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_aranges
                0x0000000000001988       0xc8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_aranges
                0x0000000000001a50       0x58 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_aranges
                0x0000000000001aa8       0x30 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_aranges
                0x0000000000001ad8       0x80 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_aranges
                0x0000000000001b58       0x20 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_aranges
                0x0000000000001b78       0x20 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_aranges
                0x0000000000001b98       0x48 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_aranges
                0x0000000000001be0       0x40 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_aranges
                0x0000000000001c20       0x38 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_aranges
                0x0000000000001c58       0x38 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_aranges
                0x0000000000001c90       0x68 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_aranges
                0x0000000000001cf8       0x20 zephyr/kernel/libkernel.a(init_static.c.obj)
 .debug_aranges
                0x0000000000001d18       0x48 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_aranges
                0x0000000000001d60       0x28 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_aranges
                0x0000000000001d88       0x90 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_aranges
                0x0000000000001e18      0x1a0 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_aranges
                0x0000000000001fb8       0x40 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_aranges
                0x0000000000001ff8       0x90 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_aranges
                0x0000000000002088       0x58 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_aranges
                0x00000000000020e0       0x20 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_aranges
                0x0000000000002100       0x18 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_pubnames
 *(SORT_BY_ALIGNMENT(.debug_pubnames))

.debug_info     0x0000000000000000    0x7750f
 *(SORT_BY_ALIGNMENT(.debug_info) SORT_BY_ALIGNMENT(.gnu.linkonce.wi.*))
 .debug_info    0x0000000000000000       0xdc zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_info    0x00000000000000dc      0x1e8 app/libapp.a(main.c.obj)
 .debug_info    0x00000000000002c4      0xdb1 app/libapp.a(gpio.c.obj)
 .debug_info    0x0000000000001075     0x2f57 zephyr/libzephyr.a(heap.c.obj)
 .debug_info    0x0000000000003fcc      0x559 zephyr/libzephyr.a(printk.c.obj)
 .debug_info    0x0000000000004525      0x609 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_info    0x0000000000004b2e       0x38 zephyr/libzephyr.a(configs.c.obj)
 .debug_info    0x0000000000004b66     0x367e zephyr/libzephyr.a(soc.c.obj)
 .debug_info    0x00000000000081e4     0x1646 zephyr/libzephyr.a(loader.c.obj)
 .debug_info    0x000000000000982a       0x56 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_info    0x0000000000009880       0x24 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_info    0x00000000000098a4      0x399 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_info    0x0000000000009c3d     0x5369 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_info    0x000000000000efa6      0x1c9 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_info    0x000000000000f16f      0x176 zephyr/libzephyr.a(cache_esp32.c.obj)
 .debug_info    0x000000000000f2e5      0xdf6 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_info    0x00000000000100db      0x31e zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_info    0x00000000000103f9     0x31ea zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_info    0x00000000000135e3     0x407c zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_info    0x000000000001765f     0x48d3 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_info    0x000000000001bf32      0xe43 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_info    0x000000000001cd75     0x375d zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_info    0x00000000000204d2      0xc5a zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_info    0x000000000002112c     0x114b zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_info    0x0000000000022277     0x27e5 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_info    0x0000000000024a5c     0x1027 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_info    0x0000000000025a83      0xf2c zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_info    0x00000000000269af     0x167f zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_info    0x000000000002802e      0xa68 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_info    0x0000000000028a96     0x2b02 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_info    0x000000000002b598     0x197f zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_info    0x000000000002cf17       0xa6 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .debug_info    0x000000000002cfbd      0x398 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_info    0x000000000002d355      0x162 zephyr/libzephyr.a(bootloader_console.c.obj)
 .debug_info    0x000000000002d4b7      0x156 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_info    0x000000000002d60d      0x250 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_info    0x000000000002d85d      0x836 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .debug_info    0x000000000002e093     0x3684 zephyr/libzephyr.a(bootloader_init.c.obj)
 .debug_info    0x0000000000031717      0xeed zephyr/libzephyr.a(bootloader_common.c.obj)
 .debug_info    0x0000000000032604      0x896 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .debug_info    0x0000000000032e9a      0x10e zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_info    0x0000000000032fa8      0x1af zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_info    0x0000000000033157     0x3f53 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_info    0x00000000000370aa      0xfaa zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_info    0x0000000000038054     0x2182 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .debug_info    0x000000000003a1d6       0xaf zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .debug_info    0x000000000003a285       0x52 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .debug_info    0x000000000003a2d7      0x825 zephyr/libzephyr.a(cpu.c.obj)
 .debug_info    0x000000000003aafc      0x6e4 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_info    0x000000000003b1e0      0x774 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_info    0x000000000003b954     0x25fc zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_info    0x000000000003df50      0x545 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_info    0x000000000003e495      0x171 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_info    0x000000000003e606      0x447 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_info    0x000000000003ea4d     0x23b4 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_info    0x0000000000040e01     0x4c66 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_info    0x0000000000045a67      0xc44 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_info    0x00000000000466ab      0x928 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_info    0x0000000000046fd3      0x1b3 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .debug_info    0x0000000000047186     0x25b7 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_info    0x000000000004973d     0x1530 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_info    0x000000000004ac6d      0xd21 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_info    0x000000000004b98e      0x38c zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_info    0x000000000004bd1a      0xb33 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_info    0x000000000004c84d     0x231a zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_info    0x000000000004eb67     0x229f zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_info    0x0000000000050e06     0x42e1 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_info    0x00000000000550e7      0x85c zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_info    0x0000000000055943     0x258b zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_info    0x0000000000057ece      0x251 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_info    0x000000000005811f      0xabd zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_info    0x0000000000058bdc       0xba zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_info    0x0000000000058c96      0x1e4 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_info    0x0000000000058e7a       0xd4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_info    0x0000000000058f4e      0x389 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_info    0x00000000000592d7       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_info    0x00000000000592fb       0x22 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_info    0x000000000005931d      0x394 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_info    0x00000000000596b1      0x91c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_info    0x0000000000059fcd     0x18b3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_info    0x000000000005b880      0x5cd zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_info    0x000000000005be4d      0x75d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_info    0x000000000005c5aa       0x23 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_info    0x000000000005c5cd      0xee9 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_info    0x000000000005d4b6      0x121 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_info    0x000000000005d5d7      0xddf zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_info    0x000000000005e3b6     0x1b8b zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_info    0x000000000005ff41     0x1651 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_info    0x0000000000061592      0x809 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_info    0x0000000000061d9b     0x37dd zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_info    0x0000000000065578      0x1b2 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_info    0x000000000006572a     0x1890 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_info    0x0000000000066fba     0x2af1 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_info    0x0000000000069aab      0x88b zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_info    0x000000000006a336      0x33f zephyr/kernel/libkernel.a(device.c.obj)
 .debug_info    0x000000000006a675      0x958 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_info    0x000000000006afcd     0x187d zephyr/kernel/libkernel.a(init.c.obj)
 .debug_info    0x000000000006c84a       0x38 zephyr/kernel/libkernel.a(init_static.c.obj)
 .debug_info    0x000000000006c882      0xcc9 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_info    0x000000000006d54b      0x245 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_info    0x000000000006d790     0x14eb zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_info    0x000000000006ec7b     0x5787 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_info    0x0000000000074402      0xd07 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_info    0x0000000000075109     0x15e3 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_info    0x00000000000766ec      0xc0c zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_info    0x00000000000772f8       0xc5 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_info    0x00000000000773bd      0x152 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_abbrev   0x0000000000000000    0x1225b
 *(SORT_BY_ALIGNMENT(.debug_abbrev))
 .debug_abbrev  0x0000000000000000       0x62 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_abbrev  0x0000000000000062      0x148 app/libapp.a(main.c.obj)
 .debug_abbrev  0x00000000000001aa      0x31a app/libapp.a(gpio.c.obj)
 .debug_abbrev  0x00000000000004c4      0x42a zephyr/libzephyr.a(heap.c.obj)
 .debug_abbrev  0x00000000000008ee      0x2cb zephyr/libzephyr.a(printk.c.obj)
 .debug_abbrev  0x0000000000000bb9      0x243 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_abbrev  0x0000000000000dfc       0x2e zephyr/libzephyr.a(configs.c.obj)
 .debug_abbrev  0x0000000000000e2a      0x346 zephyr/libzephyr.a(soc.c.obj)
 .debug_abbrev  0x0000000000001170      0x367 zephyr/libzephyr.a(loader.c.obj)
 .debug_abbrev  0x00000000000014d7       0x48 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_abbrev  0x000000000000151f       0x14 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_abbrev  0x0000000000001533      0x242 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_abbrev  0x0000000000001775      0x628 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_abbrev  0x0000000000001d9d       0xce zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_abbrev  0x0000000000001e6b      0x125 zephyr/libzephyr.a(cache_esp32.c.obj)
 .debug_abbrev  0x0000000000001f90      0x2cd zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_abbrev  0x000000000000225d      0x181 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_abbrev  0x00000000000023de      0x440 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_abbrev  0x000000000000281e      0x50e zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_abbrev  0x0000000000002d2c      0x5aa zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_abbrev  0x00000000000032d6      0x48c zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_abbrev  0x0000000000003762      0x44f zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_abbrev  0x0000000000003bb1      0x142 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_abbrev  0x0000000000003cf3      0x315 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_abbrev  0x0000000000004008      0x4f4 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_abbrev  0x00000000000044fc      0x254 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_abbrev  0x0000000000004750      0x1d5 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_abbrev  0x0000000000004925      0x314 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_abbrev  0x0000000000004c39      0x256 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_abbrev  0x0000000000004e8f      0x3be zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_abbrev  0x000000000000524d      0x369 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_abbrev  0x00000000000055b6       0x62 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .debug_abbrev  0x0000000000005618      0x17f zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_abbrev  0x0000000000005797       0xf2 zephyr/libzephyr.a(bootloader_console.c.obj)
 .debug_abbrev  0x0000000000005889       0xcc zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_abbrev  0x0000000000005955      0x12b zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_abbrev  0x0000000000005a80      0x28f zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .debug_abbrev  0x0000000000005d0f      0x30d zephyr/libzephyr.a(bootloader_init.c.obj)
 .debug_abbrev  0x000000000000601c      0x35d zephyr/libzephyr.a(bootloader_common.c.obj)
 .debug_abbrev  0x0000000000006379      0x2a9 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .debug_abbrev  0x0000000000006622       0x83 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_abbrev  0x00000000000066a5       0xa1 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_abbrev  0x0000000000006746      0x5f1 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_abbrev  0x0000000000006d37      0x389 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_abbrev  0x00000000000070c0      0x1bd zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .debug_abbrev  0x000000000000727d       0x53 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .debug_abbrev  0x00000000000072d0       0x4c zephyr/libzephyr.a(bootloader_soc.c.obj)
 .debug_abbrev  0x000000000000731c      0x288 zephyr/libzephyr.a(cpu.c.obj)
 .debug_abbrev  0x00000000000075a4      0x331 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_abbrev  0x00000000000078d5      0x228 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_abbrev  0x0000000000007afd      0x3c7 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_abbrev  0x0000000000007ec4      0x25f zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_abbrev  0x0000000000008123      0x109 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_abbrev  0x000000000000822c      0x193 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_abbrev  0x00000000000083bf      0x22e zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_abbrev  0x00000000000085ed      0x67c zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_abbrev  0x0000000000008c69      0x38c zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_abbrev  0x0000000000008ff5      0x298 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_abbrev  0x000000000000928d       0xbd zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .debug_abbrev  0x000000000000934a      0x49e zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_abbrev  0x00000000000097e8      0x270 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_abbrev  0x0000000000009a58      0x3df zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_abbrev  0x0000000000009e37      0x1c2 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_abbrev  0x0000000000009ff9      0x438 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_abbrev  0x000000000000a431      0x5ed zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_abbrev  0x000000000000aa1e      0x237 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_abbrev  0x000000000000ac55      0x3b1 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_abbrev  0x000000000000b006      0x23a zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_abbrev  0x000000000000b240      0x2fb zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_abbrev  0x000000000000b53b      0x147 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_abbrev  0x000000000000b682      0x364 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_abbrev  0x000000000000b9e6       0x6b zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_abbrev  0x000000000000ba51      0x136 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_abbrev  0x000000000000bb87       0x8f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_abbrev  0x000000000000bc16      0x21f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_abbrev  0x000000000000be35       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_abbrev  0x000000000000be49       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_abbrev  0x000000000000be5b      0x1ba zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_abbrev  0x000000000000c015      0x27e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_abbrev  0x000000000000c293      0x508 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_abbrev  0x000000000000c79b      0x1a3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_abbrev  0x000000000000c93e      0x2c9 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_abbrev  0x000000000000cc07       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_abbrev  0x000000000000cc1b      0x4b8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_abbrev  0x000000000000d0d3       0xba zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_abbrev  0x000000000000d18d      0x47c zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_abbrev  0x000000000000d609      0x5c6 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_abbrev  0x000000000000dbcf      0x4c2 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_abbrev  0x000000000000e091      0x396 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_abbrev  0x000000000000e427      0x645 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_abbrev  0x000000000000ea6c       0xd0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_abbrev  0x000000000000eb3c      0x3b8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_abbrev  0x000000000000eef4      0x58e zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_abbrev  0x000000000000f482      0x365 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_abbrev  0x000000000000f7e7      0x1c7 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_abbrev  0x000000000000f9ae      0x342 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_abbrev  0x000000000000fcf0      0x6a5 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_abbrev  0x0000000000010395       0x2e zephyr/kernel/libkernel.a(init_static.c.obj)
 .debug_abbrev  0x00000000000103c3      0x412 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_abbrev  0x00000000000107d5      0x16e zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_abbrev  0x0000000000010943      0x4f8 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_abbrev  0x0000000000010e3b      0x6d4 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_abbrev  0x000000000001150f      0x38e zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_abbrev  0x000000000001189d      0x493 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_abbrev  0x0000000000011d30      0x3b8 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_abbrev  0x00000000000120e8       0x8c zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_abbrev  0x0000000000012174       0xe7 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_line     0x0000000000000000    0x4f6d0
 *(SORT_BY_ALIGNMENT(.debug_line) SORT_BY_ALIGNMENT(.debug_line.*) SORT_BY_ALIGNMENT(.debug_line_end))
 .debug_line    0x0000000000000000      0x279 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_line    0x0000000000000279      0x29e app/libapp.a(main.c.obj)
 .debug_line    0x0000000000000517      0x7e8 app/libapp.a(gpio.c.obj)
 .debug_line    0x0000000000000cff     0x20ee zephyr/libzephyr.a(heap.c.obj)
 .debug_line    0x0000000000002ded      0x510 zephyr/libzephyr.a(printk.c.obj)
 .debug_line    0x00000000000032fd      0x441 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_line    0x000000000000373e      0x7a5 zephyr/libzephyr.a(configs.c.obj)
 .debug_line    0x0000000000003ee3      0x974 zephyr/libzephyr.a(soc.c.obj)
 .debug_line    0x0000000000004857     0x135f zephyr/libzephyr.a(loader.c.obj)
 .debug_line    0x0000000000005bb6       0xb0 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_line    0x0000000000005c66      0x337 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_line    0x0000000000005f9d      0x65a zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_line    0x00000000000065f7     0x3a6b zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_line    0x000000000000a062      0x241 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_line    0x000000000000a2a3      0x22e zephyr/libzephyr.a(cache_esp32.c.obj)
 .debug_line    0x000000000000a4d1     0x1377 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_line    0x000000000000b848      0x410 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_line    0x000000000000bc58      0x8bd zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_line    0x000000000000c515     0x1afe zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_line    0x000000000000e013     0x11e7 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_line    0x000000000000f1fa     0x10f7 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_line    0x00000000000102f1      0xf3e zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_line    0x000000000001122f      0x3ca zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_line    0x00000000000115f9      0x625 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_line    0x0000000000011c1e     0x24e6 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_line    0x0000000000014104      0x4f9 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_line    0x00000000000145fd      0x493 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_line    0x0000000000014a90      0xbb1 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_line    0x0000000000015641      0x61d zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_line    0x0000000000015c5e     0x1823 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_line    0x0000000000017481      0x872 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_line    0x0000000000017cf3      0x11d zephyr/libzephyr.a(bootloader_mem.c.obj)
 .debug_line    0x0000000000017e10      0x544 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_line    0x0000000000018354      0x29a zephyr/libzephyr.a(bootloader_console.c.obj)
 .debug_line    0x00000000000185ee      0x1e3 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_line    0x00000000000187d1      0x325 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_line    0x0000000000018af6      0xc34 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .debug_line    0x000000000001972a      0x9c4 zephyr/libzephyr.a(bootloader_init.c.obj)
 .debug_line    0x000000000001a0ee      0x9e5 zephyr/libzephyr.a(bootloader_common.c.obj)
 .debug_line    0x000000000001aad3      0x96f zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .debug_line    0x000000000001b442      0x1b8 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_line    0x000000000001b5fa      0x1bc zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_line    0x000000000001b7b6     0x1e25 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_line    0x000000000001d5db     0x15ae zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_line    0x000000000001eb89      0x2e0 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .debug_line    0x000000000001ee69      0x8c3 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .debug_line    0x000000000001f72c       0xb7 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .debug_line    0x000000000001f7e3      0xb50 zephyr/libzephyr.a(cpu.c.obj)
 .debug_line    0x0000000000020333      0x934 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_line    0x0000000000020c67      0xb2d zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_line    0x0000000000021794      0xcee zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_line    0x0000000000022482      0x830 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_line    0x0000000000022cb2      0x240 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_line    0x0000000000022ef2      0x84d zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_line    0x000000000002373f      0xdf4 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_line    0x0000000000024533     0x2c5e zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_line    0x0000000000027191      0xc85 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_line    0x0000000000027e16      0xfd1 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_line    0x0000000000028de7      0x2ce zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .debug_line    0x00000000000290b5     0x33e7 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_line    0x000000000002c49c      0x478 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_line    0x000000000002c914     0x21d6 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_line    0x000000000002eaea      0x5f7 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_line    0x000000000002f0e1     0x1058 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_line    0x0000000000030139     0x2763 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_line    0x000000000003289c      0x46b zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_line    0x0000000000032d07     0x16e3 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_line    0x00000000000343ea      0x9b5 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_line    0x0000000000034d9f      0xd10 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_line    0x0000000000035aaf      0x43c zephyr/libzephyr.a(log_noos.c.obj)
 .debug_line    0x0000000000035eeb      0x80d zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_line    0x00000000000366f8       0xa1 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_line    0x0000000000036799      0x26d zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_line    0x0000000000036a06      0x101 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_line    0x0000000000036b07      0x38c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_line    0x0000000000036e93      0x226 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_line    0x00000000000370b9      0x392 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_line    0x000000000003744b      0x396 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_line    0x00000000000377e1      0x5f4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_line    0x0000000000037dd5     0x156f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_line    0x0000000000039344      0x383 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_line    0x00000000000396c7      0x886 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_line    0x0000000000039f4d       0xaf zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_line    0x0000000000039ffc      0xa7c zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_line    0x000000000003aa78      0x1c1 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_line    0x000000000003ac39      0x927 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_line    0x000000000003b560     0x25b7 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_line    0x000000000003db17     0x10de zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_line    0x000000000003ebf5      0x4f9 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_line    0x000000000003f0ee     0x2156 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_line    0x0000000000041244      0x270 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_line    0x00000000000414b4     0x1116 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_line    0x00000000000425ca      0xe7a zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_line    0x0000000000043444      0x882 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_line    0x0000000000043cc6      0x50e zephyr/kernel/libkernel.a(device.c.obj)
 .debug_line    0x00000000000441d4      0x64e zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_line    0x0000000000044822     0x1185 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_line    0x00000000000459a7       0x71 zephyr/kernel/libkernel.a(init_static.c.obj)
 .debug_line    0x0000000000045a18      0xa75 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_line    0x000000000004648d      0x328 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_line    0x00000000000467b5     0x10d4 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_line    0x0000000000047889     0x51c3 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_line    0x000000000004ca4c      0x8b8 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_line    0x000000000004d304     0x18b0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_line    0x000000000004ebb4      0x8f1 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_line    0x000000000004f4a5       0xb9 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_line    0x000000000004f55e      0x172 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_frame    0x0000000000000000     0x4ab8
 *(SORT_BY_ALIGNMENT(.debug_frame))
 .debug_frame   0x0000000000000000       0x28 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_frame   0x0000000000000028       0x28 app/libapp.a(main.c.obj)
 .debug_frame   0x0000000000000050       0xe8 app/libapp.a(gpio.c.obj)
 .debug_frame   0x0000000000000138      0x178 zephyr/libzephyr.a(heap.c.obj)
 .debug_frame   0x00000000000002b0       0xb8 zephyr/libzephyr.a(printk.c.obj)
 .debug_frame   0x0000000000000368       0x28 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_frame   0x0000000000000390       0x28 zephyr/libzephyr.a(configs.c.obj)
 .debug_frame   0x00000000000003b8       0x58 zephyr/libzephyr.a(soc.c.obj)
 .debug_frame   0x0000000000000410       0x40 zephyr/libzephyr.a(loader.c.obj)
 .debug_frame   0x0000000000000450       0x70 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_frame   0x00000000000004c0       0xa0 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_frame   0x0000000000000560      0x2f8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_frame   0x0000000000000858       0x40 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_frame   0x0000000000000898       0x58 zephyr/libzephyr.a(cache_esp32.c.obj)
 .debug_frame   0x00000000000008f0       0xe8 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_frame   0x00000000000009d8       0xa0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_frame   0x0000000000000a78       0x70 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_frame   0x0000000000000ae8      0x190 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_frame   0x0000000000000c78       0x88 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_frame   0x0000000000000d00       0xd0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_frame   0x0000000000000dd0      0x130 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_frame   0x0000000000000f00       0x88 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_frame   0x0000000000000f88      0x2f8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_frame   0x0000000000001280       0x70 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_frame   0x00000000000012f0       0x40 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_frame   0x0000000000001330       0xa0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_frame   0x00000000000013d0       0x88 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_frame   0x0000000000001458      0x2b0 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_frame   0x0000000000001708       0x88 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_frame   0x0000000000001790       0x28 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .debug_frame   0x00000000000017b8       0x28 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_frame   0x00000000000017e0       0x28 zephyr/libzephyr.a(bootloader_console.c.obj)
 .debug_frame   0x0000000000001808       0x40 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_frame   0x0000000000001848       0x28 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_frame   0x0000000000001870       0x28 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .debug_frame   0x0000000000001898       0xa0 zephyr/libzephyr.a(bootloader_init.c.obj)
 .debug_frame   0x0000000000001938       0x70 zephyr/libzephyr.a(bootloader_common.c.obj)
 .debug_frame   0x00000000000019a8       0xa0 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .debug_frame   0x0000000000001a48      0x1c0 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_frame   0x0000000000001c08       0xe8 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_frame   0x0000000000001cf0       0x40 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .debug_frame   0x0000000000001d30       0x40 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .debug_frame   0x0000000000001d70       0x28 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .debug_frame   0x0000000000001d98      0x100 zephyr/libzephyr.a(cpu.c.obj)
 .debug_frame   0x0000000000001e98      0x100 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_frame   0x0000000000001f98       0xb8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_frame   0x0000000000002050       0x88 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_frame   0x00000000000020d8       0x88 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_frame   0x0000000000002160       0x28 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_frame   0x0000000000002188       0x28 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_frame   0x00000000000021b0       0x58 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_frame   0x0000000000002208      0x310 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_frame   0x0000000000002518       0x40 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_frame   0x0000000000002558       0xd0 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_frame   0x0000000000002628      0x178 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_frame   0x00000000000027a0       0x40 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_frame   0x00000000000027e0      0x1a8 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_frame   0x0000000000002988       0x70 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_frame   0x00000000000029f8      0x178 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_frame   0x0000000000002b70      0x1f0 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_frame   0x0000000000002d60       0x88 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_frame   0x0000000000002de8      0x118 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_frame   0x0000000000002f00       0xb8 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_frame   0x0000000000002fb8       0xd0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_frame   0x0000000000003088       0x70 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_frame   0x00000000000030f8       0xa0 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_frame   0x0000000000003198       0x28 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_frame   0x00000000000031c0       0x40 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_frame   0x0000000000003200       0x40 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_frame   0x0000000000003240       0x58 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_frame   0x0000000000003298       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_frame   0x0000000000003308       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_frame   0x0000000000003330      0x118 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_frame   0x0000000000003448       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_frame   0x0000000000003470       0x88 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_frame   0x00000000000034f8      0x1f0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_frame   0x00000000000036e8       0x28 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_frame   0x0000000000003710       0xe8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_frame   0x00000000000037f8      0x220 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_frame   0x0000000000003a18       0xd0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_frame   0x0000000000003ae8       0x58 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_frame   0x0000000000003b40      0x148 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_frame   0x0000000000003c88       0x28 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_frame   0x0000000000003cb0       0x28 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_frame   0x0000000000003cd8       0xa0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_frame   0x0000000000003d78       0x88 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_frame   0x0000000000003e00       0x70 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_frame   0x0000000000003e70       0x70 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_frame   0x0000000000003ee0      0x100 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_frame   0x0000000000003fe0       0x28 zephyr/kernel/libkernel.a(init_static.c.obj)
 .debug_frame   0x0000000000004008       0xa0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_frame   0x00000000000040a8       0x40 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_frame   0x00000000000040e8      0x178 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_frame   0x0000000000004260      0x4a8 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_frame   0x0000000000004708       0x88 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_frame   0x0000000000004790      0x178 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_frame   0x0000000000004908       0xd0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_frame   0x00000000000049d8       0x28 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_frame   0x0000000000004a00       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .debug_frame   0x0000000000004a28       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .debug_frame   0x0000000000004a50       0x28 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .debug_frame   0x0000000000004a78       0x40 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)

.debug_str      0x0000000000000000    0x144fa
 *(SORT_BY_ALIGNMENT(.debug_str))
 .debug_str     0x0000000000000000      0x2f0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                                        0x329 (size before relaxing)
 .debug_str     0x00000000000002f0      0x1b9 app/libapp.a(main.c.obj)
                                        0x2af (size before relaxing)
 .debug_str     0x00000000000004a9      0x484 app/libapp.a(gpio.c.obj)
                                        0x82a (size before relaxing)
 .debug_str     0x000000000000092d      0x3d4 zephyr/libzephyr.a(heap.c.obj)
                                        0x6ab (size before relaxing)
 .debug_str     0x0000000000000d01      0x14b zephyr/libzephyr.a(printk.c.obj)
                                        0x54e (size before relaxing)
 .debug_str     0x0000000000000e4c      0x1fa zephyr/libzephyr.a(thread_entry.c.obj)
                                        0x52d (size before relaxing)
 .debug_str     0x0000000000001046       0x56 zephyr/libzephyr.a(configs.c.obj)
                                        0x192 (size before relaxing)
 .debug_str     0x000000000000109c     0x1bf5 zephyr/libzephyr.a(soc.c.obj)
                                       0x21f5 (size before relaxing)
 .debug_str     0x0000000000002c91      0x845 zephyr/libzephyr.a(loader.c.obj)
                                        0xc94 (size before relaxing)
 .debug_str     0x00000000000034d6       0x97 zephyr/libzephyr.a(tracing_none.c.obj)
                                        0x1d3 (size before relaxing)
 .debug_str     0x000000000000356d       0x65 zephyr/libzephyr.a(windowspill_asm.S.obj)
                                         0x8c (size before relaxing)
 .debug_str     0x00000000000035d2      0x2a5 zephyr/libzephyr.a(flash_ops.c.obj)
                                        0x576 (size before relaxing)
 .debug_str     0x0000000000003877     0x1f0b zephyr/libzephyr.a(esp_flash_api.c.obj)
                                       0x29b8 (size before relaxing)
 .debug_str     0x0000000000005782       0x92 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                                        0x45b (size before relaxing)
 .debug_str     0x0000000000005814       0xc2 zephyr/libzephyr.a(cache_esp32.c.obj)
                                        0x2af (size before relaxing)
 .debug_str     0x00000000000058d6      0x3b9 zephyr/libzephyr.a(mmu_hal.c.obj)
                                        0x619 (size before relaxing)
 .debug_str     0x0000000000005c8f      0x248 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                        0x43d (size before relaxing)
 .debug_str     0x0000000000005ed7      0x337 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                       0x1ff5 (size before relaxing)
 .debug_str     0x000000000000620e      0x543 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                       0x20d0 (size before relaxing)
 .debug_str     0x0000000000006751      0xa13 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                       0x2cf7 (size before relaxing)
 .debug_str     0x0000000000007164      0x34a zephyr/libzephyr.a(flash_mmap.c.obj)
                                        0x77c (size before relaxing)
 .debug_str     0x00000000000074ae      0x1f5 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                       0x2300 (size before relaxing)
 .debug_str     0x00000000000076a3       0xe1 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
                                        0x968 (size before relaxing)
 .debug_str     0x0000000000007784      0x45d zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                        0xce9 (size before relaxing)
 .debug_str     0x0000000000007be1      0x54d zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                       0x1481 (size before relaxing)
 .debug_str     0x000000000000812e       0xf1 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                        0xcb7 (size before relaxing)
 .debug_str     0x000000000000821f       0x94 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                                        0xcf7 (size before relaxing)
 .debug_str     0x00000000000082b3      0x115 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                        0xd96 (size before relaxing)
 .debug_str     0x00000000000083c8       0x9b zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                        0x72f (size before relaxing)
 .debug_str     0x0000000000008463      0xf66 zephyr/libzephyr.a(uart_hal.c.obj)
                                       0x1339 (size before relaxing)
 .debug_str     0x00000000000093c9      0x194 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                        0xa1f (size before relaxing)
 .debug_str     0x000000000000955d       0x9d zephyr/libzephyr.a(bootloader_mem.c.obj)
                                        0x274 (size before relaxing)
 .debug_str     0x00000000000095fa      0x496 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
                                        0x6d3 (size before relaxing)
 .debug_str     0x0000000000009a90       0xc6 zephyr/libzephyr.a(bootloader_console.c.obj)
                                        0x2f5 (size before relaxing)
 .debug_str     0x0000000000009b56       0xd4 zephyr/libzephyr.a(esp_rom_sys.c.obj)
                                        0x2bf (size before relaxing)
 .debug_str     0x0000000000009c2a      0x11a zephyr/libzephyr.a(mpu_hal.c.obj)
                                        0x2ff (size before relaxing)
 .debug_str     0x0000000000009d44      0x270 zephyr/libzephyr.a(bootloader_esp32.c.obj)
                                        0xa2f (size before relaxing)
 .debug_str     0x0000000000009fb4      0x145 zephyr/libzephyr.a(bootloader_init.c.obj)
                                       0x242a (size before relaxing)
 .debug_str     0x000000000000a0f9      0x242 zephyr/libzephyr.a(bootloader_common.c.obj)
                                        0x767 (size before relaxing)
 .debug_str     0x000000000000a33b      0x24e zephyr/libzephyr.a(bootloader_common_loader.c.obj)
                                        0x7da (size before relaxing)
 .debug_str     0x000000000000a589       0x7c zephyr/libzephyr.a(gpio_periph.c.obj)
                                        0x273 (size before relaxing)
 .debug_str     0x000000000000a605       0xb7 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                                        0x2a0 (size before relaxing)
 .debug_str     0x000000000000a6bc      0x562 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                       0x2148 (size before relaxing)
 .debug_str     0x000000000000ac1e      0x375 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                        0xb2f (size before relaxing)
 .debug_str     0x000000000000af93     0x1147 zephyr/libzephyr.a(bootloader_efuse.c.obj)
                                       0x16a0 (size before relaxing)
 .debug_str     0x000000000000c0da       0x6e zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
                                        0x27a (size before relaxing)
 .debug_str     0x000000000000c148       0x6b zephyr/libzephyr.a(bootloader_soc.c.obj)
                                        0x1dd (size before relaxing)
 .debug_str     0x000000000000c1b3      0x378 zephyr/libzephyr.a(cpu.c.obj)
                                        0x75c (size before relaxing)
 .debug_str     0x000000000000c52b      0x315 zephyr/libzephyr.a(esp_clk.c.obj)
                                        0x86b (size before relaxing)
 .debug_str     0x000000000000c840      0x204 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                        0x8b3 (size before relaxing)
 .debug_str     0x000000000000ca44      0x232 zephyr/libzephyr.a(rtc_module.c.obj)
                                       0x19d6 (size before relaxing)
 .debug_str     0x000000000000cc76      0x338 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                        0x65a (size before relaxing)
 .debug_str     0x000000000000cfae       0x7c zephyr/libzephyr.a(cpu_region_protect.c.obj)
                                        0x2e8 (size before relaxing)
 .debug_str     0x000000000000d02a      0x11c zephyr/libzephyr.a(esp_clk_tree.c.obj)
                                        0x6ee (size before relaxing)
 .debug_str     0x000000000000d146      0x18a zephyr/libzephyr.a(rtc_init.c.obj)
                                       0x17cd (size before relaxing)
 .debug_str     0x000000000000d2d0      0xa29 zephyr/libzephyr.a(rtc_clk.c.obj)
                                       0x281d (size before relaxing)
 .debug_str     0x000000000000dcf9      0x20a zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                        0xce5 (size before relaxing)
 .debug_str     0x000000000000df03      0x1fc zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x8f5 (size before relaxing)
 .debug_str     0x000000000000e0ff       0x92 zephyr/libzephyr.a(ext_mem_layout.c.obj)
                                        0x376 (size before relaxing)
 .debug_str     0x000000000000e191      0x437 zephyr/libzephyr.a(esp_mmu_map.c.obj)
                                        0xc01 (size before relaxing)
 .debug_str     0x000000000000e5c8       0x8c zephyr/libzephyr.a(esp_rom_uart.c.obj)
                                        0x931 (size before relaxing)
 .debug_str     0x000000000000e654      0x534 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                                        0x93c (size before relaxing)
 .debug_str     0x000000000000eb88      0x1ae zephyr/libzephyr.a(reset_reason.c.obj)
                                        0x64b (size before relaxing)
 .debug_str     0x000000000000ed36      0x2b4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                        0xbe7 (size before relaxing)
 .debug_str     0x000000000000efea      0x51f zephyr/libzephyr.a(esp_timer.c.obj)
                                        0xcd6 (size before relaxing)
 .debug_str     0x000000000000f509      0x183 zephyr/libzephyr.a(efuse_hal.c.obj)
                                       0x179c (size before relaxing)
 .debug_str     0x000000000000f68c      0x658 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                       0x241a (size before relaxing)
 .debug_str     0x000000000000fce4       0xdd zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                        0x813 (size before relaxing)
 .debug_str     0x000000000000fdc1      0x288 zephyr/libzephyr.a(efuse_hal.c.obj)
                                       0x18d7 (size before relaxing)
 .debug_str     0x0000000000010049       0xa9 zephyr/libzephyr.a(log_noos.c.obj)
                                        0x4b7 (size before relaxing)
 .debug_str     0x00000000000100f2      0x1da zephyr/libzephyr.a(cache_utils.c.obj)
                                        0x8ce (size before relaxing)
 .debug_str     0x00000000000102cc       0x56 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                                        0x237 (size before relaxing)
 .debug_str     0x0000000000010322       0x72 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                        0x2b6 (size before relaxing)
 .debug_str     0x0000000000010394       0x62 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                        0x248 (size before relaxing)
 .debug_str     0x00000000000103f6      0x15b zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                        0x404 (size before relaxing)
 .debug_str     0x0000000000010551       0x45 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0x78 (size before relaxing)
 .debug_str     0x0000000000010596       0x47 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x7a (size before relaxing)
 .debug_str     0x00000000000105dd      0x112 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                        0x488 (size before relaxing)
 .debug_str     0x00000000000106ef      0x146 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                                        0x699 (size before relaxing)
 .debug_str     0x0000000000010835      0x32a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0xadf (size before relaxing)
 .debug_str     0x0000000000010b5f       0x4b zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                        0x50c (size before relaxing)
 .debug_str     0x0000000000010baa      0x151 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                        0x4b8 (size before relaxing)
 .debug_str     0x0000000000010cfb       0x48 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                         0x7b (size before relaxing)
 .debug_str     0x0000000000010d43      0x264 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                        0xa5c (size before relaxing)
 .debug_str     0x0000000000010fa7      0x172 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                        0x2db (size before relaxing)
 .debug_str     0x0000000000011119      0x152 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x7bd (size before relaxing)
 .debug_str     0x000000000001126b      0x470 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0xa65 (size before relaxing)
 .debug_str     0x00000000000116db      0x453 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                       0x1427 (size before relaxing)
 .debug_str     0x0000000000011b2e      0x178 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                        0x57f (size before relaxing)
 .debug_str     0x0000000000011ca6      0x945 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                       0x166d (size before relaxing)
 .debug_str     0x00000000000125eb       0xbb zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                                        0x2ca (size before relaxing)
 .debug_str     0x00000000000126a6      0x128 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                        0xac8 (size before relaxing)
 .debug_str     0x00000000000127ce      0x5f3 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                       0x1a4c (size before relaxing)
 .debug_str     0x0000000000012dc1      0x166 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x48e (size before relaxing)
 .debug_str     0x0000000000012f27       0xba zephyr/kernel/libkernel.a(device.c.obj)
                                        0x317 (size before relaxing)
 .debug_str     0x0000000000012fe1       0x73 zephyr/kernel/libkernel.a(fatal.c.obj)
                                        0x6a9 (size before relaxing)
 .debug_str     0x0000000000013054      0x5d4 zephyr/kernel/libkernel.a(init.c.obj)
                                        0xd83 (size before relaxing)
 .debug_str     0x0000000000013628       0x38 zephyr/kernel/libkernel.a(init_static.c.obj)
                                        0x182 (size before relaxing)
 .debug_str     0x0000000000013660      0x14b zephyr/kernel/libkernel.a(kheap.c.obj)
                                        0x700 (size before relaxing)
 .debug_str     0x00000000000137ab       0x55 zephyr/kernel/libkernel.a(idle.c.obj)
                                        0x30c (size before relaxing)
 .debug_str     0x0000000000013800      0x258 zephyr/kernel/libkernel.a(thread.c.obj)
                                        0xacf (size before relaxing)
 .debug_str     0x0000000000013a58      0x74c zephyr/kernel/libkernel.a(sched.c.obj)
                                       0x1235 (size before relaxing)
 .debug_str     0x00000000000141a4       0xff zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                        0x8ec (size before relaxing)
 .debug_str     0x00000000000142a3      0x114 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x79c (size before relaxing)
 .debug_str     0x00000000000143b7       0xb0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                        0x7d5 (size before relaxing)
 .debug_str     0x0000000000014467       0x33 zephyr/kernel/libkernel.a(banner.c.obj)
                                        0x21d (size before relaxing)
 .debug_str     0x000000000001449a       0x60 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                                        0x280 (size before relaxing)

.debug_loc      0x0000000000000000    0x1ff8e
 *(SORT_BY_ALIGNMENT(.debug_loc))
 .debug_loc     0x0000000000000000      0x332 app/libapp.a(gpio.c.obj)
 .debug_loc     0x0000000000000332     0x2dd1 zephyr/libzephyr.a(heap.c.obj)
 .debug_loc     0x0000000000003103       0xe4 zephyr/libzephyr.a(printk.c.obj)
 .debug_loc     0x00000000000031e7       0x15 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_loc     0x00000000000031fc       0x25 zephyr/libzephyr.a(soc.c.obj)
 .debug_loc     0x0000000000003221      0x9fe zephyr/libzephyr.a(loader.c.obj)
 .debug_loc     0x0000000000003c1f      0x135 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_loc     0x0000000000003d54     0x17c1 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_loc     0x0000000000005515       0x4c zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_loc     0x0000000000005561      0xe9e zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_loc     0x00000000000063ff       0xb9 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_loc     0x00000000000064b8      0x23c zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_loc     0x00000000000066f4      0xe61 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_loc     0x0000000000007555      0x637 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_loc     0x0000000000007b8c      0x9f3 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_loc     0x000000000000857f      0x605 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_loc     0x0000000000008b84      0x23a zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_loc     0x0000000000008dbe     0x1214 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_loc     0x0000000000009fd2      0x122 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_loc     0x000000000000a0f4       0x6f zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_loc     0x000000000000a163      0x785 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_loc     0x000000000000a8e8      0x111 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_loc     0x000000000000a9f9      0xec1 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_loc     0x000000000000b8ba      0x3c1 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_loc     0x000000000000bc7b      0x134 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_loc     0x000000000000bdaf       0x22 zephyr/libzephyr.a(bootloader_console.c.obj)
 .debug_loc     0x000000000000bdd1      0x11f zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_loc     0x000000000000bef0      0x1f8 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .debug_loc     0x000000000000c0e8       0x4f zephyr/libzephyr.a(bootloader_init.c.obj)
 .debug_loc     0x000000000000c137      0x28a zephyr/libzephyr.a(bootloader_common.c.obj)
 .debug_loc     0x000000000000c3c1      0x2e4 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .debug_loc     0x000000000000c6a5     0x1043 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_loc     0x000000000000d6e8      0x578 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_loc     0x000000000000dc60      0x4bc zephyr/libzephyr.a(cpu.c.obj)
 .debug_loc     0x000000000000e11c      0x129 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_loc     0x000000000000e245      0x229 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_loc     0x000000000000e46e      0x42b zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_loc     0x000000000000e899      0x1c6 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_loc     0x000000000000ea5f       0x3f zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_loc     0x000000000000ea9e      0x16f zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_loc     0x000000000000ec0d      0x3fe zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_loc     0x000000000000f00b     0x1179 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_loc     0x0000000000010184      0x2f3 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_loc     0x0000000000010477      0x493 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_loc     0x000000000001090a     0x1e4f zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_loc     0x0000000000012759      0x114 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_loc     0x000000000001286d      0x9af zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_loc     0x000000000001321c      0x13b zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_loc     0x0000000000013357      0x34f zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_loc     0x00000000000136a6     0x1200 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_loc     0x00000000000148a6       0x45 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_loc     0x00000000000148eb      0xddf zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_loc     0x00000000000156ca      0x327 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_loc     0x00000000000159f1      0x3b2 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_loc     0x0000000000015da3       0x15 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_loc     0x0000000000015db8      0x1e8 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_loc     0x0000000000015fa0       0x15 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_loc     0x0000000000015fb5       0x15 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_loc     0x0000000000015fca       0x71 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_loc     0x000000000001603b       0x3a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_loc     0x0000000000016075      0x10d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_loc     0x0000000000016182      0x98b zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_loc     0x0000000000016b0d      0x380 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_loc     0x0000000000016e8d      0x195 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_loc     0x0000000000017022      0x360 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_loc     0x0000000000017382     0x12a4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_loc     0x0000000000018626      0x6d1 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_loc     0x0000000000018cf7       0x56 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_loc     0x0000000000018d4d     0x13c7 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_loc     0x000000000001a114       0x42 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_loc     0x000000000001a156      0x813 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_loc     0x000000000001a969      0x509 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_loc     0x000000000001ae72      0x285 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_loc     0x000000000001b0f7       0x96 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_loc     0x000000000001b18d       0x69 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_loc     0x000000000001b1f6      0x462 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_loc     0x000000000001b658      0x3e1 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_loc     0x000000000001ba39       0x3f zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_loc     0x000000000001ba78      0x6f1 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_loc     0x000000000001c169     0x2c4f zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_loc     0x000000000001edb8      0x205 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_loc     0x000000000001efbd      0xb31 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_loc     0x000000000001faee      0x4a0 zephyr/kernel/libkernel.a(mempool.c.obj)

.debug_macinfo
 *(SORT_BY_ALIGNMENT(.debug_macinfo))

.debug_weaknames
 *(SORT_BY_ALIGNMENT(.debug_weaknames))

.debug_funcnames
 *(SORT_BY_ALIGNMENT(.debug_funcnames))

.debug_typenames
 *(SORT_BY_ALIGNMENT(.debug_typenames))

.debug_varnames
 *(SORT_BY_ALIGNMENT(.debug_varnames))

.debug_pubtypes
 *(SORT_BY_ALIGNMENT(.debug_pubtypes))

.debug_ranges   0x0000000000000000     0x49d0
 *(SORT_BY_ALIGNMENT(.debug_ranges))
 .debug_ranges  0x0000000000000000       0x68 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_ranges  0x0000000000000068       0x10 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_ranges  0x0000000000000078       0x40 app/libapp.a(main.c.obj)
 .debug_ranges  0x00000000000000b8       0x68 app/libapp.a(gpio.c.obj)
 .debug_ranges  0x0000000000000120      0x378 zephyr/libzephyr.a(heap.c.obj)
 .debug_ranges  0x0000000000000498       0x40 zephyr/libzephyr.a(printk.c.obj)
 .debug_ranges  0x00000000000004d8       0x10 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_ranges  0x00000000000004e8       0x10 zephyr/libzephyr.a(configs.c.obj)
 .debug_ranges  0x00000000000004f8       0x20 zephyr/libzephyr.a(soc.c.obj)
 .debug_ranges  0x0000000000000518       0x88 zephyr/libzephyr.a(loader.c.obj)
 .debug_ranges  0x00000000000005a0       0x28 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_ranges  0x00000000000005c8       0x50 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_ranges  0x0000000000000618      0x260 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_ranges  0x0000000000000878       0x18 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_ranges  0x0000000000000890       0x20 zephyr/libzephyr.a(cache_esp32.c.obj)
 .debug_ranges  0x00000000000008b0      0x250 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_ranges  0x0000000000000b00       0x78 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_ranges  0x0000000000000b78       0x60 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_ranges  0x0000000000000bd8      0x350 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_ranges  0x0000000000000f28       0x98 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_ranges  0x0000000000000fc0       0xd8 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_ranges  0x0000000000001098       0x80 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_ranges  0x0000000000001118       0x48 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_ranges  0x0000000000001160      0x168 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_ranges  0x00000000000012c8       0x28 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_ranges  0x00000000000012f0       0x18 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_ranges  0x0000000000001308       0x80 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_ranges  0x0000000000001388       0x30 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_ranges  0x00000000000013b8      0x218 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_ranges  0x00000000000015d0       0xc8 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_ranges  0x0000000000001698       0x10 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .debug_ranges  0x00000000000016a8       0x10 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_ranges  0x00000000000016b8       0x10 zephyr/libzephyr.a(bootloader_console.c.obj)
 .debug_ranges  0x00000000000016c8       0x18 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_ranges  0x00000000000016e0       0x10 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_ranges  0x00000000000016f0       0x28 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .debug_ranges  0x0000000000001718       0x38 zephyr/libzephyr.a(bootloader_init.c.obj)
 .debug_ranges  0x0000000000001750       0x98 zephyr/libzephyr.a(bootloader_common.c.obj)
 .debug_ranges  0x00000000000017e8       0x50 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .debug_ranges  0x0000000000001838      0x148 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_ranges  0x0000000000001980      0x1d8 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .debug_ranges  0x0000000000001b58       0x18 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .debug_ranges  0x0000000000001b70       0x18 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .debug_ranges  0x0000000000001b88       0x10 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .debug_ranges  0x0000000000001b98       0x88 zephyr/libzephyr.a(cpu.c.obj)
 .debug_ranges  0x0000000000001c20       0x88 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_ranges  0x0000000000001ca8       0xd8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_ranges  0x0000000000001d80       0x88 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_ranges  0x0000000000001e08       0x48 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_ranges  0x0000000000001e50       0x28 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_ranges  0x0000000000001e78       0x10 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_ranges  0x0000000000001e88       0x98 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_ranges  0x0000000000001f20      0x470 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_ranges  0x0000000000002390       0x50 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_ranges  0x00000000000023e0      0x138 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_ranges  0x0000000000002518      0x310 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_ranges  0x0000000000002828       0x50 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_ranges  0x0000000000002878       0xc0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_ranges  0x0000000000002938       0x40 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_ranges  0x0000000000002978       0xd0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_ranges  0x0000000000002a48      0x250 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_ranges  0x0000000000002c98       0x50 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_ranges  0x0000000000002ce8      0x180 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_ranges  0x0000000000002e68       0xd8 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_ranges  0x0000000000002f40      0x100 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_ranges  0x0000000000003040       0x28 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_ranges  0x0000000000003068       0x70 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_ranges  0x00000000000030d8       0x10 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_ranges  0x00000000000030e8       0x18 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_ranges  0x0000000000003100       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_ranges  0x0000000000003118       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_ranges  0x0000000000003138       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_ranges  0x0000000000003160       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_ranges  0x0000000000003170      0x140 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_ranges  0x00000000000032b0       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_ranges  0x00000000000032c0       0x48 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_ranges  0x0000000000003308       0xc0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_ranges  0x00000000000033c8       0x10 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_ranges  0x00000000000033d8       0x68 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_ranges  0x0000000000003440      0x278 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_ranges  0x00000000000036b8       0x60 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_ranges  0x0000000000003718       0x38 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_ranges  0x0000000000003750      0x1c8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_ranges  0x0000000000003918       0x10 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_ranges  0x0000000000003928      0x158 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_ranges  0x0000000000003a80       0xa8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_ranges  0x0000000000003b28       0x48 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_ranges  0x0000000000003b70       0x70 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_ranges  0x0000000000003be0       0x40 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_ranges  0x0000000000003c20       0xb8 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_ranges  0x0000000000003cd8       0x10 zephyr/kernel/libkernel.a(init_static.c.obj)
 .debug_ranges  0x0000000000003ce8       0xb0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_ranges  0x0000000000003d98       0x18 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_ranges  0x0000000000003db0      0x188 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_ranges  0x0000000000003f38      0x790 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_ranges  0x00000000000046c8       0x30 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_ranges  0x00000000000046f8      0x268 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_ranges  0x0000000000004960       0x60 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_ranges  0x00000000000049c0       0x10 zephyr/kernel/libkernel.a(banner.c.obj)

.debug_addr
 *(SORT_BY_ALIGNMENT(.debug_addr))

.debug_line_str
 *(SORT_BY_ALIGNMENT(.debug_line_str))

.debug_loclists
 *(SORT_BY_ALIGNMENT(.debug_loclists))

.debug_macro
 *(SORT_BY_ALIGNMENT(.debug_macro))

.debug_names
 *(SORT_BY_ALIGNMENT(.debug_names))

.debug_rnglists
 *(SORT_BY_ALIGNMENT(.debug_rnglists))

.debug_str_offsets
 *(SORT_BY_ALIGNMENT(.debug_str_offsets))

.debug_sup
 *(SORT_BY_ALIGNMENT(.debug_sup))

.xtensa.info    0x0000000000000000       0x38
 *(SORT_BY_ALIGNMENT(.xtensa.info))
 .xtensa.info   0x0000000000000000       0x38 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .xtensa.info   0x0000000000000038        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xtensa.info   0x0000000000000038        0x0 app/libapp.a(main.c.obj)
 .xtensa.info   0x0000000000000038        0x0 app/libapp.a(gpio.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(printk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(assert.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(dec.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(hex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rb.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(configs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(loader.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(flash_ops.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cache_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mmu_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_mem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_console.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_random.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mpu_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_efuse.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cpu.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(hw_random.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(system_internal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_err.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(system_time.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(init_static.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_setjmp.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strcspn.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strstr.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)

.xt.insn
 *(SORT_BY_ALIGNMENT(.xt.insn))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.x.*))

.xt.prop        0x0000000000000000     0x96cc
 *(SORT_BY_ALIGNMENT(.xt.prop))
 .xt.prop       0x0000000000000000       0x24 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xt.prop       0x0000000000000024       0x24 app/libapp.a(main.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000000048      0x150 app/libapp.a(gpio.c.obj)
                                        0x204 (size before relaxing)
 .xt.prop       0x0000000000000198      0x2d0 zephyr/libzephyr.a(heap.c.obj)
                                        0x444 (size before relaxing)
 .xt.prop       0x0000000000000468        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                        0x750 (size before relaxing)
 .xt.prop       0x0000000000000468       0xc0 zephyr/libzephyr.a(printk.c.obj)
                                        0x168 (size before relaxing)
 .xt.prop       0x0000000000000528        0x0 zephyr/libzephyr.a(sem.c.obj)
                                         0xcc (size before relaxing)
 .xt.prop       0x0000000000000528       0x18 zephyr/libzephyr.a(thread_entry.c.obj)
                                         0x24 (size before relaxing)
 .xt.prop       0x0000000000000540        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                        0x9fc (size before relaxing)
 .xt.prop       0x0000000000000540        0x0 zephyr/libzephyr.a(assert.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000000540        0x0 zephyr/libzephyr.a(dec.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000000540        0x0 zephyr/libzephyr.a(hex.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000000540        0x0 zephyr/libzephyr.a(rb.c.obj)
                                        0x5d0 (size before relaxing)
 .xt.prop       0x0000000000000540        0x0 zephyr/libzephyr.a(timeutil.c.obj)
                                        0x36c (size before relaxing)
 .xt.prop       0x0000000000000540        0x0 zephyr/libzephyr.a(bitarray.c.obj)
                                        0x720 (size before relaxing)
 .xt.prop       0x0000000000000540       0x24 zephyr/libzephyr.a(configs.c.obj)
 .xt.prop       0x0000000000000564       0x60 zephyr/libzephyr.a(soc.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x00000000000005c4        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x00000000000005c4      0x24c zephyr/libzephyr.a(loader.c.obj)
                                        0x258 (size before relaxing)
 .xt.prop       0x0000000000000810       0x24 zephyr/libzephyr.a(tracing_none.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x0000000000000834       0xf0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .xt.prop       0x0000000000000924      0x114 zephyr/libzephyr.a(flash_ops.c.obj)
                                        0x174 (size before relaxing)
 .xt.prop       0x0000000000000a38      0x480 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                        0xeb8 (size before relaxing)
 .xt.prop       0x0000000000000eb8        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
                                        0x1bc (size before relaxing)
 .xt.prop       0x0000000000000eb8       0x3c zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                                         0x78 (size before relaxing)
 .xt.prop       0x0000000000000ef4       0x78 zephyr/libzephyr.a(cache_esp32.c.obj)
                                         0xa8 (size before relaxing)
 .xt.prop       0x0000000000000f6c       0x30 zephyr/libzephyr.a(mmu_hal.c.obj)
                                        0x594 (size before relaxing)
 .xt.prop       0x0000000000000f9c      0x108 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                        0x114 (size before relaxing)
 .xt.prop       0x00000000000010a4      0x114 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x00000000000011b8      0x3f0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                        0x45c (size before relaxing)
 .xt.prop       0x00000000000015a8       0x6c zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                        0x21c (size before relaxing)
 .xt.prop       0x0000000000001614       0x78 zephyr/libzephyr.a(flash_mmap.c.obj)
                                        0x354 (size before relaxing)
 .xt.prop       0x000000000000168c      0x1c8 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                        0x324 (size before relaxing)
 .xt.prop       0x0000000000001854        0x0 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x0000000000001854       0x18 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .xt.prop       0x000000000000186c      0x120 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x000000000000198c      0x960 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                        0xa14 (size before relaxing)
 .xt.prop       0x00000000000022ec       0xc0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0xcc (size before relaxing)
 .xt.prop       0x00000000000023ac       0x60 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .xt.prop       0x000000000000240c        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                        0x444 (size before relaxing)
 .xt.prop       0x000000000000240c        0x0 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x000000000000240c      0x198 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                        0x1bc (size before relaxing)
 .xt.prop       0x00000000000025a4       0x9c zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                         0xf0 (size before relaxing)
 .xt.prop       0x0000000000002640      0x3e4 zephyr/libzephyr.a(uart_hal.c.obj)
                                        0x5e8 (size before relaxing)
 .xt.prop       0x0000000000002a24      0x114 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000002b38       0x24 zephyr/libzephyr.a(bootloader_mem.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000002b5c       0x60 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .xt.prop       0x0000000000002bbc       0x30 zephyr/libzephyr.a(bootloader_console.c.obj)
 .xt.prop       0x0000000000002bec        0x0 zephyr/libzephyr.a(bootloader_random.c.obj)
                                         0x6c (size before relaxing)
 .xt.prop       0x0000000000002bec       0x30 zephyr/libzephyr.a(esp_rom_sys.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x0000000000002c1c       0x9c zephyr/libzephyr.a(mpu_hal.c.obj)
 .xt.prop       0x0000000000002cb8      0x120 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .xt.prop       0x0000000000002dd8      0x114 zephyr/libzephyr.a(bootloader_init.c.obj)
                                        0x144 (size before relaxing)
 .xt.prop       0x0000000000002eec       0x3c zephyr/libzephyr.a(bootloader_common.c.obj)
                                        0x180 (size before relaxing)
 .xt.prop       0x0000000000002f28       0x60 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000002f88        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
                                          0xc (size before relaxing)
 .xt.prop       0x0000000000002f88        0x0 zephyr/libzephyr.a(i2s_periph.c.obj)
                                          0xc (size before relaxing)
 .xt.prop       0x0000000000002f88        0xc zephyr/libzephyr.a(gpio_periph.c.obj)
                                         0x18 (size before relaxing)
 .xt.prop       0x0000000000002f94       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xt.prop       0x0000000000002fac        0x0 zephyr/libzephyr.a(dport_access.c.obj)
                                         0x48 (size before relaxing)
 .xt.prop       0x0000000000002fac        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
                                        0x24c (size before relaxing)
 .xt.prop       0x0000000000002fac      0x36c zephyr/libzephyr.a(bootloader_flash.c.obj)
                                        0x678 (size before relaxing)
 .xt.prop       0x0000000000003318      0x228 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                        0x2f4 (size before relaxing)
 .xt.prop       0x0000000000003540       0x54 zephyr/libzephyr.a(bootloader_efuse.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x0000000000003594       0x60 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .xt.prop       0x00000000000035f4       0x24 zephyr/libzephyr.a(bootloader_soc.c.obj)
 .xt.prop       0x0000000000003618       0x48 zephyr/libzephyr.a(cpu.c.obj)
                                        0x294 (size before relaxing)
 .xt.prop       0x0000000000003660        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.prop       0x0000000000003660       0x60 zephyr/libzephyr.a(esp_clk.c.obj)
                                        0x228 (size before relaxing)
 .xt.prop       0x00000000000036c0        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
                                        0x4bc (size before relaxing)
 .xt.prop       0x00000000000036c0      0x42c zephyr/libzephyr.a(periph_ctrl.c.obj)
                                        0x4c8 (size before relaxing)
 .xt.prop       0x0000000000003aec        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                         0xf0 (size before relaxing)
 .xt.prop       0x0000000000003aec       0x90 zephyr/libzephyr.a(rtc_module.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x0000000000003b7c        0x0 zephyr/libzephyr.a(hw_random.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000003b7c        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
                                        0xb28 (size before relaxing)
 .xt.prop       0x0000000000003b7c      0x1a4 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                        0x1bc (size before relaxing)
 .xt.prop       0x0000000000003d20       0x48 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .xt.prop       0x0000000000003d68      0x1b0 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .xt.prop       0x0000000000003f18       0xf0 zephyr/libzephyr.a(rtc_init.c.obj)
                                         0xfc (size before relaxing)
 .xt.prop       0x0000000000004008      0x5e8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x9c0 (size before relaxing)
 .xt.prop       0x00000000000045f0      0x144 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.prop       0x0000000000004734      0x264 zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x360 (size before relaxing)
 .xt.prop       0x0000000000004998        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
                                        0x228 (size before relaxing)
 .xt.prop       0x0000000000004998        0xc zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .xt.prop       0x00000000000049a4      0x258 zephyr/libzephyr.a(esp_mmu_map.c.obj)
                                        0xa5c (size before relaxing)
 .xt.prop       0x0000000000004bfc       0x90 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .xt.prop       0x0000000000004c8c      0x204 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                                        0x7ec (size before relaxing)
 .xt.prop       0x0000000000004e90        0x0 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000004e90        0x0 zephyr/libzephyr.a(clk.c.obj)
                                        0x138 (size before relaxing)
 .xt.prop       0x0000000000004e90        0x0 zephyr/libzephyr.a(system_internal.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x0000000000004e90      0x198 zephyr/libzephyr.a(reset_reason.c.obj)
                                        0x204 (size before relaxing)
 .xt.prop       0x0000000000005028        0x0 zephyr/libzephyr.a(esp_err.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000005028        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                                        0x1b0 (size before relaxing)
 .xt.prop       0x0000000000005028       0x30 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                        0x3b4 (size before relaxing)
 .xt.prop       0x0000000000005058       0x24 zephyr/libzephyr.a(esp_timer.c.obj)
                                        0x7c8 (size before relaxing)
 .xt.prop       0x000000000000507c       0x24 zephyr/libzephyr.a(efuse_hal.c.obj)
                                         0xfc (size before relaxing)
 .xt.prop       0x00000000000050a0       0xfc zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                        0x3fc (size before relaxing)
 .xt.prop       0x000000000000519c      0x258 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x00000000000053f4       0x9c zephyr/libzephyr.a(efuse_hal.c.obj)
                                        0x1ec (size before relaxing)
 .xt.prop       0x0000000000005490       0x30 zephyr/libzephyr.a(log_noos.c.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x00000000000054c0        0x0 zephyr/libzephyr.a(log.c.obj)
                                        0x378 (size before relaxing)
 .xt.prop       0x00000000000054c0        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
                                        0x678 (size before relaxing)
 .xt.prop       0x00000000000054c0       0x90 zephyr/libzephyr.a(cache_utils.c.obj)
                                        0x15c (size before relaxing)
 .xt.prop       0x0000000000005550       0x24 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xt.prop       0x0000000000005574       0x54 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x00000000000055c8       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x00000000000055ec       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000005610       0xa8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x00000000000056b8      0x330 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.prop       0x00000000000059e8       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0xa8 (size before relaxing)
 .xt.prop       0x0000000000005a0c       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.prop       0x0000000000005a3c      0x660 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x6b4 (size before relaxing)
 .xt.prop       0x000000000000609c       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                         0x24 (size before relaxing)
 .xt.prop       0x00000000000060b4      0x204 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                        0x210 (size before relaxing)
 .xt.prop       0x00000000000062b8       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x00000000000062dc       0xb4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                        0x3d8 (size before relaxing)
 .xt.prop       0x0000000000006390       0x24 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.prop       0x00000000000063b4       0x48 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x00000000000063fc      0x750 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0xa50 (size before relaxing)
 .xt.prop       0x0000000000006b4c      0x348 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x384 (size before relaxing)
 .xt.prop       0x0000000000006e94       0x78 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000006f0c      0x6cc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                        0x6d8 (size before relaxing)
 .xt.prop       0x00000000000075d8       0x54 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xt.prop       0x000000000000762c      0x2dc zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.prop       0x0000000000007908      0x33c zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x36c (size before relaxing)
 .xt.prop       0x0000000000007c44        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                                         0x48 (size before relaxing)
 .xt.prop       0x0000000000007c44       0xfc zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000007d40       0x54 zephyr/kernel/libkernel.a(device.c.obj)
                                        0x108 (size before relaxing)
 .xt.prop       0x0000000000007d94        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000007d94       0x60 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000007df4      0x21c zephyr/kernel/libkernel.a(init.c.obj)
                                        0x330 (size before relaxing)
 .xt.prop       0x0000000000008010       0x24 zephyr/kernel/libkernel.a(init_static.c.obj)
 .xt.prop       0x0000000000008034       0xf0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                        0x18c (size before relaxing)
 .xt.prop       0x0000000000008124       0x24 zephyr/kernel/libkernel.a(idle.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000008148        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.prop       0x0000000000008148        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000008148       0x6c zephyr/kernel/libkernel.a(thread.c.obj)
                                        0x2dc (size before relaxing)
 .xt.prop       0x00000000000081b4      0x708 zephyr/kernel/libkernel.a(sched.c.obj)
                                        0xd20 (size before relaxing)
 .xt.prop       0x00000000000088bc       0xf0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x00000000000089ac      0x3d8 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x54c (size before relaxing)
 .xt.prop       0x0000000000008d84      0x108 zephyr/kernel/libkernel.a(mempool.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x0000000000008e8c       0x30 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.prop       0x0000000000008ebc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000008ebc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000008ebc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
                                         0x24 (size before relaxing)
 .xt.prop       0x0000000000008ebc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
                                         0x24 (size before relaxing)
 .xt.prop       0x0000000000008ebc       0x24 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                                        0x420 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                                        0x228 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                                        0x264 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
                                         0x6c (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                                         0xa8 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                                         0xb4 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                                         0x6c (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
                                        0x180 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                                        0x138 (size before relaxing)
 .xt.prop       0x0000000000008ee0        0xc zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
                                        0x15c (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
                                         0xd8 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_setjmp.S.o)
                                         0x6c (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                                        0x120 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                                         0xc0 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strcspn.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strstr.c.o)
                                         0x78 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
                                         0x60 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000008eec        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x0000000000008eec      0x7e0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                                        0x7ec (size before relaxing)
 .xt.prop       0x00000000000096cc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                                        0x5f4 (size before relaxing)
 .xt.prop       0x00000000000096cc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x00000000000096cc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x00000000000096cc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                                         0x84 (size before relaxing)
 .xt.prop       0x00000000000096cc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x00000000000096cc        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                                         0x6c (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.prop.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.prop.*))

.xt.lit         0x0000000000000000      0x5b0
 *(SORT_BY_ALIGNMENT(.xt.lit))
 .xt.lit        0x0000000000000000        0x0 app/libapp.a(main.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000000       0x10 app/libapp.a(gpio.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000010        0x8 zephyr/libzephyr.a(heap.c.obj)
                                         0x60 (size before relaxing)
 .xt.lit        0x0000000000000018        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000018       0x18 zephyr/libzephyr.a(printk.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(assert.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(dec.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(hex.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(rb.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(timeutil.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(bitarray.c.obj)
                                         0x70 (size before relaxing)
 .xt.lit        0x0000000000000030       0x10 zephyr/libzephyr.a(soc.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000040        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000040       0x10 zephyr/libzephyr.a(loader.c.obj)
 .xt.lit        0x0000000000000050        0x8 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .xt.lit        0x0000000000000058       0x18 zephyr/libzephyr.a(flash_ops.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000070       0x30 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0xe0 (size before relaxing)
 .xt.lit        0x00000000000000a0        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000000a0        0x8 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000000a8       0x10 zephyr/libzephyr.a(cache_esp32.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000000b8        0x8 zephyr/libzephyr.a(mmu_hal.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x00000000000000c0       0x18 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000000d8       0x10 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000000e8       0x10 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x00000000000000f8        0x8 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000100        0x8 zephyr/libzephyr.a(flash_mmap.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000108       0x10 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000118       0x10 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000128       0x28 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0xa0 (size before relaxing)
 .xt.lit        0x0000000000000150        0x8 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000158        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x0000000000000158        0x8 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000160       0x18 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000178       0x30 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x00000000000001a8       0x10 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000001b8        0x0 zephyr/libzephyr.a(bootloader_mem.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000001b8        0x8 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .xt.lit        0x00000000000001c0        0x8 zephyr/libzephyr.a(bootloader_console.c.obj)
 .xt.lit        0x00000000000001c8        0x0 zephyr/libzephyr.a(bootloader_random.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000001c8        0x8 zephyr/libzephyr.a(esp_rom_sys.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000001d0        0x8 zephyr/libzephyr.a(bootloader_esp32.c.obj)
 .xt.lit        0x00000000000001d8       0x28 zephyr/libzephyr.a(bootloader_init.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000200        0x8 zephyr/libzephyr.a(bootloader_common.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000208        0x8 zephyr/libzephyr.a(bootloader_common_loader.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000210        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000210       0x18 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x0000000000000228       0x28 zephyr/libzephyr.a(bootloader_flash_config_esp32.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000250        0x8 zephyr/libzephyr.a(bootloader_efuse.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000258       0x10 zephyr/libzephyr.a(bootloader_random_esp32.c.obj)
 .xt.lit        0x0000000000000268        0x8 zephyr/libzephyr.a(cpu.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000270        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000270       0x10 zephyr/libzephyr.a(esp_clk.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000280        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
                                         0x60 (size before relaxing)
 .xt.lit        0x0000000000000280       0x18 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000298        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000298        0x8 zephyr/libzephyr.a(rtc_module.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000002a0        0x0 zephyr/libzephyr.a(hw_random.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000002a0        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
                                         0xe0 (size before relaxing)
 .xt.lit        0x00000000000002a0       0x18 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000002b8        0x8 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .xt.lit        0x00000000000002c0        0x8 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .xt.lit        0x00000000000002c8       0x10 zephyr/libzephyr.a(rtc_init.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000002d8       0x50 zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x100 (size before relaxing)
 .xt.lit        0x0000000000000328       0x10 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.lit        0x0000000000000338       0x10 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000348        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000348       0x10 zephyr/libzephyr.a(esp_mmu_map.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x0000000000000358       0x10 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .xt.lit        0x0000000000000368       0x18 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                                         0x88 (size before relaxing)
 .xt.lit        0x0000000000000380        0x0 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000380        0x0 zephyr/libzephyr.a(clk.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000380        0x0 zephyr/libzephyr.a(system_internal.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000380       0x10 zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000390        0x0 zephyr/libzephyr.a(esp_err.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000390        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000390        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                                         0x70 (size before relaxing)
 .xt.lit        0x0000000000000398        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
                                         0x98 (size before relaxing)
 .xt.lit        0x0000000000000398        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000398        0x8 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x00000000000003a0       0x30 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x00000000000003d0       0x10 zephyr/libzephyr.a(efuse_hal.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x00000000000003e0        0x8 zephyr/libzephyr.a(log_noos.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000003e8        0x0 zephyr/libzephyr.a(log.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x00000000000003e8        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
                                         0xa8 (size before relaxing)
 .xt.lit        0x00000000000003e8        0x8 zephyr/libzephyr.a(cache_utils.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000003f0        0x8 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000003f8        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000003f8        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000003f8        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.lit        0x0000000000000400        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000400        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.lit        0x0000000000000408       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000428        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000428       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000448        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000448       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                         0x90 (size before relaxing)
 .xt.lit        0x0000000000000458        0x8 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.lit        0x0000000000000460        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000468       0x40 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .xt.lit        0x00000000000004a8       0x18 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x00000000000004c0       0x10 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xt.lit        0x00000000000004d0       0x28 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xt.lit        0x00000000000004f8        0x8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.lit        0x0000000000000500        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000508       0x10 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000518        0x0 zephyr/kernel/libkernel.a(device.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000518        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000518        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000518       0x28 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000540        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000548        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000548        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000548        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000548        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000548       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
                                        0x168 (size before relaxing)
 .xt.lit        0x0000000000000560       0x18 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000578       0x20 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x0000000000000598        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x00000000000005a0        0x8 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005a8        0x8 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .xt.lit        0x00000000000005b0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000005b0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005b0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000005b0        0x0 /home/marcus/zephyr-sdk-0.16.8/xtensa-espressif_esp32_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                                          0x8 (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.lit.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.p.*))

.xt.profile_range
 *(SORT_BY_ALIGNMENT(.xt.profile_range))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.profile_range.*))

.xt.profile_ranges
 *(SORT_BY_ALIGNMENT(.xt.profile_ranges))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_ranges.*))

.xt.profile_files
 *(SORT_BY_ALIGNMENT(.xt.profile_files))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_files.*))

.intList
 *(SORT_BY_ALIGNMENT(.irq_info*))
 *(SORT_BY_ALIGNMENT(.intList*))
                0x0000000000000001                ASSERT (((_iram_end - ORIGIN (iram0_0_seg)) <= LENGTH (iram0_0_seg)), IRAM0 segment data does not fit.)
                0x0000000040009200                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_attach = uartAttach)
                [!provide]                        PROVIDE (esp_rom_uart_tx_wait_idle = 0x40009278)
                [!provide]                        PROVIDE (esp_rom_intr_matrix_set = intr_matrix_set)
                0x0000000040009edc                PROVIDE (esp_rom_gpio_matrix_in = gpio_matrix_in)
                0x0000000040009f0c                PROVIDE (esp_rom_gpio_matrix_out = gpio_matrix_out)
                0x0000000040009a14                PROVIDE (esp_rom_Cache_Flush = Cache_Flush_rom)
                0x0000000040009a84                PROVIDE (esp_rom_Cache_Read_Enable = Cache_Read_Enable_rom)
                0x000000004000689c                PROVIDE (esp_rom_ets_set_appcpu_boot_addr = ets_set_appcpu_boot_addr)
                [!provide]                        PROVIDE (esp_rom_i2c_readReg = rom_i2c_readReg)
                [!provide]                        PROVIDE (esp_rom_i2c_writeReg = rom_i2c_writeReg)
                [!provide]                        PROVIDE (esp_rom_ets_printf = ets_printf)
                [!provide]                        PROVIDE (esp_rom_g_ticks_per_us_app = g_ticks_per_us_app)
                [!provide]                        PROVIDE (esp_rom_g_ticks_per_us_pro = g_ticks_per_us_app)
                [!provide]                        PROVIDE (esp_rom_ets_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (Add2SelfBigHex256 = 0x40015b7c)
                [!provide]                        PROVIDE (AddBigHex256 = 0x40015b28)
                [!provide]                        PROVIDE (AddBigHexModP256 = 0x40015c98)
                [!provide]                        PROVIDE (AddP256 = 0x40015c74)
                [!provide]                        PROVIDE (AddPdiv2_256 = 0x40015ce0)
                [!provide]                        PROVIDE (app_gpio_arg = 0x3ffe003c)
                [!provide]                        PROVIDE (app_gpio_handler = 0x3ffe0040)
                [!provide]                        PROVIDE (BasePoint_x_256 = 0x3ff97488)
                [!provide]                        PROVIDE (BasePoint_y_256 = 0x3ff97468)
                [!provide]                        PROVIDE (bigHexInversion256 = 0x400168f0)
                [!provide]                        PROVIDE (bigHexP256 = 0x3ff973bc)
                [!provide]                        PROVIDE (btdm_r_ble_bt_handler_tab_p_get = 0x40019b0c)
                [!provide]                        PROVIDE (btdm_r_btdm_option_data_p_get = 0x40010004)
                [!provide]                        PROVIDE (btdm_r_btdm_rom_version_get = 0x40010078)
                [!provide]                        PROVIDE (btdm_r_data_init = 0x4001002c)
                [!provide]                        PROVIDE (btdm_r_import_rf_phy_func_p_get = 0x40054298)
                [!provide]                        PROVIDE (btdm_r_ip_func_p_get = 0x40019af0)
                [!provide]                        PROVIDE (btdm_r_ip_func_p_set = 0x40019afc)
                [!provide]                        PROVIDE (btdm_r_modules_func_p_get = 0x4005427c)
                [!provide]                        PROVIDE (btdm_r_modules_func_p_set = 0x40054270)
                [!provide]                        PROVIDE (btdm_r_plf_func_p_set = 0x40054288)
                [!provide]                        PROVIDE (bt_util_buf_env = 0x3ffb8bd4)
                0x00000000400095e0                PROVIDE (cache_flash_mmu_set_rom = 0x400095e0)
                0x0000000040009a14                PROVIDE (Cache_Flush_rom = 0x40009a14)
                0x0000000040009ab8                PROVIDE (Cache_Read_Disable_rom = 0x40009ab8)
                0x0000000040009a84                PROVIDE (Cache_Read_Enable_rom = 0x40009a84)
                [!provide]                        PROVIDE (Cache_Read_Init_rom = 0x40009950)
                [!provide]                        PROVIDE (cache_sram_mmu_set_rom = 0x400097f4)
                [!provide]                        PROVIDE (calc_rtc_memory_crc = 0x40008170)
                [!provide]                        PROVIDE (__clear_cache = 0x40063860)
                [!provide]                        PROVIDE (co_default_bdaddr = 0x3ffae704)
                [!provide]                        PROVIDE (co_null_bdaddr = 0x3ffb80e0)
                [!provide]                        PROVIDE (co_sca2ppm = 0x3ff971e8)
                [!provide]                        PROVIDE (crc16_be = 0x4005d09c)
                [!provide]                        PROVIDE (crc16_le = 0x4005d05c)
                [!provide]                        PROVIDE (crc32_be = 0x4005d024)
                0x000000004005cfec                PROVIDE (crc32_le = 0x4005cfec)
                [!provide]                        PROVIDE (crc8_be = 0x4005d114)
                [!provide]                        PROVIDE (crc8_le = 0x4005d0e0)
                [!provide]                        PROVIDE (_data_end_rom = 0x4000d5c8)
                [!provide]                        PROVIDE (_data_end_btdm_rom = 0x4000d4f8)
                [!provide]                        PROVIDE (_data_start_rom = 0x4000d4f8)
                [!provide]                        PROVIDE (_data_start_btdm_rom = 0x4000d4f4)
                [!provide]                        PROVIDE (_data_start_btdm = 0x3ffae6e0)
                [!provide]                        PROVIDE (_data_end_btdm = 0x3ffaff10)
                [!provide]                        PROVIDE (_bss_start_btdm = 0x3ffb8000)
                [!provide]                        PROVIDE (_bss_end_btdm = 0x3ffbff70)
                [!provide]                        PROVIDE (dbg_default_handler = 0x3ff97218)
                [!provide]                        PROVIDE (dbg_default_state = 0x3ff97220)
                [!provide]                        PROVIDE (dbg_state = 0x3ffb8d5d)
                [!provide]                        PROVIDE (DebugE256PublicKey_x = 0x3ff97428)
                [!provide]                        PROVIDE (DebugE256PublicKey_y = 0x3ff97408)
                [!provide]                        PROVIDE (DebugE256SecretKey = 0x3ff973e8)
                [!provide]                        PROVIDE (debug_timer = 0x3ffe042c)
                [!provide]                        PROVIDE (debug_timerfn = 0x3ffe0430)
                [!provide]                        PROVIDE (dh_group14_generator = 0x3ff9ac60)
                [!provide]                        PROVIDE (dh_group14_prime = 0x3ff9ab60)
                [!provide]                        PROVIDE (dh_group15_generator = 0x3ff9ab5f)
                [!provide]                        PROVIDE (dh_group15_prime = 0x3ff9a9df)
                [!provide]                        PROVIDE (dh_group16_generator = 0x3ff9a9de)
                [!provide]                        PROVIDE (dh_group16_prime = 0x3ff9a7de)
                [!provide]                        PROVIDE (dh_group17_generator = 0x3ff9a7dd)
                [!provide]                        PROVIDE (dh_group17_prime = 0x3ff9a4dd)
                [!provide]                        PROVIDE (dh_group18_generator = 0x3ff9a4dc)
                [!provide]                        PROVIDE (dh_group18_prime = 0x3ff9a0dc)
                [!provide]                        PROVIDE (dh_group1_generator = 0x3ff9ae03)
                [!provide]                        PROVIDE (dh_group1_prime = 0x3ff9ada3)
                [!provide]                        PROVIDE (dh_group2_generator = 0x3ff9ada2)
                [!provide]                        PROVIDE (dh_group2_prime = 0x3ff9ad22)
                [!provide]                        PROVIDE (dh_group5_generator = 0x3ff9ad21)
                [!provide]                        PROVIDE (dh_group5_prime = 0x3ff9ac61)
                0x000000003ffae290                PROVIDE (g_rom_spiflash_dummy_len_plus = 0x3ffae290)
                [!provide]                        PROVIDE (ecc_env = 0x3ffb8d60)
                [!provide]                        PROVIDE (ecc_Jacobian_InfinityPoint256 = 0x3ff972e8)
                [!provide]                        PROVIDE (em_buf_env = 0x3ffb8d74)
                0x000000004005d144                PROVIDE (esp_crc8 = 0x4005d144)
                [!provide]                        PROVIDE (_etext = 0x4000d66c)
                [!provide]                        PROVIDE (ets_readySet_ = 0x3ffe01f0)
                [!provide]                        PROVIDE (ets_startup_callback = 0x3ffe0404)
                [!provide]                        PROVIDE (rwip_coex_cfg = 0x3ff9914c)
                [!provide]                        PROVIDE (rwip_priority = 0x3ff99159)
                [!provide]                        PROVIDE (exc_cause_table = 0x3ff991d0)
                [!provide]                        PROVIDE (GF_Jacobian_Point_Addition256 = 0x400163a4)
                [!provide]                        PROVIDE (GF_Jacobian_Point_Double256 = 0x40016260)
                [!provide]                        PROVIDE (GF_Point_Jacobian_To_Affine256 = 0x40016b0c)
                [!provide]                        PROVIDE (g_phyFuns_instance = 0x3ffae0c4)
                0x000000003ffae270                PROVIDE (g_rom_flashchip = 0x3ffae270)
                [!provide]                        PROVIDE (gTxMsg = 0x3ffe0050)
                [!provide]                        PROVIDE (hci_cmd_desc_root_tab = 0x3ff976d4)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_ctrl_bb = 0x3ff97b70)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_info_par = 0x3ff97b1c)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_le = 0x3ff97870)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_lk_ctrl = 0x3ff97fc0)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_lk_pol = 0x3ff97f3c)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_stat_par = 0x3ff97ac8)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_testing = 0x3ff97a98)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_vs = 0x3ff97714)
                [!provide]                        PROVIDE (hci_command_handler = 0x4004c928)
                [!provide]                        PROVIDE (hci_env = 0x3ffb9350)
                [!provide]                        PROVIDE (rwip_env = 0x3ffb8bcc)
                [!provide]                        PROVIDE (hci_evt_dbg_desc_tab = 0x3ff9750c)
                [!provide]                        PROVIDE (hci_evt_desc_tab = 0x3ff9751c)
                [!provide]                        PROVIDE (hci_evt_le_desc_tab = 0x3ff974b4)
                [!provide]                        PROVIDE (hci_fc_env = 0x3ffb9340)
                [!provide]                        PROVIDE (jd_decomp = 0x400613e8)
                [!provide]                        PROVIDE (jd_prepare = 0x40060fa8)
                [!provide]                        PROVIDE (ke_env = 0x3ffb93cc)
                [!provide]                        PROVIDE (ke_handler_search = 0x4001a430)
                [!provide]                        PROVIDE (ke_task_env = 0x3ffb81d4)
                [!provide]                        PROVIDE (ke_event_env = 0x3ffb81a4)
                [!provide]                        PROVIDE (lb_default_handler = 0x3ff982b8)
                [!provide]                        PROVIDE (lb_default_state_tab_p_get = 0x4001c198)
                [!provide]                        PROVIDE (lb_env = 0x3ffb9424)
                [!provide]                        PROVIDE (lb_hci_cmd_handler_tab_p_get = 0x4001c18c)
                [!provide]                        PROVIDE (lb_state = 0x3ffb94e8)
                [!provide]                        PROVIDE (lc_default_handler = 0x3ff98648)
                [!provide]                        PROVIDE (lc_default_state_tab_p_get = 0x4002f494)
                [!provide]                        PROVIDE (lc_env = 0x3ffb94ec)
                [!provide]                        PROVIDE (lc_hci_cmd_handler_tab_p_get = 0x4002f488)
                [!provide]                        PROVIDE (lc_state = 0x3ffb9508)
                [!provide]                        PROVIDE (ld_acl_br_sizes = 0x3ff98a2a)
                [!provide]                        PROVIDE (ld_acl_br_types = 0x3ff98a36)
                [!provide]                        PROVIDE (ld_acl_edr_sizes = 0x3ff98a14)
                [!provide]                        PROVIDE (ld_acl_edr_types = 0x3ff98a22)
                [!provide]                        PROVIDE (ld_env = 0x3ffb9510)
                [!provide]                        PROVIDE (ld_pcm_settings_dft = 0x3ff98a0c)
                [!provide]                        PROVIDE (ld_sched_params = 0x3ffb96c0)
                [!provide]                        PROVIDE (ld_sync_train_channels = 0x3ff98a3c)
                [!provide]                        PROVIDE (llc_default_handler = 0x3ff98b3c)
                [!provide]                        PROVIDE (llc_default_state_tab_p_get = 0x40046058)
                [!provide]                        PROVIDE (llc_env = 0x3ffb96d0)
                [!provide]                        PROVIDE (llc_hci_acl_data_tx_handler = 0x40042398)
                [!provide]                        PROVIDE (llc_hci_cmd_handler_tab_p_get = 0x40042358)
                [!provide]                        PROVIDE (llc_hci_command_handler = 0x40042360)
                [!provide]                        PROVIDE (llcp_pdu_handler_tab_p_get = 0x40043f64)
                [!provide]                        PROVIDE (llc_state = 0x3ffb96f8)
                [!provide]                        PROVIDE (lldesc_build_chain = 0x4000a850)
                [!provide]                        PROVIDE (lldesc_num2link = 0x4000a948)
                [!provide]                        PROVIDE (lldesc_set_owner = 0x4000a974)
                [!provide]                        PROVIDE (lld_evt_deferred_elt_push = 0x400466b4)
                [!provide]                        PROVIDE (lld_evt_deferred_elt_pop = 0x400466dc)
                [!provide]                        PROVIDE (lld_evt_winsize_change = 0x40046730)
                [!provide]                        PROVIDE (lld_evt_rxwin_compute = 0x400467c8)
                [!provide]                        PROVIDE (lld_evt_slave_time_compute = 0x40046818)
                [!provide]                        PROVIDE (lld_evt_env = 0x3ffb9704)
                [!provide]                        PROVIDE (lld_evt_elt_wait_get = 0x400468e4)
                [!provide]                        PROVIDE (lld_evt_get_next_free_slot = 0x4004692c)
                [!provide]                        PROVIDE (lld_pdu_adv_pk_desc_tab = 0x3ff98c70)
                [!provide]                        PROVIDE (lld_pdu_llcp_pk_desc_tab = 0x3ff98b68)
                [!provide]                        PROVIDE (lld_pdu_tx_flush_list = 0x4004a760)
                [!provide]                        PROVIDE (lld_pdu_pack = 0x4004ab14)
                [!provide]                        PROVIDE (LLM_AA_CT1 = 0x3ff98d8a)
                [!provide]                        PROVIDE (LLM_AA_CT2 = 0x3ff98d88)
                [!provide]                        PROVIDE (llm_default_handler = 0x3ff98d80)
                [!provide]                        PROVIDE (llm_default_state_tab_p_get = 0x4004e718)
                [!provide]                        PROVIDE (llm_hci_cmd_handler_tab_p_get = 0x4004c920)
                [!provide]                        PROVIDE (llm_le_env = 0x3ffb976c)
                [!provide]                        PROVIDE (llm_local_cmds = 0x3ff98d38)
                [!provide]                        PROVIDE (llm_local_data_len_values = 0x3ff98d1c)
                [!provide]                        PROVIDE (llm_local_le_feats = 0x3ff98d30)
                [!provide]                        PROVIDE (llm_local_le_states = 0x3ff98d28)
                [!provide]                        PROVIDE (llm_state = 0x3ffb985c)
                [!provide]                        PROVIDE (lm_default_handler = 0x3ff990e0)
                [!provide]                        PROVIDE (lm_default_state_tab_p_get = 0x40054268)
                [!provide]                        PROVIDE (lm_env = 0x3ffb9860)
                [!provide]                        PROVIDE (lm_hci_cmd_handler_tab_p_get = 0x4005425c)
                [!provide]                        PROVIDE (lm_local_supp_feats = 0x3ff990ee)
                [!provide]                        PROVIDE (lm_n_page_tab = 0x3ff990e8)
                [!provide]                        PROVIDE (lmp_desc_tab = 0x3ff96e6c)
                [!provide]                        PROVIDE (lmp_ext_desc_tab = 0x3ff96d9c)
                [!provide]                        PROVIDE (lm_state = 0x3ffb9a1c)
                [!provide]                        PROVIDE (maxSecretKey_256 = 0x3ff97448)
                0x00000000400095a4                PROVIDE (mmu_init = 0x400095a4)
                [!provide]                        PROVIDE (MultiplyBigHexByUint32_256 = 0x40016214)
                [!provide]                        PROVIDE (MultiplyBigHexModP256 = 0x400160b8)
                [!provide]                        PROVIDE (MultiplyByU32ModP256 = 0x40015fdc)
                [!provide]                        PROVIDE (multofup = 0x4000ab8c)
                [!provide]                        PROVIDE (mz_adler32 = 0x4005edbc)
                [!provide]                        PROVIDE (mz_crc32 = 0x4005ee88)
                [!provide]                        PROVIDE (mz_free = 0x4005eed4)
                [!provide]                        PROVIDE (notEqual256 = 0x40015b04)
                [!provide]                        PROVIDE (one_bits = 0x3ff971f8)
                [!provide]                        PROVIDE (phy_get_romfuncs = 0x40004100)
                [!provide]                        PROVIDE (_Pri_4_HandlerAddress = 0x3ffe0648)
                [!provide]                        PROVIDE (_Pri_5_HandlerAddress = 0x3ffe064c)
                [!provide]                        PROVIDE (r_btdm_option_data = 0x3ffae6e0)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_rx_alloc = 0x40010218)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_rx_free = 0x40010234)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_tx_alloc = 0x40010268)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_tx_free = 0x40010280)
                [!provide]                        PROVIDE (r_bt_util_buf_init = 0x400100e4)
                [!provide]                        PROVIDE (r_bt_util_buf_lmp_tx_alloc = 0x400101d0)
                [!provide]                        PROVIDE (r_bt_util_buf_lmp_tx_free = 0x400101ec)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_clear = 0x400103c8)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_init = 0x400102c4)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_rx_alloc = 0x40010468)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_rx_free = 0x4001049c)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_tx_alloc = 0x400103ec)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_tx_free = 0x40010428)
                [!provide]                        PROVIDE (r_co_bdaddr_compare = 0x40014324)
                [!provide]                        PROVIDE (r_co_bytes_to_string = 0x400142e4)
                [!provide]                        PROVIDE (r_co_list_check_size_available = 0x400142c4)
                [!provide]                        PROVIDE (r_co_list_extract = 0x4001404c)
                [!provide]                        PROVIDE (r_co_list_extract_after = 0x40014118)
                [!provide]                        PROVIDE (r_co_list_find = 0x4001419c)
                [!provide]                        PROVIDE (r_co_list_init = 0x40013f14)
                [!provide]                        PROVIDE (r_co_list_insert_after = 0x40014254)
                [!provide]                        PROVIDE (r_co_list_insert_before = 0x40014200)
                [!provide]                        PROVIDE (r_co_list_merge = 0x400141bc)
                [!provide]                        PROVIDE (r_co_list_pool_init = 0x40013f30)
                [!provide]                        PROVIDE (r_co_list_pop_front = 0x40014028)
                [!provide]                        PROVIDE (r_co_list_push_back = 0x40013fb8)
                [!provide]                        PROVIDE (r_co_list_push_front = 0x40013ff4)
                [!provide]                        PROVIDE (r_co_list_size = 0x400142ac)
                [!provide]                        PROVIDE (r_co_nb_good_channels = 0x40014360)
                [!provide]                        PROVIDE (r_co_slot_to_duration = 0x40014348)
                [!provide]                        PROVIDE (r_dbg_init = 0x40014394)
                [!provide]                        PROVIDE (r_dbg_platform_reset_complete = 0x400143d0)
                [!provide]                        PROVIDE (r_dbg_swdiag_init = 0x40014470)
                [!provide]                        PROVIDE (r_dbg_swdiag_read = 0x400144a4)
                [!provide]                        PROVIDE (r_dbg_swdiag_write = 0x400144d0)
                [!provide]                        PROVIDE (r_E1 = 0x400108e8)
                [!provide]                        PROVIDE (r_E21 = 0x40010968)
                [!provide]                        PROVIDE (r_E22 = 0x400109b4)
                [!provide]                        PROVIDE (r_E3 = 0x40010a58)
                [!provide]                        PROVIDE (lm_n192_mod_mul = 0x40011dc0)
                [!provide]                        PROVIDE (lm_n192_mod_add = 0x40011e9c)
                [!provide]                        PROVIDE (lm_n192_mod_sub = 0x40011eec)
                [!provide]                        PROVIDE (r_ea_alarm_clear = 0x40015ab4)
                [!provide]                        PROVIDE (r_ea_alarm_set = 0x40015a10)
                [!provide]                        PROVIDE (r_ea_elt_cancel = 0x400150d0)
                [!provide]                        PROVIDE (r_ea_elt_create = 0x40015264)
                [!provide]                        PROVIDE (r_ea_elt_insert = 0x400152a8)
                [!provide]                        PROVIDE (r_ea_elt_remove = 0x400154f0)
                [!provide]                        PROVIDE (r_ea_finetimer_isr = 0x400155d4)
                [!provide]                        PROVIDE (r_ea_init = 0x40015228)
                [!provide]                        PROVIDE (r_ea_interval_create = 0x4001555c)
                [!provide]                        PROVIDE (r_ea_interval_delete = 0x400155a8)
                [!provide]                        PROVIDE (r_ea_interval_duration_req = 0x4001597c)
                [!provide]                        PROVIDE (r_ea_interval_insert = 0x4001557c)
                [!provide]                        PROVIDE (r_ea_interval_remove = 0x40015590)
                [!provide]                        PROVIDE (ea_conflict_check = 0x40014e9c)
                [!provide]                        PROVIDE (ea_prog_timer = 0x40014f88)
                [!provide]                        PROVIDE (r_ea_offset_req = 0x40015748)
                [!provide]                        PROVIDE (r_ea_sleep_check = 0x40015928)
                [!provide]                        PROVIDE (r_ea_sw_isr = 0x40015724)
                [!provide]                        PROVIDE (r_ea_time_get_halfslot_rounded = 0x40015894)
                [!provide]                        PROVIDE (r_ea_time_get_slot_rounded = 0x400158d4)
                [!provide]                        PROVIDE (r_ecc_abort_key256_generation = 0x40017070)
                [!provide]                        PROVIDE (r_ecc_generate_key256 = 0x40016e00)
                [!provide]                        PROVIDE (r_ecc_gen_new_public_key = 0x400170c0)
                [!provide]                        PROVIDE (r_ecc_gen_new_secret_key = 0x400170e4)
                [!provide]                        PROVIDE (r_ecc_get_debug_Keys = 0x40017224)
                [!provide]                        PROVIDE (r_ecc_init = 0x40016dbc)
                [!provide]                        PROVIDE (ecc_point_multiplication_uint8_256 = 0x40016804)
                [!provide]                        PROVIDE (RecvBuff = 0x3ffe009c)
                [!provide]                        PROVIDE (r_em_buf_init = 0x4001729c)
                [!provide]                        PROVIDE (r_em_buf_rx_buff_addr_get = 0x400173e8)
                [!provide]                        PROVIDE (r_em_buf_rx_free = 0x400173c4)
                [!provide]                        PROVIDE (r_em_buf_tx_buff_addr_get = 0x40017404)
                [!provide]                        PROVIDE (r_em_buf_tx_free = 0x4001741c)
                [!provide]                        PROVIDE (r_F1_256 = 0x400133e4)
                [!provide]                        PROVIDE (r_F2_256 = 0x40013568)
                [!provide]                        PROVIDE (r_F3_256 = 0x40013664)
                [!provide]                        PROVIDE (RFPLL_ICP_TABLE = 0x3ffb8b7c)
                [!provide]                        PROVIDE (r_G_256 = 0x40013470)
                [!provide]                        PROVIDE (r_H3 = 0x40013760)
                [!provide]                        PROVIDE (r_H4 = 0x40013830)
                [!provide]                        PROVIDE (r_h4tl_init = 0x40017878)
                [!provide]                        PROVIDE (r_h4tl_start = 0x40017924)
                [!provide]                        PROVIDE (r_h4tl_stop = 0x40017934)
                [!provide]                        PROVIDE (r_h4tl_write = 0x400178d0)
                [!provide]                        PROVIDE (r_H5 = 0x400138dc)
                [!provide]                        PROVIDE (r_hashConcat = 0x40013a38)
                [!provide]                        PROVIDE (r_hci_acl_tx_data_alloc = 0x4001951c)
                [!provide]                        PROVIDE (r_hci_acl_tx_data_received = 0x40019654)
                [!provide]                        PROVIDE (r_hci_bt_acl_bdaddr_register = 0x40018900)
                [!provide]                        PROVIDE (r_hci_bt_acl_bdaddr_unregister = 0x400189ac)
                [!provide]                        PROVIDE (r_hci_bt_acl_conhdl_register = 0x4001895c)
                [!provide]                        PROVIDE (r_hci_cmd_get_max_param_size = 0x400192d0)
                [!provide]                        PROVIDE (r_hci_cmd_received = 0x400192f8)
                [!provide]                        PROVIDE (r_hci_evt_filter_add = 0x40018a64)
                [!provide]                        PROVIDE (r_hci_evt_mask_set = 0x400189e4)
                [!provide]                        PROVIDE (r_hci_fc_acl_buf_size_set = 0x40017988)
                [!provide]                        PROVIDE (r_hci_fc_acl_en = 0x400179d8)
                [!provide]                        PROVIDE (r_hci_fc_acl_packet_sent = 0x40017a3c)
                [!provide]                        PROVIDE (r_hci_fc_check_host_available_nb_acl_packets = 0x40017aa4)
                [!provide]                        PROVIDE (r_hci_fc_check_host_available_nb_sync_packets = 0x40017ac8)
                [!provide]                        PROVIDE (r_hci_fc_host_nb_acl_pkts_complete = 0x40017a6c)
                [!provide]                        PROVIDE (r_hci_fc_host_nb_sync_pkts_complete = 0x40017a88)
                [!provide]                        PROVIDE (r_hci_fc_init = 0x40017974)
                [!provide]                        PROVIDE (r_hci_fc_sync_buf_size_set = 0x400179b0)
                [!provide]                        PROVIDE (r_hci_fc_sync_en = 0x40017a30)
                [!provide]                        PROVIDE (r_hci_fc_sync_packet_sent = 0x40017a54)
                [!provide]                        PROVIDE (r_hci_init = 0x40018538)
                [!provide]                        PROVIDE (r_hci_look_for_cmd_desc = 0x40018454)
                [!provide]                        PROVIDE (r_hci_look_for_dbg_evt_desc = 0x400184c4)
                [!provide]                        PROVIDE (r_hci_look_for_evt_desc = 0x400184a0)
                [!provide]                        PROVIDE (r_hci_look_for_le_evt_desc = 0x400184e0)
                [!provide]                        PROVIDE (r_hci_reset = 0x4001856c)
                [!provide]                        PROVIDE (r_hci_send_2_host = 0x400185bc)
                [!provide]                        PROVIDE (r_hci_sync_tx_data_alloc = 0x40019754)
                [!provide]                        PROVIDE (r_hci_sync_tx_data_received = 0x400197c0)
                [!provide]                        PROVIDE (r_hci_tl_init = 0x40019290)
                [!provide]                        PROVIDE (r_hci_tl_send = 0x40019228)
                [!provide]                        PROVIDE (r_hci_util_pack = 0x40019874)
                [!provide]                        PROVIDE (r_hci_util_unpack = 0x40019998)
                [!provide]                        PROVIDE (r_hci_voice_settings_get = 0x40018bdc)
                [!provide]                        PROVIDE (r_hci_voice_settings_set = 0x40018be8)
                [!provide]                        PROVIDE (r_HMAC = 0x40013968)
                [!provide]                        PROVIDE (r_import_rf_phy_func = 0x3ffb8354)
                [!provide]                        PROVIDE (r_import_rf_phy_func_p = 0x3ffafd64)
                [!provide]                        PROVIDE (r_ip_funcs = 0x3ffae710)
                [!provide]                        PROVIDE (r_ip_funcs_p = 0x3ffae70c)
                [!provide]                        PROVIDE (r_ke_check_malloc = 0x40019de0)
                [!provide]                        PROVIDE (r_ke_event_callback_set = 0x40019ba8)
                [!provide]                        PROVIDE (r_ke_event_clear = 0x40019c2c)
                [!provide]                        PROVIDE (r_ke_event_flush = 0x40019ccc)
                [!provide]                        PROVIDE (r_ke_event_get = 0x40019c78)
                [!provide]                        PROVIDE (r_ke_event_get_all = 0x40019cc0)
                [!provide]                        PROVIDE (r_ke_event_init = 0x40019b90)
                [!provide]                        PROVIDE (r_ke_event_schedule = 0x40019cdc)
                [!provide]                        PROVIDE (r_ke_event_set = 0x40019be0)
                [!provide]                        PROVIDE (r_ke_flush = 0x4001a374)
                [!provide]                        PROVIDE (r_ke_free = 0x4001a014)
                [!provide]                        PROVIDE (r_ke_get_max_mem_usage = 0x4001a1c8)
                [!provide]                        PROVIDE (r_ke_get_mem_usage = 0x4001a1a0)
                [!provide]                        PROVIDE (r_ke_init = 0x4001a318)
                [!provide]                        PROVIDE (r_ke_is_free = 0x4001a184)
                [!provide]                        PROVIDE (r_ke_malloc = 0x40019eb4)
                [!provide]                        PROVIDE (r_ke_mem_init = 0x40019d3c)
                [!provide]                        PROVIDE (r_ke_mem_is_empty = 0x40019d8c)
                [!provide]                        PROVIDE (r_ke_msg_alloc = 0x4001a1e0)
                [!provide]                        PROVIDE (r_ke_msg_dest_id_get = 0x4001a2e0)
                [!provide]                        PROVIDE (r_ke_msg_discard = 0x4001a850)
                [!provide]                        PROVIDE (r_ke_msg_forward = 0x4001a290)
                [!provide]                        PROVIDE (r_ke_msg_forward_new_id = 0x4001a2ac)
                [!provide]                        PROVIDE (r_ke_msg_free = 0x4001a2cc)
                [!provide]                        PROVIDE (r_ke_msg_in_queue = 0x4001a2f8)
                [!provide]                        PROVIDE (r_ke_msg_save = 0x4001a858)
                [!provide]                        PROVIDE (r_ke_msg_send = 0x4001a234)
                [!provide]                        PROVIDE (r_ke_msg_send_basic = 0x4001a26c)
                [!provide]                        PROVIDE (r_ke_msg_src_id_get = 0x4001a2ec)
                [!provide]                        PROVIDE (r_ke_queue_extract = 0x40055fd0)
                [!provide]                        PROVIDE (r_ke_queue_insert = 0x40056020)
                [!provide]                        PROVIDE (r_ke_sleep_check = 0x4001a3d8)
                [!provide]                        PROVIDE (r_ke_state_get = 0x4001a7d8)
                [!provide]                        PROVIDE (r_ke_state_set = 0x4001a6fc)
                [!provide]                        PROVIDE (r_ke_stats_get = 0x4001a3f0)
                [!provide]                        PROVIDE (r_ke_task_check = 0x4001a8a4)
                [!provide]                        PROVIDE (r_ke_task_create = 0x4001a674)
                [!provide]                        PROVIDE (r_ke_task_delete = 0x4001a6c0)
                [!provide]                        PROVIDE (r_ke_task_init = 0x4001a650)
                [!provide]                        PROVIDE (r_ke_task_msg_flush = 0x4001a860)
                [!provide]                        PROVIDE (r_ke_timer_active = 0x4001ac08)
                [!provide]                        PROVIDE (r_ke_timer_adjust_all = 0x4001ac30)
                [!provide]                        PROVIDE (r_ke_timer_clear = 0x4001ab90)
                [!provide]                        PROVIDE (r_ke_timer_init = 0x4001aa9c)
                [!provide]                        PROVIDE (r_ke_timer_set = 0x4001aac0)
                [!provide]                        PROVIDE (r_ke_timer_sleep_check = 0x4001ac50)
                [!provide]                        PROVIDE (r_KPrimC = 0x40010ad4)
                [!provide]                        PROVIDE (r_lb_clk_adj_activate = 0x4001ae70)
                [!provide]                        PROVIDE (r_lb_clk_adj_id_get = 0x4001af14)
                [!provide]                        PROVIDE (r_lb_clk_adj_period_update = 0x4001af20)
                [!provide]                        PROVIDE (r_lb_init = 0x4001acd4)
                [!provide]                        PROVIDE (r_lb_mst_key = 0x4001afc0)
                [!provide]                        PROVIDE (r_lb_mst_key_cmp = 0x4001af74)
                [!provide]                        PROVIDE (r_lb_mst_key_restart_enc = 0x4001b0d4)
                [!provide]                        PROVIDE (r_lb_mst_start_act_bcst_enc = 0x4001b198)
                [!provide]                        PROVIDE (r_lb_mst_stop_act_bcst_enc = 0x4001b24c)
                [!provide]                        PROVIDE (r_lb_reset = 0x4001ad38)
                [!provide]                        PROVIDE (r_lb_send_lmp = 0x4001adbc)
                [!provide]                        PROVIDE (r_lb_send_pdu_clk_adj = 0x4001af3c)
                [!provide]                        PROVIDE (r_lb_util_get_csb_mode = 0x4001ada4)
                [!provide]                        PROVIDE (r_lb_util_get_nb_broadcast = 0x4001ad80)
                [!provide]                        PROVIDE (r_lb_util_get_res_lt_addr = 0x4001ad98)
                [!provide]                        PROVIDE (r_lb_util_set_nb_broadcast = 0x4001ad8c)
                [!provide]                        PROVIDE (r_lc_afh_set = 0x4001cc74)
                [!provide]                        PROVIDE (r_lc_afh_start = 0x4001d240)
                [!provide]                        PROVIDE (r_lc_auth_cmp = 0x4001cd54)
                [!provide]                        PROVIDE (r_lc_calc_link_key = 0x4001ce7c)
                [!provide]                        PROVIDE (r_lc_chg_pkt_type_cmp = 0x4001d038)
                [!provide]                        PROVIDE (r_lc_chg_pkt_type_cont = 0x4001cfbc)
                [!provide]                        PROVIDE (r_lc_chg_pkt_type_retry = 0x4001d0ac)
                [!provide]                        PROVIDE (r_lc_chk_to = 0x4001d2a8)
                [!provide]                        PROVIDE (r_lc_cmd_stat_send = 0x4001c914)
                [!provide]                        PROVIDE (r_lc_comb_key_svr = 0x4001d30c)
                [!provide]                        PROVIDE (r_lc_con_cmp = 0x4001d44c)
                [!provide]                        PROVIDE (r_lc_con_cmp_evt_send = 0x4001d4fc)
                [!provide]                        PROVIDE (r_lc_conn_seq_done = 0x40021334)
                [!provide]                        PROVIDE (r_lc_detach = 0x4002037c)
                [!provide]                        PROVIDE (r_lc_dhkey = 0x4001d564)
                [!provide]                        PROVIDE (r_lc_enc_cmp = 0x4001d8bc)
                [!provide]                        PROVIDE (r_lc_enc_key_refresh = 0x4001d720)
                [!provide]                        PROVIDE (r_lc_end_chk_colli = 0x4001d858)
                [!provide]                        PROVIDE (r_lc_end_of_sniff_nego = 0x4001d9a4)
                [!provide]                        PROVIDE (r_lc_enter_sniff_mode = 0x4001ddb8)
                [!provide]                        PROVIDE (r_lc_epr_change_lk = 0x4001db38)
                [!provide]                        PROVIDE (r_lc_epr_cmp = 0x4001da88)
                [!provide]                        PROVIDE (r_lc_epr_resp = 0x4001e0b4)
                [!provide]                        PROVIDE (r_lc_epr_rsw_cmp = 0x4001dd40)
                [!provide]                        PROVIDE (r_lc_ext_feat = 0x40020d6c)
                [!provide]                        PROVIDE (r_lc_feat = 0x40020984)
                [!provide]                        PROVIDE (r_lc_hl_connect = 0x400209e8)
                [!provide]                        PROVIDE (r_lc_init = 0x4001c948)
                [!provide]                        PROVIDE (r_lc_init_calc_f3 = 0x4001deb0)
                [!provide]                        PROVIDE (r_lc_initiator_epr = 0x4001e064)
                [!provide]                        PROVIDE (r_lc_init_passkey_loop = 0x4001dfc0)
                [!provide]                        PROVIDE (r_lc_init_start_mutual_auth = 0x4001df60)
                [!provide]                        PROVIDE (r_lc_key_exch_end = 0x4001e140)
                [!provide]                        PROVIDE (r_lc_legacy_pair = 0x4001e1c0)
                [!provide]                        PROVIDE (r_lc_local_switch = 0x4001e22c)
                [!provide]                        PROVIDE (r_lc_local_trans_mode = 0x4001e2e4)
                [!provide]                        PROVIDE (r_lc_local_untrans_mode = 0x4001e3a0)
                [!provide]                        PROVIDE (r_lc_loc_auth = 0x40020ecc)
                [!provide]                        PROVIDE (r_lc_locepr_lkref = 0x4001d648)
                [!provide]                        PROVIDE (r_lc_locepr_rsw = 0x4001d5d0)
                [!provide]                        PROVIDE (r_lc_loc_sniff = 0x40020a6c)
                [!provide]                        PROVIDE (r_lc_max_slot_mgt = 0x4001e410)
                [!provide]                        PROVIDE (r_lc_mst_key = 0x4001e7c0)
                [!provide]                        PROVIDE (r_lc_mst_qos_done = 0x4001ea80)
                [!provide]                        PROVIDE (r_lc_mst_send_mst_key = 0x4001e8f4)
                [!provide]                        PROVIDE (r_lc_mutual_auth_end = 0x4001e670)
                [!provide]                        PROVIDE (r_lc_mutual_auth_end2 = 0x4001e4f4)
                [!provide]                        PROVIDE (r_lc_packet_type = 0x40021038)
                [!provide]                        PROVIDE (r_lc_pair = 0x40020ddc)
                [!provide]                        PROVIDE (r_lc_pairing_cont = 0x4001eafc)
                [!provide]                        PROVIDE (r_lc_passkey_comm = 0x4001ed20)
                [!provide]                        PROVIDE (r_lc_prepare_all_links_for_clk_adj = 0x40021430)
                [!provide]                        PROVIDE (r_lc_proc_rcv_dhkey = 0x4001edec)
                [!provide]                        PROVIDE (r_lc_ptt = 0x4001ee2c)
                [!provide]                        PROVIDE (r_lc_ptt_cmp = 0x4001eeec)
                [!provide]                        PROVIDE (r_lc_qos_setup = 0x4001ef50)
                [!provide]                        PROVIDE (r_lc_rd_rem_name = 0x4001efd0)
                [!provide]                        PROVIDE (r_lc_release = 0x4001f8a8)
                [!provide]                        PROVIDE (r_lc_rem_enc = 0x4001f124)
                [!provide]                        PROVIDE (r_lc_rem_name_cont = 0x4001f290)
                [!provide]                        PROVIDE (r_lc_rem_nego_trans_mode = 0x4001f1b4)
                [!provide]                        PROVIDE (r_lc_rem_sniff = 0x40020ca4)
                [!provide]                        PROVIDE (r_lc_rem_sniff_sub_rate = 0x40020b10)
                [!provide]                        PROVIDE (r_lc_rem_switch = 0x4001f070)
                [!provide]                        PROVIDE (r_lc_rem_trans_mode = 0x4001f314)
                [!provide]                        PROVIDE (r_lc_rem_unsniff = 0x400207a0)
                [!provide]                        PROVIDE (r_lc_rem_untrans_mode = 0x4001f36c)
                [!provide]                        PROVIDE (r_lc_reset = 0x4001c99c)
                [!provide]                        PROVIDE (r_lc_resp_auth = 0x4001f518)
                [!provide]                        PROVIDE (r_lc_resp_calc_f3 = 0x4001f710)
                [!provide]                        PROVIDE (r_lc_resp_num_comp = 0x40020074)
                [!provide]                        PROVIDE (r_lc_resp_oob_nonce = 0x4001f694)
                [!provide]                        PROVIDE (r_lc_resp_oob_wait_nonce = 0x4001f66c)
                [!provide]                        PROVIDE (r_lc_resp_pair = 0x400208a4)
                [!provide]                        PROVIDE (r_lc_resp_sec_auth = 0x4001f4a0)
                [!provide]                        PROVIDE (r_lc_resp_wait_dhkey_cont = 0x4001f86c)
                [!provide]                        PROVIDE (r_lc_restart_enc = 0x4001f8ec)
                [!provide]                        PROVIDE (r_lc_restart_enc_cont = 0x4001f940)
                [!provide]                        PROVIDE (r_lc_restore_afh_reporting = 0x4001f028)
                [!provide]                        PROVIDE (r_lc_restore_to = 0x4001f9e0)
                [!provide]                        PROVIDE (r_lc_ret_sniff_max_slot_chg = 0x4001fa30)
                [!provide]                        PROVIDE (r_lc_rsw_clean_up = 0x4001dc70)
                [!provide]                        PROVIDE (r_lc_rsw_done = 0x4001db94)
                [!provide]                        PROVIDE (r_lc_sco_baseband_ack = 0x40022b00)
                [!provide]                        PROVIDE (r_lc_sco_detach = 0x40021e40)
                [!provide]                        PROVIDE (r_lc_sco_host_accept = 0x40022118)
                [!provide]                        PROVIDE (r_lc_sco_host_reject = 0x400222b8)
                [!provide]                        PROVIDE (r_lc_sco_host_request = 0x40021f4c)
                [!provide]                        PROVIDE (r_lc_sco_host_request_disc = 0x4002235c)
                [!provide]                        PROVIDE (r_lc_sco_init = 0x40021dc8)
                [!provide]                        PROVIDE (r_lc_sco_peer_accept = 0x40022780)
                [!provide]                        PROVIDE (r_lc_sco_peer_accept_disc = 0x40022a08)
                [!provide]                        PROVIDE (r_lc_sco_peer_reject = 0x40022824)
                [!provide]                        PROVIDE (r_lc_sco_peer_reject_disc = 0x40022a8c)
                [!provide]                        PROVIDE (r_lc_sco_peer_request = 0x4002240c)
                [!provide]                        PROVIDE (r_lc_sco_peer_request_disc = 0x400228ec)
                [!provide]                        PROVIDE (r_lc_sco_release = 0x40021eec)
                [!provide]                        PROVIDE (r_lc_sco_reset = 0x40021dfc)
                [!provide]                        PROVIDE (r_lc_sco_timeout = 0x40022bd4)
                [!provide]                        PROVIDE (r_lc_sec_auth_compute_sres = 0x4001f3ec)
                [!provide]                        PROVIDE (r_lc_semi_key_cmp = 0x40020294)
                [!provide]                        PROVIDE (r_lc_send_enc_chg_evt = 0x4002134c)
                [!provide]                        PROVIDE (r_lc_send_enc_mode = 0x40020220)
                [!provide]                        PROVIDE (r_lc_send_lmp = 0x4001c1a8)
                [!provide]                        PROVIDE (r_lc_send_pdu_acc = 0x4001c21c)
                [!provide]                        PROVIDE (r_lc_send_pdu_acc_ext4 = 0x4001c240)
                [!provide]                        PROVIDE (r_lc_send_pdu_au_rand = 0x4001c308)
                [!provide]                        PROVIDE (r_lc_send_pdu_auto_rate = 0x4001c5d0)
                [!provide]                        PROVIDE (r_lc_send_pdu_clk_adj_ack = 0x4001c46c)
                [!provide]                        PROVIDE (r_lc_send_pdu_clk_adj_req = 0x4001c494)
                [!provide]                        PROVIDE (r_lc_send_pdu_comb_key = 0x4001c368)
                [!provide]                        PROVIDE (r_lc_send_pdu_dhkey_chk = 0x4001c8e8)
                [!provide]                        PROVIDE (r_lc_send_pdu_encaps_head = 0x4001c440)
                [!provide]                        PROVIDE (r_lc_send_pdu_encaps_payl = 0x4001c410)
                [!provide]                        PROVIDE (r_lc_send_pdu_enc_key_sz_req = 0x4001c670)
                [!provide]                        PROVIDE (r_lc_send_pdu_esco_lk_rem_req = 0x4001c5a8)
                [!provide]                        PROVIDE (r_lc_send_pdu_feats_ext_req = 0x4001c6ec)
                [!provide]                        PROVIDE (r_lc_send_pdu_feats_res = 0x4001c694)
                [!provide]                        PROVIDE (r_lc_send_pdu_in_rand = 0x4001c338)
                [!provide]                        PROVIDE (r_lc_send_pdu_io_cap_res = 0x4001c72c)
                [!provide]                        PROVIDE (r_lc_send_pdu_lsto = 0x4001c64c)
                [!provide]                        PROVIDE (r_lc_send_pdu_max_slot = 0x4001c3c8)
                [!provide]                        PROVIDE (r_lc_send_pdu_max_slot_req = 0x4001c3ec)
                [!provide]                        PROVIDE (r_lc_send_pdu_not_acc = 0x4001c26c)
                [!provide]                        PROVIDE (r_lc_send_pdu_not_acc_ext4 = 0x4001c294)
                [!provide]                        PROVIDE (r_lc_send_pdu_num_comp_fail = 0x4001c770)
                [!provide]                        PROVIDE (r_lc_send_pdu_pause_enc_aes_req = 0x4001c794)
                [!provide]                        PROVIDE (r_lc_send_pdu_paus_enc_req = 0x4001c7c0)
                [!provide]                        PROVIDE (r_lc_send_pdu_ptt_req = 0x4001c4c0)
                [!provide]                        PROVIDE (r_lc_send_pdu_qos_req = 0x4001c82c)
                [!provide]                        PROVIDE (r_lc_send_pdu_resu_enc_req = 0x4001c7e4)
                [!provide]                        PROVIDE (r_lc_send_pdu_sco_lk_rem_req = 0x4001c580)
                [!provide]                        PROVIDE (r_lc_send_pdu_set_afh = 0x4001c2c8)
                [!provide]                        PROVIDE (r_lc_send_pdu_setup_cmp = 0x4001c808)
                [!provide]                        PROVIDE (r_lc_send_pdu_slot_off = 0x4001c854)
                [!provide]                        PROVIDE (r_lc_send_pdu_sniff_req = 0x4001c5f0)
                [!provide]                        PROVIDE (r_lc_send_pdu_sp_cfm = 0x4001c518)
                [!provide]                        PROVIDE (r_lc_send_pdu_sp_nb = 0x4001c4e8)
                [!provide]                        PROVIDE (r_lc_send_pdu_sres = 0x4001c548)
                [!provide]                        PROVIDE (r_lc_send_pdu_tim_acc = 0x4001c6cc)
                [!provide]                        PROVIDE (r_lc_send_pdu_unit_key = 0x4001c398)
                [!provide]                        PROVIDE (r_lc_send_pdu_unsniff_req = 0x4001c894)
                [!provide]                        PROVIDE (r_lc_send_pdu_vers_req = 0x4001c8b4)
                [!provide]                        PROVIDE (r_lc_skip_hl_oob_req = 0x400201bc)
                [!provide]                        PROVIDE (r_lc_sniff_init = 0x40022cac)
                [!provide]                        PROVIDE (r_lc_sniff_max_slot_chg = 0x40020590)
                [!provide]                        PROVIDE (r_lc_sniff_reset = 0x40022cc8)
                [!provide]                        PROVIDE (r_lc_sniff_slot_unchange = 0x40021100)
                [!provide]                        PROVIDE (r_lc_sniff_sub_mode = 0x400204fc)
                [!provide]                        PROVIDE (r_lc_sp_end = 0x400213a8)
                [!provide]                        PROVIDE (r_lc_sp_fail = 0x40020470)
                [!provide]                        PROVIDE (r_lc_sp_oob_tid_fail = 0x400204cc)
                [!provide]                        PROVIDE (r_lc_ssr_nego = 0x4002125c)
                [!provide]                        PROVIDE (r_lc_start = 0x4001ca28)
                [!provide]                        PROVIDE (r_lc_start_enc = 0x4001fb28)
                [!provide]                        PROVIDE (r_lc_start_enc_key_size = 0x4001fd9c)
                [!provide]                        PROVIDE (r_lc_start_key_exch = 0x4001fe10)
                [!provide]                        PROVIDE (r_lc_start_lmp_to = 0x4001fae8)
                [!provide]                        PROVIDE (r_lc_start_oob = 0x4001fffc)
                [!provide]                        PROVIDE (r_lc_start_passkey = 0x4001feac)
                [!provide]                        PROVIDE (r_lc_start_passkey_loop = 0x4001ff88)
                [!provide]                        PROVIDE (r_lc_stop_afh_report = 0x40020184)
                [!provide]                        PROVIDE (r_lc_stop_enc = 0x40020110)
                [!provide]                        PROVIDE (r_lc_switch_cmp = 0x40020448)
                [!provide]                        PROVIDE (r_lc_unit_key_svr = 0x400206d8)
                [!provide]                        PROVIDE (r_lc_unsniff = 0x40020c50)
                [!provide]                        PROVIDE (r_lc_unsniff_cmp = 0x40020810)
                [!provide]                        PROVIDE (r_lc_unsniff_cont = 0x40020750)
                [!provide]                        PROVIDE (r_lc_upd_to = 0x4002065c)
                [!provide]                        PROVIDE (r_lc_util_convert_pref_rate_to_packet_type = 0x4002f9b0)
                [!provide]                        PROVIDE (r_lc_util_get_max_packet_size = 0x4002f4ac)
                [!provide]                        PROVIDE (r_lc_util_get_offset_clke = 0x4002f538)
                [!provide]                        PROVIDE (r_lc_util_get_offset_clkn = 0x4002f51c)
                [!provide]                        PROVIDE (r_lc_util_set_loc_trans_coll = 0x4002f500)
                [!provide]                        PROVIDE (r_lc_version = 0x40020a30)
                [!provide]                        PROVIDE (lc_set_encap_pdu_data_p192 = 0x4002e4c8)
                [!provide]                        PROVIDE (lc_set_encap_pdu_data_p256 = 0x4002e454)
                [!provide]                        PROVIDE (lm_get_auth_method = 0x40023420)
                [!provide]                        PROVIDE (lmp_accepted_ext_handler = 0x40027290)
                [!provide]                        PROVIDE (lmp_not_accepted_ext_handler = 0x40029c54)
                [!provide]                        PROVIDE (lmp_clk_adj_handler = 0x40027468)
                [!provide]                        PROVIDE (lmp_clk_adj_ack_handler = 0x400274f4)
                [!provide]                        PROVIDE (lm_get_auth_method = 0x40023420)
                [!provide]                        PROVIDE (lmp_accepted_ext_handler = 0x40027290)
                [!provide]                        PROVIDE (lmp_not_accepted_ext_handler = 0x40029c54)
                [!provide]                        PROVIDE (lmp_clk_adj_handler = 0x40027468)
                [!provide]                        PROVIDE (lmp_clk_adj_ack_handler = 0x400274f4)
                [!provide]                        PROVIDE (lmp_clk_adj_req_handler = 0x4002751c)
                [!provide]                        PROVIDE (lmp_feats_res_ext_handler = 0x4002cac4)
                [!provide]                        PROVIDE (lmp_feats_req_ext_handler = 0x4002ccb0)
                [!provide]                        PROVIDE (lmp_pkt_type_tbl_req_handler = 0x40027574)
                [!provide]                        PROVIDE (lmp_esco_link_req_handler = 0x40027610)
                [!provide]                        PROVIDE (lmp_rmv_esco_link_req_handler = 0x400276e8)
                [!provide]                        PROVIDE (lmp_ch_class_req_handler = 0x40027730)
                [!provide]                        PROVIDE (lmp_ch_class_handler = 0x4002ca18)
                [!provide]                        PROVIDE (lmp_ssr_req_handler = 0x4002780c)
                [!provide]                        PROVIDE (lmp_ssr_res_handler = 0x40027900)
                [!provide]                        PROVIDE (lmp_pause_enc_aes_req_handler = 0x400279a4)
                [!provide]                        PROVIDE (lmp_pause_enc_req_handler = 0x4002df90)
                [!provide]                        PROVIDE (lmp_resume_enc_req_handler = 0x4002e084)
                [!provide]                        PROVIDE (lmp_num_comparison_fail_handler = 0x40027a74)
                [!provide]                        PROVIDE (lmp_passkey_fail_handler = 0x40027aec)
                [!provide]                        PROVIDE (lmp_keypress_notif_handler = 0x4002c5c8)
                [!provide]                        PROVIDE (lmp_pwr_ctrl_req_handler = 0x400263bc)
                [!provide]                        PROVIDE (lmp_pwr_ctrl_res_handler = 0x40026480)
                [!provide]                        PROVIDE (lmp_auto_rate_handler = 0x40026548)
                [!provide]                        PROVIDE (lmp_pref_rate_handler = 0x4002657c)
                [!provide]                        PROVIDE (lmp_name_req_handler = 0x40025050)
                [!provide]                        PROVIDE (lmp_name_res_handler = 0x400250bc)
                [!provide]                        PROVIDE (lmp_not_accepted_handler = 0x400251d0)
                [!provide]                        PROVIDE (lmp_accepted_handler = 0x4002e894)
                [!provide]                        PROVIDE (lmp_clk_off_req_handler = 0x40025a44)
                [!provide]                        PROVIDE (lmp_clk_off_res_handler = 0x40025ab8)
                [!provide]                        PROVIDE (lmp_detach_handler = 0x40025b74)
                [!provide]                        PROVIDE (lmp_tempkey_handler = 0x4002b6b0)
                [!provide]                        PROVIDE (lmp_temprand_handler = 0x4002b74c)
                [!provide]                        PROVIDE (lmp_sres_handler = 0x4002b840)
                [!provide]                        PROVIDE (lmp_aurand_handler = 0x4002bda0)
                [!provide]                        PROVIDE (lmp_unitkey_handler = 0x4002c13c)
                [!provide]                        PROVIDE (lmp_combkey_handler = 0x4002c234)
                [!provide]                        PROVIDE (lmp_inrand_handler = 0x4002c414)
                [!provide]                        PROVIDE (lmp_oob_fail_handler = 0x40027b84)
                [!provide]                        PROVIDE (lmp_ping_req_handler = 0x40027c08)
                [!provide]                        PROVIDE (lmp_ping_res_handler = 0x40027c5c)
                [!provide]                        PROVIDE (lmp_enc_mode_req_handler = 0x40025c60)
                [!provide]                        PROVIDE (lmp_enc_key_size_req_handler = 0x40025e54)
                [!provide]                        PROVIDE (lmp_switch_req_handler = 0x40025f84)
                [!provide]                        PROVIDE (lmp_start_enc_req_handler = 0x4002e124)
                [!provide]                        PROVIDE (lmp_stop_enc_req_handler = 0x4002de30)
                [!provide]                        PROVIDE (lmp_sniff_req_handler = 0x400260c8)
                [!provide]                        PROVIDE (lmp_unsniff_req_handler = 0x400261e0)
                [!provide]                        PROVIDE (lmp_incr_pwr_req_handler = 0x4002629c)
                [!provide]                        PROVIDE (lmp_decr_pwr_req_handler = 0x400262f8)
                [!provide]                        PROVIDE (lmp_max_pwr_handler = 0x40026354)
                [!provide]                        PROVIDE (lmp_min_pwr_handler = 0x40026388)
                [!provide]                        PROVIDE (lmp_ver_req_handler = 0x400265f0)
                [!provide]                        PROVIDE (lmp_ver_res_handler = 0x40026670)
                [!provide]                        PROVIDE (lmp_qos_handler = 0x40026790)
                [!provide]                        PROVIDE (lmp_qos_req_handler = 0x40026844)
                [!provide]                        PROVIDE (lmp_sco_link_req_handler = 0x40026930)
                [!provide]                        PROVIDE (lmp_rmv_sco_link_req_handler = 0x40026a10)
                [!provide]                        PROVIDE (lmp_max_slot_handler = 0x40026a54)
                [!provide]                        PROVIDE (lmp_max_slot_req_handler = 0x40026aac)
                [!provide]                        PROVIDE (lmp_timing_accu_req_handler = 0x40026b54)
                [!provide]                        PROVIDE (lmp_timing_accu_res_handler = 0x40026bcc)
                [!provide]                        PROVIDE (lmp_setup_cmp_handler = 0x40026c84)
                [!provide]                        PROVIDE (lmp_feats_res_handler = 0x4002b548)
                [!provide]                        PROVIDE (lmp_feats_req_handler = 0x4002b620)
                [!provide]                        PROVIDE (lmp_host_con_req_handler = 0x4002b3d8)
                [!provide]                        PROVIDE (lmp_use_semi_perm_key_handler = 0x4002b4c4)
                [!provide]                        PROVIDE (lmp_slot_off_handler = 0x40026cc8)
                [!provide]                        PROVIDE (lmp_page_mode_req_handler = 0x40026d0c)
                [!provide]                        PROVIDE (lmp_page_scan_mode_req_handler = 0x40026d4c)
                [!provide]                        PROVIDE (lmp_supv_to_handler = 0x40026d94)
                [!provide]                        PROVIDE (lmp_test_activate_handler = 0x40026e7c)
                [!provide]                        PROVIDE (lmp_test_ctrl_handler = 0x40026ee4)
                [!provide]                        PROVIDE (lmp_enc_key_size_mask_req_handler = 0x40027038)
                [!provide]                        PROVIDE (lmp_enc_key_size_mask_res_handler = 0x400270a4)
                [!provide]                        PROVIDE (lmp_set_afh_handler = 0x4002b2e4)
                [!provide]                        PROVIDE (lmp_encaps_hdr_handler = 0x40027120)
                [!provide]                        PROVIDE (lmp_encaps_payl_handler = 0x4002e590)
                [!provide]                        PROVIDE (lmp_sp_nb_handler = 0x4002acf0)
                [!provide]                        PROVIDE (lmp_sp_cfm_handler = 0x4002b170)
                [!provide]                        PROVIDE (lmp_dhkey_chk_handler = 0x4002ab48)
                [!provide]                        PROVIDE (lmp_pause_enc_aes_req_handler = 0x400279a4)
                [!provide]                        PROVIDE (lmp_io_cap_res_handler = 0x4002c670)
                [!provide]                        PROVIDE (lmp_io_cap_req_handler = 0x4002c7a4)
                [!provide]                        PROVIDE (lc_cmd_cmp_bd_addr_send = 0x4002cec4)
                [!provide]                        PROVIDE (ld_acl_tx_packet_type_select = 0x4002fb40)
                [!provide]                        PROVIDE (ld_acl_sched = 0x40033268)
                [!provide]                        PROVIDE (ld_acl_sniff_sched = 0x4003340c)
                [!provide]                        PROVIDE (ld_acl_rx = 0x4003274c)
                [!provide]                        PROVIDE (ld_acl_tx = 0x4002ffdc)
                [!provide]                        PROVIDE (ld_acl_rx_sync = 0x4002fbec)
                [!provide]                        PROVIDE (ld_acl_rx_sync2 = 0x4002fd8c)
                [!provide]                        PROVIDE (ld_acl_rx_no_sync = 0x4002fe78)
                [!provide]                        PROVIDE (ld_acl_clk_isr = 0x40030cf8)
                [!provide]                        PROVIDE (ld_acl_rsw_frm_cbk = 0x40033bb0)
                [!provide]                        PROVIDE (ld_sco_modify = 0x40031778)
                [!provide]                        PROVIDE (lm_cmd_cmp_send = 0x40051838)
                [!provide]                        PROVIDE (ld_sco_frm_cbk = 0x400349dc)
                [!provide]                        PROVIDE (ld_acl_sco_rsvd_check = 0x4002fa94)
                [!provide]                        PROVIDE (ld_acl_sniff_frm_cbk = 0x4003482c)
                [!provide]                        PROVIDE (ld_inq_end = 0x4003ab48)
                [!provide]                        PROVIDE (ld_inq_sched = 0x4003aba4)
                [!provide]                        PROVIDE (ld_inq_frm_cbk = 0x4003ae4c)
                [!provide]                        PROVIDE (ld_pscan_frm_cbk = 0x4003ebe4)
                [!provide]                        PROVIDE (r_ld_acl_active_hop_types_get = 0x40036e10)
                [!provide]                        PROVIDE (r_ld_acl_afh_confirm = 0x40036d40)
                [!provide]                        PROVIDE (r_ld_acl_afh_prepare = 0x40036c84)
                [!provide]                        PROVIDE (r_ld_acl_afh_set = 0x40036b60)
                [!provide]                        PROVIDE (r_ld_acl_allowed_tx_packet_types_set = 0x40036810)
                [!provide]                        PROVIDE (r_ld_acl_bcst_rx_dec = 0x40036394)
                [!provide]                        PROVIDE (r_ld_acl_bit_off_get = 0x40036b18)
                [!provide]                        PROVIDE (r_ld_acl_clk_adj_set = 0x40036a00)
                [!provide]                        PROVIDE (r_ld_acl_clk_off_get = 0x40036b00)
                [!provide]                        PROVIDE (r_ld_acl_clk_set = 0x40036950)
                [!provide]                        PROVIDE (r_ld_acl_clock_offset_get = 0x400364c0)
                [!provide]                        PROVIDE (r_ld_acl_current_tx_power_get = 0x400368f0)
                [!provide]                        PROVIDE (r_ld_acl_data_flush = 0x400357bc)
                [!provide]                        PROVIDE (r_ld_acl_data_tx = 0x4003544c)
                [!provide]                        PROVIDE (r_ld_acl_edr_set = 0x4003678c)
                [!provide]                        PROVIDE (r_ld_acl_enc_key_load = 0x40036404)
                [!provide]                        PROVIDE (r_ld_acl_flow_off = 0x40035400)
                [!provide]                        PROVIDE (r_ld_acl_flow_on = 0x4003541c)
                [!provide]                        PROVIDE (r_ld_acl_flush_timeout_get = 0x40035f9c)
                [!provide]                        PROVIDE (r_ld_acl_flush_timeout_set = 0x40035fe0)
                [!provide]                        PROVIDE (r_ld_acl_init = 0x40034d08)
                [!provide]                        PROVIDE (r_ld_acl_lmp_flush = 0x40035d80)
                [!provide]                        PROVIDE (r_ld_acl_lmp_tx = 0x40035b34)
                [!provide]                        PROVIDE (r_ld_acl_lsto_get = 0x400366b4)
                [!provide]                        PROVIDE (r_ld_acl_lsto_set = 0x400366f8)
                [!provide]                        PROVIDE (r_ld_acl_reset = 0x40034d24)
                [!provide]                        PROVIDE (r_ld_acl_role_get = 0x40036b30)
                [!provide]                        PROVIDE (r_ld_acl_rssi_delta_get = 0x40037028)
                [!provide]                        PROVIDE (r_ld_acl_rsw_req = 0x40035e74)
                [!provide]                        PROVIDE (r_ld_acl_rx_enc = 0x40036344)
                [!provide]                        PROVIDE (r_ld_acl_rx_max_slot_get = 0x40036e58)
                [!provide]                        PROVIDE (r_ld_acl_rx_max_slot_set = 0x40036ea0)
                [!provide]                        PROVIDE (r_ld_acl_slot_offset_get = 0x4003653c)
                [!provide]                        PROVIDE (r_ld_acl_slot_offset_set = 0x40036658)
                [!provide]                        PROVIDE (r_ld_acl_sniff = 0x4003617c)
                [!provide]                        PROVIDE (r_ld_acl_sniff_trans = 0x400360a8)
                [!provide]                        PROVIDE (r_ld_acl_ssr_set = 0x40036274)
                [!provide]                        PROVIDE (r_ld_acl_start = 0x40034ddc)
                [!provide]                        PROVIDE (r_ld_acl_stop = 0x4003532c)
                [!provide]                        PROVIDE (r_ld_acl_test_mode_set = 0x40036f24)
                [!provide]                        PROVIDE (r_ld_acl_timing_accuracy_set = 0x4003673c)
                [!provide]                        PROVIDE (r_ld_acl_t_poll_get = 0x40036024)
                [!provide]                        PROVIDE (r_ld_acl_t_poll_set = 0x40036068)
                [!provide]                        PROVIDE (r_ld_acl_tx_enc = 0x400362f8)
                [!provide]                        PROVIDE (ld_acl_frm_cbk = 0x40034414)
                [!provide]                        PROVIDE (ld_acl_rsw_end = 0x40032bc0)
                [!provide]                        PROVIDE (ld_acl_end = 0x40033140)
                [!provide]                        PROVIDE (ld_acl_resched = 0x40033814)
                [!provide]                        PROVIDE (ld_acl_test_mode_update = 0x40032050)
                [!provide]                        PROVIDE (r_ld_acl_unsniff = 0x400361e0)
                [!provide]                        PROVIDE (r_ld_active_check = 0x4003cac4)
                [!provide]                        PROVIDE (r_ld_afh_ch_assess_data_get = 0x4003caec)
                [!provide]                        PROVIDE (r_ld_bcst_acl_data_tx = 0x40038d3c)
                [!provide]                        PROVIDE (r_ld_bcst_acl_init = 0x40038bd0)
                [!provide]                        PROVIDE (r_ld_bcst_acl_reset = 0x40038bdc)
                [!provide]                        PROVIDE (r_ld_bcst_acl_start = 0x4003882c)
                [!provide]                        PROVIDE (r_ld_bcst_afh_update = 0x40038f3c)
                [!provide]                        PROVIDE (r_ld_bcst_enc_key_load = 0x4003906c)
                [!provide]                        PROVIDE (r_ld_bcst_lmp_tx = 0x40038bf8)
                [!provide]                        PROVIDE (r_ld_bcst_tx_enc = 0x40038ff8)
                [!provide]                        PROVIDE (r_ld_bd_addr_get = 0x4003ca20)
                [!provide]                        PROVIDE (r_ld_channel_assess = 0x4003c184)
                [!provide]                        PROVIDE (r_ld_class_of_dev_get = 0x4003ca34)
                [!provide]                        PROVIDE (r_ld_class_of_dev_set = 0x4003ca50)
                [!provide]                        PROVIDE (r_ld_csb_rx_afh_update = 0x40039af4)
                [!provide]                        PROVIDE (r_ld_csb_rx_init = 0x40039690)
                [!provide]                        PROVIDE (r_ld_csb_rx_reset = 0x4003969c)
                [!provide]                        PROVIDE (r_ld_csb_rx_start = 0x4003972c)
                [!provide]                        PROVIDE (r_ld_csb_rx_stop = 0x40039bb8)
                [!provide]                        PROVIDE (r_ld_csb_tx_afh_update = 0x4003a5fc)
                [!provide]                        PROVIDE (r_ld_csb_tx_clr_data = 0x4003a71c)
                [!provide]                        PROVIDE (r_ld_csb_tx_dis = 0x4003a5e8)
                [!provide]                        PROVIDE (r_ld_csb_tx_en = 0x4003a1c0)
                [!provide]                        PROVIDE (r_ld_csb_tx_init = 0x4003a0e8)
                [!provide]                        PROVIDE (r_ld_csb_tx_reset = 0x4003a0f8)
                [!provide]                        PROVIDE (r_ld_csb_tx_set_data = 0x4003a6c0)
                [!provide]                        PROVIDE (r_ld_fm_clk_isr = 0x4003a7a8)
                [!provide]                        PROVIDE (r_ld_fm_frame_isr = 0x4003a82c)
                [!provide]                        PROVIDE (r_ld_fm_init = 0x4003a760)
                [!provide]                        PROVIDE (r_ld_fm_prog_check = 0x4003ab28)
                [!provide]                        PROVIDE (r_ld_fm_prog_disable = 0x4003a984)
                [!provide]                        PROVIDE (r_ld_fm_prog_enable = 0x4003a944)
                [!provide]                        PROVIDE (r_ld_fm_prog_push = 0x4003a9d4)
                [!provide]                        PROVIDE (r_ld_fm_reset = 0x4003a794)
                [!provide]                        PROVIDE (r_ld_fm_rx_isr = 0x4003a7f4)
                [!provide]                        PROVIDE (r_ld_fm_sket_isr = 0x4003a8a4)
                [!provide]                        PROVIDE (r_ld_init = 0x4003c294)
                [!provide]                        PROVIDE (r_ld_inq_init = 0x4003b15c)
                [!provide]                        PROVIDE (r_ld_inq_reset = 0x4003b168)
                [!provide]                        PROVIDE (r_ld_inq_start = 0x4003b1f0)
                [!provide]                        PROVIDE (r_ld_inq_stop = 0x4003b4f0)
                [!provide]                        PROVIDE (r_ld_iscan_eir_get = 0x4003c118)
                [!provide]                        PROVIDE (r_ld_iscan_eir_set = 0x4003bfa0)
                [!provide]                        PROVIDE (r_ld_iscan_init = 0x4003b9f0)
                [!provide]                        PROVIDE (r_ld_iscan_reset = 0x4003ba14)
                [!provide]                        PROVIDE (r_ld_iscan_restart = 0x4003ba44)
                [!provide]                        PROVIDE (r_ld_iscan_start = 0x4003bb28)
                [!provide]                        PROVIDE (r_ld_iscan_stop = 0x4003bf1c)
                [!provide]                        PROVIDE (r_ld_iscan_tx_pwr_get = 0x4003c138)
                [!provide]                        PROVIDE (r_ld_page_init = 0x4003d808)
                [!provide]                        PROVIDE (r_ld_page_reset = 0x4003d814)
                [!provide]                        PROVIDE (r_ld_page_start = 0x4003d848)
                [!provide]                        PROVIDE (r_ld_page_stop = 0x4003da54)
                [!provide]                        PROVIDE (r_ld_pca_coarse_clock_adjust = 0x4003e324)
                [!provide]                        PROVIDE (r_ld_pca_init = 0x4003deb4)
                [!provide]                        PROVIDE (r_ld_pca_initiate_clock_dragging = 0x4003e4ac)
                [!provide]                        PROVIDE (r_ld_pca_local_config = 0x4003df6c)
                [!provide]                        PROVIDE (r_ld_pca_mws_frame_sync = 0x4003e104)
                [!provide]                        PROVIDE (r_ld_pca_mws_moment_offset_gt = 0x4003e278)
                [!provide]                        PROVIDE (r_ld_pca_mws_moment_offset_lt = 0x4003e280)
                [!provide]                        PROVIDE (r_ld_pca_reporting_enable = 0x4003e018)
                [!provide]                        PROVIDE (r_ld_pca_reset = 0x4003df0c)
                [!provide]                        PROVIDE (r_ld_pca_update_target_offset = 0x4003e050)
                [!provide]                        PROVIDE (r_ld_pscan_evt_handler = 0x4003f238)
                [!provide]                        PROVIDE (r_ld_pscan_init = 0x4003f474)
                [!provide]                        PROVIDE (r_ld_pscan_reset = 0x4003f498)
                [!provide]                        PROVIDE (r_ld_pscan_restart = 0x4003f4b8)
                [!provide]                        PROVIDE (r_ld_pscan_start = 0x4003f514)
                [!provide]                        PROVIDE (r_ld_pscan_stop = 0x4003f618)
                [!provide]                        PROVIDE (r_ld_read_clock = 0x4003c9e4)
                [!provide]                        PROVIDE (r_ld_reset = 0x4003c714)
                [!provide]                        PROVIDE (r_ld_sched_acl_add = 0x4003f978)
                [!provide]                        PROVIDE (r_ld_sched_acl_remove = 0x4003f99c)
                [!provide]                        PROVIDE (r_ld_sched_compute = 0x4003f6f8)
                [!provide]                        PROVIDE (r_ld_sched_init = 0x4003f7ac)
                [!provide]                        PROVIDE (r_ld_sched_inq_add = 0x4003f8a8)
                [!provide]                        PROVIDE (r_ld_sched_inq_remove = 0x4003f8d0)
                [!provide]                        PROVIDE (r_ld_sched_iscan_add = 0x4003f7e8)
                [!provide]                        PROVIDE (r_ld_sched_iscan_remove = 0x4003f808)
                [!provide]                        PROVIDE (r_ld_sched_page_add = 0x4003f910)
                [!provide]                        PROVIDE (r_ld_sched_page_remove = 0x4003f938)
                [!provide]                        PROVIDE (r_ld_sched_pscan_add = 0x4003f828)
                [!provide]                        PROVIDE (r_ld_sched_pscan_remove = 0x4003f848)
                [!provide]                        PROVIDE (r_ld_sched_reset = 0x4003f7d4)
                [!provide]                        PROVIDE (r_ld_sched_sco_add = 0x4003fa4c)
                [!provide]                        PROVIDE (r_ld_sched_sco_remove = 0x4003fa9c)
                [!provide]                        PROVIDE (r_ld_sched_sniff_add = 0x4003f9c4)
                [!provide]                        PROVIDE (r_ld_sched_sniff_remove = 0x4003fa0c)
                [!provide]                        PROVIDE (r_ld_sched_sscan_add = 0x4003f868)
                [!provide]                        PROVIDE (r_ld_sched_sscan_remove = 0x4003f888)
                [!provide]                        PROVIDE (r_ld_sco_audio_isr = 0x40037cc8)
                [!provide]                        PROVIDE (r_ld_sco_data_tx = 0x40037ee8)
                [!provide]                        PROVIDE (r_ld_sco_start = 0x40037110)
                [!provide]                        PROVIDE (r_ld_sco_stop = 0x40037c40)
                [!provide]                        PROVIDE (r_ld_sco_update = 0x40037a74)
                [!provide]                        PROVIDE (r_ld_sscan_activated = 0x4004031c)
                [!provide]                        PROVIDE (r_ld_sscan_init = 0x400402f0)
                [!provide]                        PROVIDE (r_ld_sscan_reset = 0x400402fc)
                [!provide]                        PROVIDE (r_ld_sscan_start = 0x40040384)
                [!provide]                        PROVIDE (r_ld_strain_init = 0x400409f4)
                [!provide]                        PROVIDE (r_ld_strain_reset = 0x40040a00)
                [!provide]                        PROVIDE (r_ld_strain_start = 0x40040a8c)
                [!provide]                        PROVIDE (r_ld_strain_stop = 0x40040df0)
                [!provide]                        PROVIDE (r_ld_timing_accuracy_get = 0x4003caac)
                [!provide]                        PROVIDE (r_ld_util_active_master_afh_map_get = 0x4004131c)
                [!provide]                        PROVIDE (r_ld_util_active_master_afh_map_set = 0x40041308)
                [!provide]                        PROVIDE (r_ld_util_bch_create = 0x40040fcc)
                [!provide]                        PROVIDE (r_ld_util_fhs_pk = 0x400411c8)
                [!provide]                        PROVIDE (r_ld_util_fhs_unpk = 0x40040e54)
                [!provide]                        PROVIDE (r_ld_util_stp_pk = 0x400413f4)
                [!provide]                        PROVIDE (r_ld_util_stp_unpk = 0x40041324)
                [!provide]                        PROVIDE (r_ld_version_get = 0x4003ca6c)
                [!provide]                        PROVIDE (r_ld_wlcoex_set = 0x4003caf8)
                [!provide]                        PROVIDE (r_llc_ch_assess_get_current_ch_map = 0x40041574)
                [!provide]                        PROVIDE (r_llc_ch_assess_get_local_ch_map = 0x4004150c)
                [!provide]                        PROVIDE (r_llc_ch_assess_local = 0x40041494)
                [!provide]                        PROVIDE (r_llc_ch_assess_merge_ch = 0x40041588)
                [!provide]                        PROVIDE (r_llc_ch_assess_reass_ch = 0x400415c0)
                [!provide]                        PROVIDE (r_llc_common_cmd_complete_send = 0x40044eac)
                [!provide]                        PROVIDE (r_llc_common_cmd_status_send = 0x40044ee0)
                [!provide]                        PROVIDE (r_llc_common_enc_change_evt_send = 0x40044f6c)
                [!provide]                        PROVIDE (r_llc_common_enc_key_ref_comp_evt_send = 0x40044f38)
                [!provide]                        PROVIDE (r_llc_common_flush_occurred_send = 0x40044f0c)
                [!provide]                        PROVIDE (r_llc_common_nb_of_pkt_comp_evt_send = 0x40045000)
                [!provide]                        PROVIDE (r_llc_con_update_complete_send = 0x40044d68)
                [!provide]                        PROVIDE (r_llc_con_update_finished = 0x4004518c)
                [!provide]                        PROVIDE (r_llc_con_update_ind = 0x40045038)
                [!provide]                        PROVIDE (r_llc_discon_event_complete_send = 0x40044a30)
                [!provide]                        PROVIDE (r_llc_end_evt_defer = 0x40046330)
                [!provide]                        PROVIDE (r_llc_feats_rd_event_send = 0x40044e0c)
                [!provide]                        PROVIDE (r_llc_init = 0x40044778)
                [!provide]                        PROVIDE (r_llc_le_con_cmp_evt_send = 0x40044a78)
                [!provide]                        PROVIDE (r_llc_llcp_ch_map_update_pdu_send = 0x40043f94)
                [!provide]                        PROVIDE (r_llc_llcp_con_param_req_pdu_send = 0x400442fc)
                [!provide]                        PROVIDE (r_llc_llcp_con_param_rsp_pdu_send = 0x40044358)
                [!provide]                        PROVIDE (r_llc_llcp_con_update_pdu_send = 0x400442c4)
                [!provide]                        PROVIDE (r_llc_llcp_enc_req_pdu_send = 0x40044064)
                [!provide]                        PROVIDE (r_llc_llcp_enc_rsp_pdu_send = 0x40044160)
                [!provide]                        PROVIDE (r_llc_llcp_feats_req_pdu_send = 0x400443b4)
                [!provide]                        PROVIDE (r_llc_llcp_feats_rsp_pdu_send = 0x400443f0)
                [!provide]                        PROVIDE (r_llc_llcp_get_autorize = 0x4004475c)
                [!provide]                        PROVIDE (r_llc_llcp_length_req_pdu_send = 0x40044574)
                [!provide]                        PROVIDE (r_llc_llcp_length_rsp_pdu_send = 0x400445ac)
                [!provide]                        PROVIDE (r_llc_llcp_pause_enc_req_pdu_send = 0x40043fd8)
                [!provide]                        PROVIDE (r_llc_llcp_pause_enc_rsp_pdu_send = 0x40044010)
                [!provide]                        PROVIDE (r_llc_llcp_ping_req_pdu_send = 0x4004454c)
                [!provide]                        PROVIDE (r_llc_llcp_ping_rsp_pdu_send = 0x40044560)
                [!provide]                        PROVIDE (r_llc_llcp_recv_handler = 0x40044678)
                [!provide]                        PROVIDE (r_llc_llcp_reject_ind_pdu_send = 0x4004425c)
                [!provide]                        PROVIDE (r_llc_llcp_start_enc_req_pdu_send = 0x4004441c)
                [!provide]                        PROVIDE (r_llc_llcp_start_enc_rsp_pdu_send = 0x400441f8)
                [!provide]                        PROVIDE (r_llc_llcp_terminate_ind_pdu_send = 0x400444b0)
                [!provide]                        PROVIDE (r_llc_llcp_tester_send = 0x400445e4)
                [!provide]                        PROVIDE (r_llc_llcp_unknown_rsp_send_pdu = 0x40044534)
                [!provide]                        PROVIDE (r_llc_llcp_version_ind_pdu_send = 0x40043f6c)
                [!provide]                        PROVIDE (r_llc_lsto_con_update = 0x40045098)
                [!provide]                        PROVIDE (r_llc_ltk_req_send = 0x40044dc0)
                [!provide]                        PROVIDE (r_llc_map_update_finished = 0x40045260)
                [!provide]                        PROVIDE (r_llc_map_update_ind = 0x400450f0)
                [!provide]                        PROVIDE (r_llc_pdu_acl_tx_ack_defer = 0x400464dc)
                [!provide]                        PROVIDE (r_llc_pdu_defer = 0x40046528)
                [!provide]                        PROVIDE (r_llc_pdu_llcp_tx_ack_defer = 0x400463ac)
                [!provide]                        PROVIDE (r_llc_reset = 0x400447b8)
                [!provide]                        PROVIDE (r_llc_start = 0x400447f4)
                [!provide]                        PROVIDE (r_llc_stop = 0x400449ac)
                [!provide]                        PROVIDE (r_llc_util_bw_mgt = 0x4004629c)
                [!provide]                        PROVIDE (r_llc_util_clear_operation_ptr = 0x40046234)
                [!provide]                        PROVIDE (r_llc_util_dicon_procedure = 0x40046130)
                [!provide]                        PROVIDE (r_llc_util_get_free_conhdl = 0x400460c8)
                [!provide]                        PROVIDE (r_llc_util_get_nb_active_link = 0x40046100)
                [!provide]                        PROVIDE (r_llc_util_set_auth_payl_to_margin = 0x400461f4)
                [!provide]                        PROVIDE (r_llc_util_set_llcp_discard_enable = 0x400461c8)
                [!provide]                        PROVIDE (r_llc_util_update_channel_map = 0x400461ac)
                [!provide]                        PROVIDE (r_llc_version_rd_event_send = 0x40044e60)
                [!provide]                        PROVIDE (r_lld_adv_start = 0x40048b38)
                [!provide]                        PROVIDE (r_lld_adv_stop = 0x40048ea0)
                [!provide]                        PROVIDE (r_lld_ch_map_ind = 0x4004a2f4)
                [!provide]                        PROVIDE (r_lld_con_param_req = 0x40049f0c)
                [!provide]                        PROVIDE (r_lld_con_param_rsp = 0x40049e00)
                [!provide]                        PROVIDE (r_lld_con_start = 0x400491f8)
                [!provide]                        PROVIDE (r_lld_con_stop = 0x40049fdc)
                [!provide]                        PROVIDE (r_lld_con_update_after_param_req = 0x40049bcc)
                [!provide]                        PROVIDE (r_lld_con_update_ind = 0x4004a30c)
                [!provide]                        PROVIDE (r_lld_con_update_req = 0x40049b60)
                [!provide]                        PROVIDE (r_lld_core_reset = 0x40048a9c)
                [!provide]                        PROVIDE (r_lld_crypt_isr = 0x4004a324)
                [!provide]                        PROVIDE (r_lld_evt_adv_create = 0x400481f4)
                [!provide]                        PROVIDE (r_lld_evt_canceled = 0x400485c8)
                [!provide]                        PROVIDE (r_lld_evt_channel_next = 0x40046aac)
                [!provide]                        PROVIDE (r_lld_evt_deffered_elt_handler = 0x400482bc)
                [!provide]                        PROVIDE (r_lld_evt_delete_elt_handler = 0x40046974)
                [!provide]                        PROVIDE (r_lld_evt_delete_elt_push = 0x40046a3c)
                [!provide]                        PROVIDE (r_lld_evt_drift_compute = 0x40047670)
                [!provide]                        PROVIDE (r_lld_evt_elt_delete = 0x40047538)
                [!provide]                        PROVIDE (r_lld_evt_elt_insert = 0x400474c8)
                [!provide]                        PROVIDE (r_lld_evt_end = 0x400483e8)
                [!provide]                        PROVIDE (r_lld_evt_end_isr = 0x4004862c)
                [!provide]                        PROVIDE (r_lld_evt_init = 0x40046b3c)
                [!provide]                        PROVIDE (r_lld_evt_init_evt = 0x40046cd0)
                [!provide]                        PROVIDE (r_lld_evt_move_to_master = 0x40047ba0)
                [!provide]                        PROVIDE (r_lld_evt_move_to_slave = 0x40047e18)
                [!provide]                        PROVIDE (r_lld_evt_prevent_stop = 0x40047adc)
                [!provide]                        PROVIDE (r_lld_evt_restart = 0x40046d50)
                [!provide]                        PROVIDE (r_lld_evt_rx = 0x40048578)
                [!provide]                        PROVIDE (r_lld_evt_rx_isr = 0x40048678)
                [!provide]                        PROVIDE (r_lld_evt_scan_create = 0x40047ae8)
                [!provide]                        PROVIDE (r_lld_evt_schedule = 0x40047908)
                [!provide]                        PROVIDE (r_lld_evt_schedule_next = 0x400477dc)
                [!provide]                        PROVIDE (r_lld_evt_schedule_next_instant = 0x400476a8)
                [!provide]                        PROVIDE (r_lld_evt_slave_update = 0x40048138)
                [!provide]                        PROVIDE (r_lld_evt_update_create = 0x40047cd8)
                [!provide]                        PROVIDE (r_lld_get_mode = 0x40049ff8)
                [!provide]                        PROVIDE (r_lld_init = 0x4004873c)
                [!provide]                        PROVIDE (r_lld_move_to_master = 0x400499e0)
                [!provide]                        PROVIDE (r_lld_move_to_slave = 0x4004a024)
                [!provide]                        PROVIDE (r_lld_pdu_adv_pack = 0x4004b488)
                [!provide]                        PROVIDE (r_lld_pdu_check = 0x4004ac34)
                [!provide]                        PROVIDE (r_lld_pdu_data_send = 0x4004b018)
                [!provide]                        PROVIDE (r_lld_pdu_data_tx_push = 0x4004aecc)
                [!provide]                        PROVIDE (r_lld_pdu_rx_handler = 0x4004b4d4)
                [!provide]                        PROVIDE (r_lld_pdu_send_packet = 0x4004b774)
                [!provide]                        PROVIDE (r_lld_pdu_tx_flush = 0x4004b414)
                [!provide]                        PROVIDE (r_lld_pdu_tx_loop = 0x4004ae40)
                [!provide]                        PROVIDE (r_lld_pdu_tx_prog = 0x4004b120)
                [!provide]                        PROVIDE (r_lld_pdu_tx_push = 0x4004b080)
                [!provide]                        PROVIDE (r_lld_ral_renew_req = 0x4004a73c)
                [!provide]                        PROVIDE (r_lld_scan_start = 0x40048ee0)
                [!provide]                        PROVIDE (r_lld_scan_stop = 0x40049190)
                [!provide]                        PROVIDE (r_lld_test_mode_rx = 0x4004a540)
                [!provide]                        PROVIDE (r_lld_test_mode_tx = 0x4004a350)
                [!provide]                        PROVIDE (r_lld_test_stop = 0x4004a710)
                [!provide]                        PROVIDE (r_lld_util_anchor_point_move = 0x4004bacc)
                [!provide]                        PROVIDE (r_lld_util_compute_ce_max = 0x4004bc0c)
                [!provide]                        PROVIDE (r_lld_util_connection_param_set = 0x4004ba40)
                [!provide]                        PROVIDE (r_lld_util_dle_set_cs_fields = 0x4004ba90)
                [!provide]                        PROVIDE (r_lld_util_eff_tx_time_set = 0x4004bd88)
                [!provide]                        PROVIDE (r_lld_util_elt_programmed = 0x4004bce0)
                [!provide]                        PROVIDE (r_lld_util_flush_list = 0x4004bbd8)
                [!provide]                        PROVIDE (r_lld_util_freq2chnl = 0x4004b9e4)
                [!provide]                        PROVIDE (r_lld_util_get_bd_address = 0x4004b8ac)
                [!provide]                        PROVIDE (r_lld_util_get_local_offset = 0x4004ba10)
                [!provide]                        PROVIDE (r_lld_util_get_peer_offset = 0x4004ba24)
                [!provide]                        PROVIDE (r_lld_util_get_tx_pkt_cnt = 0x4004bd80)
                [!provide]                        PROVIDE (r_lld_util_instant_get = 0x4004b890)
                [!provide]                        PROVIDE (r_lld_util_instant_ongoing = 0x4004bbfc)
                [!provide]                        PROVIDE (r_lld_util_priority_set = 0x4004bd10)
                [!provide]                        PROVIDE (r_lld_util_priority_update = 0x4004bd78)
                [!provide]                        PROVIDE (r_lld_util_ral_force_rpa_renew = 0x4004b980)
                [!provide]                        PROVIDE (r_lld_util_set_bd_address = 0x4004b8f8)
                [!provide]                        PROVIDE (r_lld_wlcoex_set = 0x4004bd98)
                [!provide]                        PROVIDE (r_llm_ble_ready = 0x4004cc34)
                [!provide]                        PROVIDE (r_llm_common_cmd_complete_send = 0x4004d288)
                [!provide]                        PROVIDE (r_llm_common_cmd_status_send = 0x4004d2b4)
                [!provide]                        PROVIDE (r_llm_con_req_ind = 0x4004cc54)
                [!provide]                        PROVIDE (r_llm_con_req_tx_cfm = 0x4004d158)
                [!provide]                        PROVIDE (r_llm_create_con = 0x4004de78)
                [!provide]                        PROVIDE (r_llm_encryption_done = 0x4004dff8)
                [!provide]                        PROVIDE (r_llm_encryption_start = 0x4004e128)
                [!provide]                        PROVIDE (r_llm_end_evt_defer = 0x4004eb6c)
                [!provide]                        PROVIDE (r_llm_init = 0x4004c9f8)
                [!provide]                        PROVIDE (r_llm_le_adv_report_ind = 0x4004cdf4)
                [!provide]                        PROVIDE (r_llm_pdu_defer = 0x4004ec48)
                [!provide]                        PROVIDE (r_llm_ral_clear = 0x4004e1fc)
                [!provide]                        PROVIDE (r_llm_ral_dev_add = 0x4004e23c)
                [!provide]                        PROVIDE (r_llm_ral_dev_rm = 0x4004e3bc)
                [!provide]                        PROVIDE (r_llm_ral_get_rpa = 0x4004e400)
                [!provide]                        PROVIDE (r_llm_ral_set_timeout = 0x4004e4a0)
                [!provide]                        PROVIDE (r_llm_ral_update = 0x4004e4f8)
                [!provide]                        PROVIDE (r_llm_set_adv_data = 0x4004d960)
                [!provide]                        PROVIDE (r_llm_set_adv_en = 0x4004d7ec)
                [!provide]                        PROVIDE (r_llm_set_adv_param = 0x4004d5f4)
                [!provide]                        PROVIDE (r_llm_set_scan_en = 0x4004db64)
                [!provide]                        PROVIDE (r_llm_set_scan_param = 0x4004dac8)
                [!provide]                        PROVIDE (r_llm_set_scan_rsp_data = 0x4004da14)
                [!provide]                        PROVIDE (r_llm_test_mode_start_rx = 0x4004d534)
                [!provide]                        PROVIDE (r_llm_test_mode_start_tx = 0x4004d2fc)
                [!provide]                        PROVIDE (r_llm_util_adv_data_update = 0x4004e8fc)
                [!provide]                        PROVIDE (r_llm_util_apply_bd_addr = 0x4004e868)
                [!provide]                        PROVIDE (r_llm_util_bd_addr_in_ral = 0x4004eb08)
                [!provide]                        PROVIDE (r_llm_util_bd_addr_in_wl = 0x4004e788)
                [!provide]                        PROVIDE (r_llm_util_bd_addr_wl_position = 0x4004e720)
                [!provide]                        PROVIDE (r_llm_util_bl_add = 0x4004e9ac)
                [!provide]                        PROVIDE (r_llm_util_bl_check = 0x4004e930)
                [!provide]                        PROVIDE (r_llm_util_bl_rem = 0x4004ea70)
                [!provide]                        PROVIDE (r_llm_util_check_address_validity = 0x4004e7e4)
                [!provide]                        PROVIDE (r_llm_util_check_evt_mask = 0x4004e8b0)
                [!provide]                        PROVIDE (r_llm_util_check_map_validity = 0x4004e800)
                [!provide]                        PROVIDE (r_llm_util_get_channel_map = 0x4004e8d4)
                [!provide]                        PROVIDE (r_llm_util_get_supp_features = 0x4004e8e8)
                [!provide]                        PROVIDE (r_llm_util_set_public_addr = 0x4004e89c)
                [!provide]                        PROVIDE (r_llm_wl_clr = 0x4004dc54)
                [!provide]                        PROVIDE (r_llm_wl_dev_add = 0x4004dcc0)
                [!provide]                        PROVIDE (r_llm_wl_dev_add_hdl = 0x4004dd38)
                [!provide]                        PROVIDE (r_llm_wl_dev_rem = 0x4004dcfc)
                [!provide]                        PROVIDE (r_llm_wl_dev_rem_hdl = 0x4004dde0)
                [!provide]                        PROVIDE (r_lm_acl_disc = 0x4004f148)
                [!provide]                        PROVIDE (r_LM_AddSniff = 0x40022d20)
                [!provide]                        PROVIDE (r_lm_add_sync = 0x40051358)
                [!provide]                        PROVIDE (r_lm_afh_activate_timer = 0x4004f444)
                [!provide]                        PROVIDE (r_lm_afh_ch_ass_en_get = 0x4004f3f8)
                [!provide]                        PROVIDE (r_lm_afh_host_ch_class_get = 0x4004f410)
                [!provide]                        PROVIDE (r_lm_afh_master_ch_map_get = 0x4004f43c)
                [!provide]                        PROVIDE (r_lm_afh_peer_ch_class_set = 0x4004f418)
                [!provide]                        PROVIDE (r_lm_check_active_sync = 0x40051334)
                [!provide]                        PROVIDE (r_LM_CheckEdrFeatureRequest = 0x4002f90c)
                [!provide]                        PROVIDE (r_LM_CheckSwitchInstant = 0x4002f8c0)
                [!provide]                        PROVIDE (r_lm_check_sync_hl_rsp = 0x4005169c)
                [!provide]                        PROVIDE (r_lm_clk_adj_ack_pending_clear = 0x4004f514)
                [!provide]                        PROVIDE (r_lm_clk_adj_instant_pending_set = 0x4004f4d8)
                [!provide]                        PROVIDE (r_LM_ComputePacketType = 0x4002f554)
                [!provide]                        PROVIDE (r_LM_ComputeSniffSubRate = 0x400233ac)
                [!provide]                        PROVIDE (r_lm_debug_key_compare_192 = 0x4004f3a8)
                [!provide]                        PROVIDE (r_lm_debug_key_compare_256 = 0x4004f3d0)
                [!provide]                        PROVIDE (r_lm_dhkey_calc_init = 0x40013234)
                [!provide]                        PROVIDE (r_lm_dhkey_compare = 0x400132d8)
                [!provide]                        PROVIDE (r_lm_dut_mode_en_get = 0x4004f3ec)
                [!provide]                        PROVIDE (r_LM_ExtractMaxEncKeySize = 0x4001aca4)
                [!provide]                        PROVIDE (r_lm_f1 = 0x40012bb8)
                [!provide]                        PROVIDE (r_lm_f2 = 0x40012cfc)
                [!provide]                        PROVIDE (r_lm_f3 = 0x40013050)
                [!provide]                        PROVIDE (r_lm_g = 0x40012f90)
                [!provide]                        PROVIDE (r_LM_GetAFHSwitchInstant = 0x4002f86c)
                [!provide]                        PROVIDE (r_lm_get_auth_en = 0x4004f1ac)
                [!provide]                        PROVIDE (r_lm_get_common_pkt_types = 0x4002fa1c)
                [!provide]                        PROVIDE (r_LM_GetConnectionAcceptTimeout = 0x4004f1f4)
                [!provide]                        PROVIDE (r_LM_GetFeature = 0x4002f924)
                [!provide]                        PROVIDE (r_LM_GetLinkTimeout = 0x400233ec)
                [!provide]                        PROVIDE (r_LM_GetLocalNameSeg = 0x4004f200)
                [!provide]                        PROVIDE (r_lm_get_loopback_mode = 0x4004f248)
                [!provide]                        PROVIDE (r_LM_GetMasterEncKeySize = 0x4001b29c)
                [!provide]                        PROVIDE (r_LM_GetMasterEncRand = 0x4001b288)
                [!provide]                        PROVIDE (r_LM_GetMasterKey = 0x4001b260)
                [!provide]                        PROVIDE (r_LM_GetMasterKeyRand = 0x4001b274)
                [!provide]                        PROVIDE (r_lm_get_min_sync_intv = 0x400517a8)
                [!provide]                        PROVIDE (r_lm_get_nb_acl = 0x4004ef9c)
                [!provide]                        PROVIDE (r_lm_get_nb_sync_link = 0x4005179c)
                [!provide]                        PROVIDE (r_lm_get_nonce = 0x400131c4)
                [!provide]                        PROVIDE (r_lm_get_oob_local_commit = 0x4004f374)
                [!provide]                        PROVIDE (r_lm_get_oob_local_data_192 = 0x4004f2d4)
                [!provide]                        PROVIDE (r_lm_get_oob_local_data_256 = 0x4004f318)
                [!provide]                        PROVIDE (r_LM_GetPINType = 0x4004f1e8)
                [!provide]                        PROVIDE (r_lm_get_priv_key_192 = 0x4004f278)
                [!provide]                        PROVIDE (r_lm_get_priv_key_256 = 0x4004f2b8)
                [!provide]                        PROVIDE (r_lm_get_pub_key_192 = 0x4004f258)
                [!provide]                        PROVIDE (r_lm_get_pub_key_256 = 0x4004f298)
                [!provide]                        PROVIDE (r_LM_GetQoSParam = 0x4002f6e0)
                [!provide]                        PROVIDE (r_lm_get_sec_con_host_supp = 0x4004f1d4)
                [!provide]                        PROVIDE (r_LM_GetSniffSubratingParam = 0x4002325c)
                [!provide]                        PROVIDE (r_lm_get_sp_en = 0x4004f1c0)
                [!provide]                        PROVIDE (r_LM_GetSwitchInstant = 0x4002f7f8)
                [!provide]                        PROVIDE (r_lm_get_synchdl = 0x4005175c)
                [!provide]                        PROVIDE (r_lm_get_sync_param = 0x400503b4)
                [!provide]                        PROVIDE (r_lm_init = 0x4004ed34)
                [!provide]                        PROVIDE (r_lm_init_sync = 0x400512d8)
                [!provide]                        PROVIDE (r_lm_is_acl_con = 0x4004f47c)
                [!provide]                        PROVIDE (r_lm_is_acl_con_role = 0x4004f49c)
                [!provide]                        PROVIDE (r_lm_is_clk_adj_ack_pending = 0x4004f4e8)
                [!provide]                        PROVIDE (r_lm_is_clk_adj_instant_pending = 0x4004f4c8)
                [!provide]                        PROVIDE (r_lm_local_ext_fr_configured = 0x4004f540)
                [!provide]                        PROVIDE (r_lm_look_for_stored_link_key = 0x4002f948)
                [!provide]                        PROVIDE (r_lm_look_for_sync = 0x40051774)
                [!provide]                        PROVIDE (r_lm_lt_addr_alloc = 0x4004ef1c)
                [!provide]                        PROVIDE (r_lm_lt_addr_free = 0x4004ef74)
                [!provide]                        PROVIDE (r_lm_lt_addr_reserve = 0x4004ef48)
                [!provide]                        PROVIDE (r_LM_MakeCof = 0x4002f84c)
                [!provide]                        PROVIDE (r_LM_MakeRandVec = 0x400112d8)
                [!provide]                        PROVIDE (r_lm_master_clk_adj_req_handler = 0x40054180)
                [!provide]                        PROVIDE (r_LM_MaxSlot = 0x4002f694)
                [!provide]                        PROVIDE (r_lm_modif_sync = 0x40051578)
                [!provide]                        PROVIDE (r_lm_n_is_zero = 0x40012170)
                [!provide]                        PROVIDE (r_lm_num_clk_adj_ack_pending_set = 0x4004f500)
                [!provide]                        PROVIDE (r_lm_oob_f1 = 0x40012e54)
                [!provide]                        PROVIDE (r_lm_pca_sscan_link_get = 0x4004f560)
                [!provide]                        PROVIDE (r_lm_pca_sscan_link_set = 0x4004f550)
                [!provide]                        PROVIDE (nvds_null_read = 0x400542a0)
                [!provide]                        PROVIDE (nvds_null_write = 0x400542a8)
                [!provide]                        PROVIDE (nvds_null_erase = 0x400542b0)
                [!provide]                        PROVIDE (nvds_read = 0x400542c4)
                [!provide]                        PROVIDE (nvds_write = 0x400542fc)
                [!provide]                        PROVIDE (nvds_erase = 0x40054334)
                [!provide]                        PROVIDE (nvds_init_memory = 0x40054358)
                [!provide]                        PROVIDE (r_lmp_pack = 0x4001135c)
                [!provide]                        PROVIDE (r_lmp_unpack = 0x4001149c)
                [!provide]                        PROVIDE (r_lm_read_features = 0x4004f0d8)
                [!provide]                        PROVIDE (r_LM_RemoveSniff = 0x40023124)
                [!provide]                        PROVIDE (r_LM_RemoveSniffSubrating = 0x400233c4)
                [!provide]                        PROVIDE (r_lm_remove_sync = 0x400517c8)
                [!provide]                        PROVIDE (r_lm_reset_sync = 0x40051304)
                [!provide]                        PROVIDE (r_lm_role_switch_finished = 0x4004f028)
                [!provide]                        PROVIDE (r_lm_role_switch_start = 0x4004efe0)
                [!provide]                        PROVIDE (r_lm_sco_nego_end = 0x40051828)
                [!provide]                        PROVIDE (r_LM_SniffSubrateNegoRequired = 0x40023334)
                [!provide]                        PROVIDE (r_LM_SniffSubratingHlReq = 0x40023154)
                [!provide]                        PROVIDE (r_LM_SniffSubratingPeerReq = 0x400231dc)
                [!provide]                        PROVIDE (r_lm_sp_debug_mode_get = 0x4004f398)
                [!provide]                        PROVIDE (r_lm_sp_n192_convert_wnaf = 0x400123c0)
                [!provide]                        PROVIDE (r_lm_sp_n_one = 0x400123a4)
                [!provide]                        PROVIDE (r_lm_sp_p192_add = 0x40012828)
                [!provide]                        PROVIDE (r_lm_sp_p192_dbl = 0x4001268c)
                [!provide]                        PROVIDE (r_lm_sp_p192_invert = 0x40012b6c)
                [!provide]                        PROVIDE (r_lm_sp_p192_point_jacobian_to_affine = 0x40012468)
                [!provide]                        PROVIDE (r_lm_sp_p192_points_jacobian_to_affine = 0x400124e4)
                [!provide]                        PROVIDE (r_lm_sp_p192_point_to_inf = 0x40012458)
                [!provide]                        PROVIDE (r_lm_sp_pre_compute_points = 0x40012640)
                [!provide]                        PROVIDE (r_lm_sp_sha256_calculate = 0x400121a0)
                [!provide]                        PROVIDE (r_LM_SuppressAclPacket = 0x4002f658)
                [!provide]                        PROVIDE (r_lm_sync_flow_ctrl_en_get = 0x4004f404)
                [!provide]                        PROVIDE (r_LM_UpdateAclEdrPacketType = 0x4002f5d8)
                [!provide]                        PROVIDE (r_LM_UpdateAclPacketType = 0x4002f584)
                [!provide]                        PROVIDE (r_modules_funcs = 0x3ffafd6c)
                [!provide]                        PROVIDE (r_modules_funcs_p = 0x3ffafd68)
                [!provide]                        PROVIDE (r_nvds_del = 0x400544c4)
                [!provide]                        PROVIDE (r_nvds_get = 0x40054488)
                [!provide]                        PROVIDE (r_nvds_init = 0x40054410)
                [!provide]                        PROVIDE (r_nvds_lock = 0x400544fc)
                [!provide]                        PROVIDE (r_nvds_put = 0x40054534)
                [!provide]                        PROVIDE (rom_abs_temp = 0x400054f0)
                [!provide]                        PROVIDE (rom_bb_bss_bw_40_en = 0x4000401c)
                [!provide]                        PROVIDE (rom_bb_bss_cbw40_dig = 0x40003bac)
                [!provide]                        PROVIDE (rom_bb_rx_ht20_cen_bcov_en = 0x40003734)
                [!provide]                        PROVIDE (rom_bb_tx_ht20_cen = 0x40003760)
                [!provide]                        PROVIDE (rom_bb_wdg_test_en = 0x40003b70)
                [!provide]                        PROVIDE (rom_cbw2040_cfg = 0x400040b0)
                [!provide]                        PROVIDE (rom_check_noise_floor = 0x40003c78)
                [!provide]                        PROVIDE (rom_chip_i2c_readReg = 0x40004110)
                [!provide]                        PROVIDE (rom_chip_i2c_writeReg = 0x40004168)
                [!provide]                        PROVIDE (rom_chip_v7_bt_init = 0x40004d8c)
                [!provide]                        PROVIDE (rom_chip_v7_rx_init = 0x40004cec)
                [!provide]                        PROVIDE (rom_chip_v7_rx_rifs_en = 0x40003d90)
                [!provide]                        PROVIDE (rom_chip_v7_tx_init = 0x40004d18)
                [!provide]                        PROVIDE (rom_clk_force_on_vit = 0x40003710)
                [!provide]                        PROVIDE (rom_correct_rf_ana_gain = 0x400062a8)
                [!provide]                        PROVIDE (rom_dc_iq_est = 0x400055c8)
                [!provide]                        PROVIDE (rom_disable_agc = 0x40002fa4)
                [!provide]                        PROVIDE (rom_enable_agc = 0x40002fcc)
                [!provide]                        PROVIDE (rom_en_pwdet = 0x4000506c)
                [!provide]                        PROVIDE (rom_gen_rx_gain_table = 0x40003e3c)
                [!provide]                        PROVIDE (rom_get_data_sat = 0x4000312c)
                [!provide]                        PROVIDE (rom_get_fm_sar_dout = 0x40005204)
                [!provide]                        PROVIDE (rom_get_power_db = 0x40005fc8)
                [!provide]                        PROVIDE (rom_get_pwctrl_correct = 0x400065d4)
                [!provide]                        PROVIDE (rom_get_rfcal_rxiq_data = 0x40005bbc)
                [!provide]                        PROVIDE (rom_get_rf_gain_qdb = 0x40006290)
                [!provide]                        PROVIDE (rom_get_sar_dout = 0x40006564)
                [!provide]                        PROVIDE (rom_i2c_readReg = 0x40004148)
                0x00000000400041c0                PROVIDE (rom_i2c_readReg_Mask = 0x400041c0)
                0x00000000400041a4                PROVIDE (rom_i2c_writeReg = 0x400041a4)
                0x00000000400041fc                PROVIDE (rom_i2c_writeReg_Mask = 0x400041fc)
                [!provide]                        PROVIDE (rom_index_to_txbbgain = 0x40004df8)
                [!provide]                        PROVIDE (rom_iq_est_disable = 0x40005590)
                [!provide]                        PROVIDE (rom_iq_est_enable = 0x40005514)
                [!provide]                        PROVIDE (rom_linear_to_db = 0x40005f64)
                [!provide]                        PROVIDE (rom_loopback_mode_en = 0x400030f8)
                [!provide]                        PROVIDE (rom_meas_tone_pwr_db = 0x40006004)
                [!provide]                        PROVIDE (rom_mhz2ieee = 0x4000404c)
                [!provide]                        PROVIDE (rom_noise_floor_auto_set = 0x40003bdc)
                [!provide]                        PROVIDE (rom_pbus_debugmode = 0x40004458)
                [!provide]                        PROVIDE (rom_pbus_force_mode = 0x40004270)
                [!provide]                        PROVIDE (rom_pbus_force_test = 0x400043c0)
                [!provide]                        PROVIDE (rom_pbus_rd = 0x40004414)
                [!provide]                        PROVIDE (rom_pbus_rd_addr = 0x40004334)
                [!provide]                        PROVIDE (rom_pbus_rd_shift = 0x40004374)
                [!provide]                        PROVIDE (rom_pbus_rx_dco_cal = 0x40005620)
                [!provide]                        PROVIDE (rom_pbus_set_dco = 0x40004638)
                [!provide]                        PROVIDE (rom_pbus_set_rxgain = 0x40004480)
                [!provide]                        PROVIDE (rom_pbus_workmode = 0x4000446c)
                [!provide]                        PROVIDE (rom_pbus_xpd_rx_off = 0x40004508)
                [!provide]                        PROVIDE (rom_pbus_xpd_rx_on = 0x4000453c)
                [!provide]                        PROVIDE (rom_pbus_xpd_tx_off = 0x40004590)
                [!provide]                        PROVIDE (rom_pbus_xpd_tx_on = 0x400045e0)
                [!provide]                        PROVIDE (rom_phy_disable_agc = 0x40002f6c)
                [!provide]                        PROVIDE (rom_phy_disable_cca = 0x40003000)
                [!provide]                        PROVIDE (rom_phy_enable_agc = 0x40002f88)
                [!provide]                        PROVIDE (rom_phy_enable_cca = 0x4000302c)
                [!provide]                        PROVIDE (rom_phy_freq_correct = 0x40004b44)
                [!provide]                        PROVIDE (rom_phyFuns = 0x3ffae0c0)
                [!provide]                        PROVIDE (rom_phy_get_noisefloor = 0x40003c2c)
                [!provide]                        PROVIDE (rom_phy_get_vdd33 = 0x4000642c)
                [!provide]                        PROVIDE (rom_pow_usr = 0x40003044)
                [!provide]                        PROVIDE (rom_read_sar_dout = 0x400051c0)
                [!provide]                        PROVIDE (rom_restart_cal = 0x400046e0)
                [!provide]                        PROVIDE (rom_rfcal_pwrctrl = 0x40006058)
                [!provide]                        PROVIDE (rom_rfcal_rxiq = 0x40005b4c)
                [!provide]                        PROVIDE (rom_rfcal_txcap = 0x40005dec)
                [!provide]                        PROVIDE (rom_rfpll_reset = 0x40004680)
                [!provide]                        PROVIDE (rom_rfpll_set_freq = 0x400047f8)
                [!provide]                        PROVIDE (rom_rtc_mem_backup = 0x40003db4)
                [!provide]                        PROVIDE (rom_rtc_mem_recovery = 0x40003df4)
                [!provide]                        PROVIDE (rom_rx_gain_force = 0x4000351c)
                [!provide]                        PROVIDE (rom_rxiq_cover_mg_mp = 0x40005a68)
                [!provide]                        PROVIDE (rom_rxiq_get_mis = 0x400058e4)
                [!provide]                        PROVIDE (rom_rxiq_set_reg = 0x40005a00)
                [!provide]                        PROVIDE (rom_set_cal_rxdc = 0x400030b8)
                [!provide]                        PROVIDE (rom_set_chan_cal_interp = 0x40005ce0)
                [!provide]                        PROVIDE (rom_set_channel_freq = 0x40004880)
                [!provide]                        PROVIDE (rom_set_loopback_gain = 0x40003060)
                [!provide]                        PROVIDE (rom_set_noise_floor = 0x40003d48)
                [!provide]                        PROVIDE (rom_set_pbus_mem = 0x400031a4)
                [!provide]                        PROVIDE (rom_set_rf_freq_offset = 0x40004ca8)
                [!provide]                        PROVIDE (rom_set_rxclk_en = 0x40003594)
                [!provide]                        PROVIDE (rom_set_txcap_reg = 0x40005d50)
                [!provide]                        PROVIDE (rom_set_txclk_en = 0x40003564)
                [!provide]                        PROVIDE (rom_spur_coef_cfg = 0x40003ac8)
                [!provide]                        PROVIDE (rom_spur_reg_write_one_tone = 0x400037f0)
                [!provide]                        PROVIDE (rom_start_tx_tone = 0x400036b4)
                [!provide]                        PROVIDE (rom_start_tx_tone_step = 0x400035d0)
                [!provide]                        PROVIDE (rom_stop_tx_tone = 0x40003f98)
                [!provide]                        PROVIDE (_rom_store = 0x4000d66c)
                [!provide]                        PROVIDE (_rom_store_table = 0x4000d4f8)
                [!provide]                        PROVIDE (rom_target_power_add_backoff = 0x40006268)
                [!provide]                        PROVIDE (rom_tx_atten_set_interp = 0x400061cc)
                [!provide]                        PROVIDE (rom_txbbgain_to_index = 0x40004dc0)
                [!provide]                        PROVIDE (rom_txcal_work_mode = 0x4000510c)
                [!provide]                        PROVIDE (rom_txdc_cal_init = 0x40004e10)
                [!provide]                        PROVIDE (rom_txdc_cal_v70 = 0x40004ea4)
                [!provide]                        PROVIDE (rom_txiq_cover = 0x4000538c)
                [!provide]                        PROVIDE (rom_txiq_get_mis_pwr = 0x400052dc)
                [!provide]                        PROVIDE (rom_txiq_set_reg = 0x40005154)
                [!provide]                        PROVIDE (rom_tx_pwctrl_bg_init = 0x4000662c)
                [!provide]                        PROVIDE (rom_txtone_linear_pwr = 0x40005290)
                [!provide]                        PROVIDE (rom_wait_rfpll_cal_end = 0x400047a8)
                [!provide]                        PROVIDE (rom_write_gain_mem = 0x4000348c)
                [!provide]                        PROVIDE (rom_write_rfpll_sdm = 0x40004740)
                [!provide]                        PROVIDE (roundup2 = 0x4000ab7c)
                [!provide]                        PROVIDE (r_plf_funcs_p = 0x3ffb8360)
                [!provide]                        PROVIDE (r_rf_rw_bt_init = 0x40054868)
                [!provide]                        PROVIDE (r_rf_rw_init = 0x40054b0c)
                [!provide]                        PROVIDE (r_rf_rw_le_init = 0x400549d0)
                [!provide]                        PROVIDE (r_rwble_activity_ongoing_check = 0x40054d8c)
                [!provide]                        PROVIDE (r_rwble_init = 0x40054bf4)
                [!provide]                        PROVIDE (r_rwble_isr = 0x40054e08)
                [!provide]                        PROVIDE (r_rwble_reset = 0x40054ce8)
                [!provide]                        PROVIDE (r_rwble_sleep_check = 0x40054d78)
                [!provide]                        PROVIDE (r_rwble_version = 0x40054dac)
                [!provide]                        PROVIDE (r_rwbt_init = 0x40055160)
                [!provide]                        PROVIDE (r_rwbt_isr = 0x40055248)
                [!provide]                        PROVIDE (r_rwbt_reset = 0x400551bc)
                [!provide]                        PROVIDE (r_rwbt_sleep_check = 0x4005577c)
                [!provide]                        PROVIDE (r_rwbt_sleep_enter = 0x400557a4)
                [!provide]                        PROVIDE (r_rwbt_sleep_wakeup = 0x400557fc)
                [!provide]                        PROVIDE (r_rwbt_sleep_wakeup_end = 0x400558cc)
                [!provide]                        PROVIDE (r_rwbt_version = 0x4005520c)
                [!provide]                        PROVIDE (r_rwip_assert_err = 0x40055f88)
                [!provide]                        PROVIDE (r_rwip_check_wakeup_boundary = 0x400558fc)
                [!provide]                        PROVIDE (r_rwip_ext_wakeup_enable = 0x40055f3c)
                [!provide]                        PROVIDE (r_rwip_init = 0x4005595c)
                [!provide]                        PROVIDE (r_rwip_pca_clock_dragging_only = 0x40055f48)
                [!provide]                        PROVIDE (r_rwip_prevent_sleep_clear = 0x40055ec8)
                [!provide]                        PROVIDE (r_rwip_prevent_sleep_set = 0x40055e64)
                [!provide]                        PROVIDE (r_rwip_reset = 0x40055ab8)
                [!provide]                        PROVIDE (r_rwip_schedule = 0x40055b38)
                [!provide]                        PROVIDE (r_rwip_sleep = 0x40055b5c)
                [!provide]                        PROVIDE (r_rwip_sleep_enable = 0x40055f30)
                [!provide]                        PROVIDE (r_rwip_version = 0x40055b20)
                [!provide]                        PROVIDE (r_rwip_wakeup = 0x40055dc4)
                [!provide]                        PROVIDE (r_rwip_wakeup_delay_set = 0x40055e4c)
                [!provide]                        PROVIDE (r_rwip_wakeup_end = 0x40055e18)
                [!provide]                        PROVIDE (r_rwip_wlcoex_set = 0x40055f60)
                [!provide]                        PROVIDE (r_SHA_256 = 0x40013a90)
                [!provide]                        PROVIDE (rwip_coex_cfg = 0x3ff9914c)
                [!provide]                        PROVIDE (rwip_priority = 0x3ff99159)
                [!provide]                        PROVIDE (rwip_rf = 0x3ffbdb28)
                [!provide]                        PROVIDE (rwip_rf_p_get = 0x400558f4)
                [!provide]                        PROVIDE (r_XorKey = 0x400112c0)
                [!provide]                        PROVIDE (sha_blk_bits = 0x3ff99290)
                [!provide]                        PROVIDE (sha_blk_bits_bytes = 0x3ff99288)
                [!provide]                        PROVIDE (sha_blk_hash_bytes = 0x3ff9928c)
                [!provide]                        PROVIDE (sig_matrix = 0x3ffae293)
                [!provide]                        PROVIDE (sip_after_tx_complete = 0x4000b358)
                [!provide]                        PROVIDE (sip_alloc_to_host_evt = 0x4000ab9c)
                [!provide]                        PROVIDE (sip_get_ptr = 0x4000b34c)
                [!provide]                        PROVIDE (sip_get_state = 0x4000ae2c)
                [!provide]                        PROVIDE (sip_init_attach = 0x4000ae58)
                [!provide]                        PROVIDE (sip_install_rx_ctrl_cb = 0x4000ae10)
                [!provide]                        PROVIDE (sip_install_rx_data_cb = 0x4000ae20)
                [!provide]                        PROVIDE (sip_is_active = 0x4000b3c0)
                [!provide]                        PROVIDE (sip_post_init = 0x4000aed8)
                [!provide]                        PROVIDE (sip_reclaim_from_host_cmd = 0x4000adbc)
                [!provide]                        PROVIDE (sip_reclaim_tx_data_pkt = 0x4000ad5c)
                [!provide]                        PROVIDE (sip_send = 0x4000af54)
                [!provide]                        PROVIDE (sip_to_host_chain_append = 0x4000aef8)
                [!provide]                        PROVIDE (sip_to_host_evt_send_done = 0x4000ac04)
                [!provide]                        PROVIDE (slc_add_credits = 0x4000baf4)
                [!provide]                        PROVIDE (slc_enable = 0x4000b64c)
                [!provide]                        PROVIDE (slc_from_host_chain_fetch = 0x4000b7e8)
                [!provide]                        PROVIDE (slc_from_host_chain_recycle = 0x4000bb10)
                [!provide]                        PROVIDE (slc_has_pkt_to_host = 0x4000b5fc)
                [!provide]                        PROVIDE (slc_init_attach = 0x4000b918)
                [!provide]                        PROVIDE (slc_init_credit = 0x4000badc)
                [!provide]                        PROVIDE (slc_reattach = 0x4000b62c)
                [!provide]                        PROVIDE (slc_send_to_host_chain = 0x4000b6a0)
                [!provide]                        PROVIDE (slc_set_host_io_max_window = 0x4000b89c)
                [!provide]                        PROVIDE (slc_to_host_chain_recycle = 0x4000b758)
                [!provide]                        PROVIDE (specialModP256 = 0x4001600c)
                [!provide]                        PROVIDE (__stack = 0x3ffe3f20)
                [!provide]                        PROVIDE (__stack_app = 0x3ffe7e30)
                [!provide]                        PROVIDE (_stack_sentry = 0x3ffe1320)
                [!provide]                        PROVIDE (_stack_sentry_app = 0x3ffe5230)
                [!provide]                        PROVIDE (_start = 0x40000704)
                [!provide]                        PROVIDE (start_tb_console = 0x4005a980)
                [!provide]                        PROVIDE (_stat_r = 0x4000bcb4)
                [!provide]                        PROVIDE (_stext = 0x40000560)
                [!provide]                        PROVIDE (SubtractBigHex256 = 0x40015bcc)
                [!provide]                        PROVIDE (SubtractBigHexMod256 = 0x40015e8c)
                [!provide]                        PROVIDE (SubtractBigHexUint32_256 = 0x40015f8c)
                [!provide]                        PROVIDE (SubtractFromSelfBigHex256 = 0x40015c20)
                [!provide]                        PROVIDE (SubtractFromSelfBigHexSign256 = 0x40015dc8)
                [!provide]                        PROVIDE (sw_to_hw = 0x3ffb8d40)
                [!provide]                        PROVIDE (syscall_table_ptr_app = 0x3ffae020)
                [!provide]                        PROVIDE (syscall_table_ptr_pro = 0x3ffae024)
                [!provide]                        PROVIDE (tdefl_compress = 0x400600bc)
                [!provide]                        PROVIDE (tdefl_compress_buffer = 0x400607f4)
                [!provide]                        PROVIDE (tdefl_compress_mem_to_mem = 0x40060900)
                [!provide]                        PROVIDE (tdefl_compress_mem_to_output = 0x400608e0)
                [!provide]                        PROVIDE (tdefl_get_adler32 = 0x400608d8)
                [!provide]                        PROVIDE (tdefl_get_prev_return_status = 0x400608d0)
                [!provide]                        PROVIDE (tdefl_init = 0x40060810)
                [!provide]                        PROVIDE (tdefl_write_image_to_png_file_in_memory = 0x4006091c)
                [!provide]                        PROVIDE (tdefl_write_image_to_png_file_in_memory_ex = 0x40060910)
                [!provide]                        PROVIDE (tinfl_decompress = 0x4005ef30)
                [!provide]                        PROVIDE (tinfl_decompress_mem_to_callback = 0x40060090)
                [!provide]                        PROVIDE (tinfl_decompress_mem_to_mem = 0x40060050)
                [!provide]                        PROVIDE (UartDev = 0x3ffe019c)
                [!provide]                        PROVIDE (user_code_start = 0x3ffe0400)
                [!provide]                        PROVIDE (veryBigHexP256 = 0x3ff9736c)
                [!provide]                        PROVIDE (xthal_bcopy = 0x4000c098)
                [!provide]                        PROVIDE (xthal_copy123 = 0x4000c124)
                [!provide]                        PROVIDE (xthal_get_ccompare = 0x4000c078)
                [!provide]                        PROVIDE (xthal_get_ccount = 0x4000c050)
                [!provide]                        PROVIDE (xthal_get_interrupt = 0x4000c1e4)
                [!provide]                        PROVIDE (xthal_get_intread = 0x4000c1e4)
                [!provide]                        PROVIDE (Xthal_intlevel = 0x3ff9c2b4)
                [!provide]                        PROVIDE (xthal_memcpy = 0x4000c0bc)
                [!provide]                        PROVIDE (xthal_set_ccompare = 0x4000c058)
                0x000000004000c1ec                PROVIDE (xthal_set_intclear = 0x4000c1ec)
                [!provide]                        PROVIDE (_xtos_set_intlevel = 0x4000bfdc)
                0x000000003ffe01e0                PROVIDE (g_ticks_per_us_pro = 0x3ffe01e0)
                [!provide]                        PROVIDE (g_ticks_per_us_app = 0x3ffe40f0)
                0x0000000040063238                PROVIDE (esp_rom_spiflash_config_param = 0x40063238)
                0x00000000400621b0                PROVIDE (esp_rom_spiflash_read_user_cmd = 0x400621b0)
                0x0000000040062e60                PROVIDE (esp_rom_spiflash_write_encrypted_disable = 0x40062e60)
                0x0000000040062df4                PROVIDE (esp_rom_spiflash_write_encrypted_enable = 0x40062df4)
                0x0000000040062e1c                PROVIDE (esp_rom_spiflash_prepare_encrypted_data = 0x40062e1c)
                0x0000000040061ddc                PROVIDE (esp_rom_spiflash_select_qio_pins = 0x40061ddc)
                [!provide]                        PROVIDE (esp_rom_spiflash_attach = 0x40062a6c)
                0x0000000040062bc8                PROVIDE (esp_rom_spiflash_config_clk = 0x40062bc8)
                0x000000003ffae270                PROVIDE (g_rom_spiflash_chip = 0x3ffae270)
                [!provide]                        PROVIDE (SPI_write_enable = 0x40062320)
                [!provide]                        PROVIDE (hci_le_rd_rem_used_feats_cmd_handler = 0x400417b4)
                [!provide]                        PROVIDE (llcp_length_req_handler = 0x40043808)
                [!provide]                        PROVIDE (llcp_unknown_rsp_handler = 0x40043ba8)
                [!provide]                        PROVIDE (llcp_channel_map_req_handler = 0x4004291c)
                [!provide]                        PROVIDE (llcp_con_up_req_handler = 0x400426f0)
                [!provide]                        PROVIDE (FilePacketSendDeflatedReqMsgProc = 0x40008b24)
                [!provide]                        PROVIDE (FilePacketSendReqMsgProc = 0x40008860)
                [!provide]                        PROVIDE (FlashDwnLdDeflatedStartMsgProc = 0x40008ad8)
                [!provide]                        PROVIDE (FlashDwnLdParamCfgMsgProc = 0x4000891c)
                [!provide]                        PROVIDE (FlashDwnLdStartMsgProc = 0x40008820)
                [!provide]                        PROVIDE (FlashDwnLdStopDeflatedReqMsgProc = 0x40008c18)
                [!provide]                        PROVIDE (FlashDwnLdStopReqMsgProc = 0x400088ec)
                [!provide]                        PROVIDE (MemDwnLdStartMsgProc = 0x40008948)
                [!provide]                        PROVIDE (MemDwnLdStopReqMsgProc = 0x400089dc)
                [!provide]                        PROVIDE (MemPacketSendReqMsgProc = 0x40008978)
                [!provide]                        PROVIDE (uart_baudrate_detect = 0x40009034)
                [!provide]                        PROVIDE (uart_buff_switch = 0x400093c0)
                [!provide]                        PROVIDE (UartConnCheck = 0x40008738)
                [!provide]                        PROVIDE (UartConnectProc = 0x40008a04)
                [!provide]                        PROVIDE (UartDwnLdProc = 0x40008ce8)
                [!provide]                        PROVIDE (UartRegReadProc = 0x40008a58)
                [!provide]                        PROVIDE (UartRegWriteProc = 0x40008a14)
                [!provide]                        PROVIDE (UartSetBaudProc = 0x40008aac)
                [!provide]                        PROVIDE (UartSpiAttachProc = 0x40008a6c)
                [!provide]                        PROVIDE (UartSpiReadProc = 0x40008a80)
                [!provide]                        PROVIDE (VerifyFlashMd5Proc = 0x40008c44)
                [!provide]                        PROVIDE (GetUartDevice = 0x40009598)
                [!provide]                        PROVIDE (RcvMsg = 0x4000954c)
                [!provide]                        PROVIDE (SendMsg = 0x40009384)
                [!provide]                        PROVIDE (UartGetCmdLn = 0x40009564)
                [!provide]                        PROVIDE (UartRxString = 0x400092fc)
                [!provide]                        PROVIDE (Uart_Init = 0x40009120)
                [!provide]                        PROVIDE (recv_packet = 0x40009424)
                [!provide]                        PROVIDE (send_packet = 0x40009340)
                [!provide]                        PROVIDE (uartAttach = 0x40008fd0)
                [!provide]                        PROVIDE (uart_div_modify = 0x400090cc)
                [!provide]                        PROVIDE (uart_rx_intr_handler = 0x40008f4c)
                [!provide]                        PROVIDE (uart_rx_one_char = 0x400092d0)
                [!provide]                        PROVIDE (uart_rx_one_char_block = 0x400092a4)
                [!provide]                        PROVIDE (uart_rx_readbuff = 0x40009394)
                [!provide]                        PROVIDE (uart_tx_flush = 0x40009258)
                0x0000000040009200                PROVIDE (uart_tx_one_char = 0x40009200)
                [!provide]                        PROVIDE (uart_tx_one_char2 = 0x4000922c)
                [!provide]                        PROVIDE (uart_tx_switch = 0x40009028)
                [!provide]                        PROVIDE (gpio_output_set = 0x40009b24)
                [!provide]                        PROVIDE (gpio_output_set_high = 0x40009b5c)
                [!provide]                        PROVIDE (gpio_input_get = 0x40009b88)
                [!provide]                        PROVIDE (gpio_input_get_high = 0x40009b9c)
                0x0000000040009edc                PROVIDE (gpio_matrix_in = 0x40009edc)
                0x0000000040009f0c                PROVIDE (gpio_matrix_out = 0x40009f0c)
                0x0000000040009fdc                PROVIDE (gpio_pad_select_gpio = 0x40009fdc)
                [!provide]                        PROVIDE (gpio_pad_set_drv = 0x4000a11c)
                [!provide]                        PROVIDE (gpio_pad_pulldown = 0x4000a348)
                0x000000004000a22c                PROVIDE (gpio_pad_pullup = 0x4000a22c)
                [!provide]                        PROVIDE (gpio_pad_hold = 0x4000a734)
                [!provide]                        PROVIDE (gpio_pad_unhold = 0x4000a484)
                [!provide]                        PROVIDE (ets_aes_crypt = 0x4005c9b8)
                [!provide]                        PROVIDE (ets_aes_disable = 0x4005c8f8)
                [!provide]                        PROVIDE (ets_aes_enable = 0x4005c8cc)
                [!provide]                        PROVIDE (ets_aes_set_endian = 0x4005c928)
                [!provide]                        PROVIDE (ets_aes_setkey_dec = 0x4005c994)
                [!provide]                        PROVIDE (ets_aes_setkey_enc = 0x4005c97c)
                [!provide]                        PROVIDE (ets_bigint_disable = 0x4005c4e0)
                [!provide]                        PROVIDE (ets_bigint_enable = 0x4005c498)
                [!provide]                        PROVIDE (ets_bigint_mod_mult_getz = 0x4005c818)
                [!provide]                        PROVIDE (ets_bigint_mod_mult_prepare = 0x4005c7b4)
                [!provide]                        PROVIDE (ets_bigint_mod_power_getz = 0x4005c614)
                [!provide]                        PROVIDE (ets_bigint_mod_power_prepare = 0x4005c54c)
                [!provide]                        PROVIDE (ets_bigint_montgomery_mult_getz = 0x4005c7a4)
                [!provide]                        PROVIDE (ets_bigint_montgomery_mult_prepare = 0x4005c6fc)
                [!provide]                        PROVIDE (ets_bigint_mult_getz = 0x4005c6e8)
                [!provide]                        PROVIDE (ets_bigint_mult_prepare = 0x4005c630)
                [!provide]                        PROVIDE (ets_bigint_wait_finish = 0x4005c520)
                [!provide]                        PROVIDE (ets_post = 0x4000673c)
                [!provide]                        PROVIDE (ets_run = 0x400066bc)
                [!provide]                        PROVIDE (ets_set_idle_cb = 0x40006674)
                [!provide]                        PROVIDE (ets_task = 0x40006688)
                [!provide]                        PROVIDE (ets_efuse_get_8M_clock = 0x40008710)
                0x0000000040008658                PROVIDE (ets_efuse_get_spiconfig = 0x40008658)
                [!provide]                        PROVIDE (ets_efuse_program_op = 0x40008628)
                [!provide]                        PROVIDE (ets_efuse_read_op = 0x40008600)
                [!provide]                        PROVIDE (ets_intr_lock = 0x400067b0)
                [!provide]                        PROVIDE (ets_intr_unlock = 0x400067c4)
                [!provide]                        PROVIDE (ets_isr_attach = 0x400067ec)
                [!provide]                        PROVIDE (ets_waiti0 = 0x400067d8)
                0x000000004000681c                PROVIDE (intr_matrix_set = 0x4000681c)
                [!provide]                        PROVIDE (check_pos = 0x400068b8)
                0x000000004000689c                PROVIDE (ets_set_appcpu_boot_addr = 0x4000689c)
                [!provide]                        PROVIDE (ets_set_startup_callback = 0x4000688c)
                [!provide]                        PROVIDE (ets_set_user_start = 0x4000687c)
                [!provide]                        PROVIDE (ets_unpack_flash_code = 0x40007018)
                [!provide]                        PROVIDE (ets_unpack_flash_code_legacy = 0x4000694c)
                [!provide]                        PROVIDE (rom_main = 0x400076c4)
                [!provide]                        PROVIDE (ets_write_char_uart = 0x40007cf8)
                0x0000000040007d18                PROVIDE (ets_install_putc1 = 0x40007d18)
                0x0000000040007d38                PROVIDE (ets_install_putc2 = 0x40007d38)
                0x0000000040007d28                PROVIDE (ets_install_uart_printf = 0x40007d28)
                0x0000000040007d54                PROVIDE (ets_printf = 0x40007d54)
                [!provide]                        PROVIDE (rtc_boot_control = 0x4000821c)
                0x00000000400081d4                PROVIDE (rtc_get_reset_reason = 0x400081d4)
                [!provide]                        PROVIDE (rtc_get_wakeup_cause = 0x400081f4)
                [!provide]                        PROVIDE (rtc_select_apb_bridge = 0x40008288)
                0x0000000040008208                PROVIDE (set_rtc_memory_crc = 0x40008208)
                [!provide]                        PROVIDE (software_reset = 0x4000824c)
                0x0000000040008264                PROVIDE (software_reset_cpu = 0x40008264)
                [!provide]                        PROVIDE (ets_secure_boot_check = 0x4005cb40)
                [!provide]                        PROVIDE (ets_secure_boot_check_finish = 0x4005cc04)
                [!provide]                        PROVIDE (ets_secure_boot_check_start = 0x4005cbcc)
                [!provide]                        PROVIDE (ets_secure_boot_finish = 0x4005ca84)
                [!provide]                        PROVIDE (ets_secure_boot_hash = 0x4005cad4)
                [!provide]                        PROVIDE (ets_secure_boot_obtain = 0x4005cb14)
                [!provide]                        PROVIDE (ets_secure_boot_rd_abstract = 0x4005cba8)
                [!provide]                        PROVIDE (ets_secure_boot_rd_iv = 0x4005cb84)
                [!provide]                        PROVIDE (ets_secure_boot_start = 0x4005ca34)
                [!provide]                        PROVIDE (ets_sha_disable = 0x4005c0a8)
                [!provide]                        PROVIDE (ets_sha_enable = 0x4005c07c)
                [!provide]                        PROVIDE (ets_sha_finish = 0x4005c104)
                [!provide]                        PROVIDE (ets_sha_init = 0x4005c0d4)
                [!provide]                        PROVIDE (ets_sha_update = 0x4005c2a0)
                0x0000000040008534                PROVIDE (ets_delay_us = 0x40008534)
                0x000000004000855c                PROVIDE (ets_get_cpu_frequency = 0x4000855c)
                0x0000000040008588                PROVIDE (ets_get_detected_xtal_freq = 0x40008588)
                [!provide]                        PROVIDE (ets_get_xtal_scale = 0x4000856c)
                0x0000000040008550                PROVIDE (ets_update_cpu_frequency_rom = 0x40008550)
                [!provide]                        PROVIDE (hci_tl_env = 0x3ffb8154)
                [!provide]                        PROVIDE (ld_acl_env = 0x3ffb8258)
                [!provide]                        PROVIDE (ea_env = 0x3ffb80ec)
                [!provide]                        PROVIDE (lc_sco_data_path_config = 0x3ffb81f8)
                [!provide]                        PROVIDE (lc_sco_env = 0x3ffb81fc)
                [!provide]                        PROVIDE (ld_active_ch_map = 0x3ffb8334)
                [!provide]                        PROVIDE (ld_bcst_acl_env = 0x3ffb8274)
                [!provide]                        PROVIDE (ld_csb_rx_env = 0x3ffb8278)
                [!provide]                        PROVIDE (ld_csb_tx_env = 0x3ffb827c)
                [!provide]                        PROVIDE (ld_env = 0x3ffb9510)
                [!provide]                        PROVIDE (ld_fm_env = 0x3ffb8284)
                [!provide]                        PROVIDE (ld_inq_env = 0x3ffb82e4)
                [!provide]                        PROVIDE (ld_iscan_env = 0x3ffb82e8)
                [!provide]                        PROVIDE (ld_page_env = 0x3ffb82f0)
                [!provide]                        PROVIDE (ld_pca_env = 0x3ffb82f4)
                [!provide]                        PROVIDE (ld_pscan_env = 0x3ffb8308)
                [!provide]                        PROVIDE (ld_sched_env = 0x3ffb830c)
                [!provide]                        PROVIDE (ld_sched_params = 0x3ffb96c0)
                [!provide]                        PROVIDE (ld_sco_env = 0x3ffb824c)
                [!provide]                        PROVIDE (ld_sscan_env = 0x3ffb832c)
                [!provide]                        PROVIDE (ld_strain_env = 0x3ffb8330)
                [!provide]                        PROVIDE (LM_Sniff = 0x3ffb8230)
                [!provide]                        PROVIDE (LM_SniffSubRate = 0x3ffb8214)
                [!provide]                        PROVIDE (prbs_64bytes = 0x3ff98992)
                [!provide]                        PROVIDE (nvds_env = 0x3ffb8364)
                [!provide]                        PROVIDE (nvds_magic_number = 0x3ff9912a)
                [!provide]                        PROVIDE (TASK_DESC_LLD = 0x3ff98b58)
                [!provide]                        PROVIDE (ld_acl_clk_isr = 0x40030cf8)
                [!provide]                        PROVIDE (ld_acl_evt_canceled_cbk = 0x40033944)
                [!provide]                        PROVIDE (ld_acl_evt_stop_cbk = 0x40033870)
                [!provide]                        PROVIDE (ld_acl_evt_start_cbk = 0x40030ab0)
                [!provide]                        PROVIDE (ld_acl_test_mode_update = 0x40032050)
                [!provide]                        PROVIDE (ld_acl_resched = 0x40033814)
                [!provide]                        PROVIDE (ld_acl_rx_isr = 0x40033aa8)
                [!provide]                        PROVIDE (lc_acl_disc_ind_handler = 0x4002f270)
                [!provide]                        PROVIDE (lc_pca_sscan_start_req_handler = 0x40029b34)
                [!provide]                        PROVIDE (lmp_feats_req_ext_handler = 0x4002ccb0)
                [!provide]                        PROVIDE (ld_pscan_em_init = 0x4003e5e8)
                [!provide]                        PROVIDE (ld_acl_rsw_start = 0x40032e90)
                [!provide]                        PROVIDE (ld_acl_sniff_enter = 0x40031244)
                [!provide]                        PROVIDE (ld_acl_sniff_trans_sched = 0x40033734)
                [!provide]                        PROVIDE (lc_pwr_decr_ind_handler = 0x4002859c)
                [!provide]                        PROVIDE (lc_pwr_incr_ind_handler = 0x400284a8)
                [!provide]                        PROVIDE (lc_pwr_max_ind_handler = 0x40028690)
                0x000000004005cfec                PROVIDE (esp_rom_crc32_le = crc32_le)
                [!provide]                        PROVIDE (esp_rom_crc16_le = crc16_le)
                [!provide]                        PROVIDE (esp_rom_crc8_le = crc8_le)
                [!provide]                        PROVIDE (esp_rom_crc32_be = crc32_be)
                [!provide]                        PROVIDE (esp_rom_crc16_be = crc16_be)
                [!provide]                        PROVIDE (esp_rom_crc8_be = crc8_be)
                0x0000000040009fdc                PROVIDE (esp_rom_gpio_pad_select_gpio = gpio_pad_select_gpio)
                0x000000004000a22c                PROVIDE (esp_rom_gpio_pad_pullup_only = gpio_pad_pullup)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_set_drv = gpio_pad_set_drv)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_unhold = gpio_pad_unhold)
                0x0000000040009edc                PROVIDE (esp_rom_gpio_connect_in_signal = gpio_matrix_in)
                0x0000000040009f0c                PROVIDE (esp_rom_gpio_connect_out_signal = gpio_matrix_out)
                0x000000004005d144                PROVIDE (esp_rom_efuse_mac_address_crc8 = esp_crc8)
                0x0000000040008658                PROVIDE (esp_rom_efuse_get_flash_gpio_info = ets_efuse_get_spiconfig)
                [!provide]                        PROVIDE (esp_rom_efuse_is_secure_boot_enabled = ets_efuse_secure_boot_enabled)
                [!provide]                        PROVIDE (esp_rom_uart_flush_tx = uart_tx_flush)
                0x0000000040009200                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_tx_wait_idle = uart_tx_wait_idle)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_string = UartRxString)
                [!provide]                        PROVIDE (esp_rom_uart_set_as_console = uart_tx_switch)
                [!provide]                        PROVIDE (esp_rom_uart_putc = ets_write_char_uart)
                [!provide]                        PROVIDE (esp_rom_uart_switch_buffer = uart_buff_switch)
                [!provide]                        PROVIDE (esp_rom_md5_init = 0x4005da7c)
                [!provide]                        PROVIDE (esp_rom_md5_update = 0x4005da9c)
                [!provide]                        PROVIDE (esp_rom_md5_final = 0x4005db1c)
                [!provide]                        PROVIDE (esp_rom_software_reset_system = software_reset)
                0x0000000040008264                PROVIDE (esp_rom_software_reset_cpu = software_reset_cpu)
                0x0000000040007d54                PROVIDE (esp_rom_printf = ets_printf)
                0x0000000040008534                PROVIDE (esp_rom_delay_us = ets_delay_us)
                0x0000000040007d28                PROVIDE (esp_rom_install_uart_printf = ets_install_uart_printf)
                0x00000000400081d4                PROVIDE (esp_rom_get_reset_reason = rtc_get_reset_reason)
                0x000000004000681c                PROVIDE (esp_rom_route_intr_matrix = intr_matrix_set)
                0x000000004000855c                PROVIDE (esp_rom_get_cpu_ticks_per_us = ets_get_cpu_frequency)
                [!provide]                        PROVIDE (esp_rom_spiflash_set_bp = esp_rom_spiflash_lock)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_enable = SPI_write_enable)
                [!provide]                        PROVIDE (esp_rom_regi2c_read = rom_i2c_readReg)
                0x00000000400041c0                PROVIDE (esp_rom_regi2c_read_mask = rom_i2c_readReg_Mask)
                0x00000000400041a4                PROVIDE (esp_rom_regi2c_write = rom_i2c_writeReg)
                0x00000000400041fc                PROVIDE (esp_rom_regi2c_write_mask = rom_i2c_writeReg_Mask)
                0x000000004006387c                __absvdi2 = 0x4006387c
                0x0000000040063868                __absvsi2 = 0x40063868
                0x0000000040002590                __adddf3 = 0x40002590
                0x00000000400020e8                __addsf3 = 0x400020e8
                0x0000000040002cbc                __addvdi3 = 0x40002cbc
                0x0000000040002c98                __addvsi3 = 0x40002c98
                0x000000004000c818                __ashldi3 = 0x4000c818
                0x000000004000c830                __ashrdi3 = 0x4000c830
                0x0000000040064b08                __bswapdi2 = 0x40064b08
                0x0000000040064ae0                __bswapsi2 = 0x40064ae0
                0x0000000040064b7c                __clrsbdi2 = 0x40064b7c
                0x0000000040064b64                __clrsbsi2 = 0x40064b64
                0x000000004000ca50                __clzdi2 = 0x4000ca50
                0x000000004000c7e8                __clzsi2 = 0x4000c7e8
                0x0000000040063820                __cmpdi2 = 0x40063820
                0x000000004000ca64                __ctzdi2 = 0x4000ca64
                0x000000004000c7f0                __ctzsi2 = 0x4000c7f0
                0x00000000400645a4                __divdc3 = 0x400645a4
                0x0000000040002954                __divdf3 = 0x40002954
                0x000000004000ca84                __divdi3 = 0x4000ca84
                0x000000004000c7b8                __divsi3 = 0x4000c7b8
                0x00000000400636a8                __eqdf2 = 0x400636a8
                0x0000000040063374                __eqsf2 = 0x40063374
                0x0000000040002c34                __extendsfdf2 = 0x40002c34
                0x000000004000ca2c                __ffsdi2 = 0x4000ca2c
                0x000000004000c804                __ffssi2 = 0x4000c804
                0x0000000040002ac4                __fixdfdi = 0x40002ac4
                0x0000000040002a78                __fixdfsi = 0x40002a78
                0x000000004000244c                __fixsfdi = 0x4000244c
                0x000000004000240c                __fixsfsi = 0x4000240c
                0x0000000040002b30                __fixunsdfsi = 0x40002b30
                0x0000000040002504                __fixunssfdi = 0x40002504
                0x00000000400024ac                __fixunssfsi = 0x400024ac
                0x000000004000c988                __floatdidf = 0x4000c988
                0x000000004000c8c0                __floatdisf = 0x4000c8c0
                0x000000004000c944                __floatsidf = 0x4000c944
                0x000000004000c870                __floatsisf = 0x4000c870
                0x000000004000c978                __floatundidf = 0x4000c978
                0x000000004000c8b0                __floatundisf = 0x4000c8b0
                0x000000004000c938                __floatunsidf = 0x4000c938
                0x000000004000c864                __floatunsisf = 0x4000c864
                0x0000000040064a70                __gcc_bcmp = 0x40064a70
                0x0000000040063768                __gedf2 = 0x40063768
                0x000000004006340c                __gesf2 = 0x4006340c
                0x00000000400636dc                __gtdf2 = 0x400636dc
                0x00000000400633a0                __gtsf2 = 0x400633a0
                0x0000000040063704                __ledf2 = 0x40063704
                0x00000000400633c0                __lesf2 = 0x400633c0
                0x000000004000c84c                __lshrdi3 = 0x4000c84c
                0x0000000040063790                __ltdf2 = 0x40063790
                0x000000004006342c                __ltsf2 = 0x4006342c
                0x000000004000cd4c                __moddi3 = 0x4000cd4c
                0x000000004000c7c0                __modsi3 = 0x4000c7c0
                0x0000000040063c90                __muldc3 = 0x40063c90
                0x000000004006358c                __muldf3 = 0x4006358c
                0x000000004000c9fc                __muldi3 = 0x4000c9fc
                0x00000000400632c8                __mulsf3 = 0x400632c8
                0x000000004000c7b0                __mulsi3 = 0x4000c7b0
                0x0000000040002d78                __mulvdi3 = 0x40002d78
                0x0000000040002d60                __mulvsi3 = 0x40002d60
                0x00000000400636a8                __nedf2 = 0x400636a8
                0x00000000400634a0                __negdf2 = 0x400634a0
                0x000000004000ca14                __negdi2 = 0x4000ca14
                0x00000000400020c0                __negsf2 = 0x400020c0
                0x0000000040002e98                __negvdi2 = 0x40002e98
                0x0000000040002e78                __negvsi2 = 0x40002e78
                0x0000000040063374                __nesf2 = 0x40063374
                0x000000003ff96544                __nsau_data = 0x3ff96544
                0x0000000040002f3c                __paritysi2 = 0x40002f3c
                0x000000003ff96544                __popcount_tab = 0x3ff96544
                0x0000000040002ef8                __popcountdi2 = 0x40002ef8
                0x0000000040002ed0                __popcountsi2 = 0x40002ed0
                0x00000000400638e4                __powidf2 = 0x400638e4
                0x00000000400026e4                __subdf3 = 0x400026e4
                0x00000000400021d0                __subsf3 = 0x400021d0
                0x0000000040002d20                __subvdi3 = 0x40002d20
                0x0000000040002cf8                __subvsi3 = 0x40002cf8
                0x0000000040002b90                __truncdfsf2 = 0x40002b90
                0x0000000040063840                __ucmpdi2 = 0x40063840
                0x0000000040064bec                __udiv_w_sdiv = 0x40064bec
                0x000000004000cff8                __udivdi3 = 0x4000cff8
                0x0000000040064bf4                __udivmoddi4 = 0x40064bf4
                0x000000004000c7c8                __udivsi3 = 0x4000c7c8
                0x000000004000d280                __umoddi3 = 0x4000d280
                0x000000004000c7d0                __umodsi3 = 0x4000c7d0
                0x000000004000c7d8                __umulsidi3 = 0x4000c7d8
                0x00000000400637f4                __unorddf2 = 0x400637f4
                0x0000000040063478                __unordsf2 = 0x40063478
                0x000000003ff96354                _ctype_ = 0x3ff96354
                0x000000003ff96350                __ctype_ptr__ = 0x3ff96350
                0x000000003ffae0b4                environ = 0x3ffae0b4
                0x000000003ffae0b0                _global_impure_ptr = 0x3ffae0b0
                0x000000003ff96530                __mb_cur_max = 0x3ff96530
                0x000000003ff96458                __sf_fake_stderr = 0x3ff96458
                0x000000003ff96498                __sf_fake_stdin = 0x3ff96498
                0x000000003ff96478                __sf_fake_stdout = 0x3ff96478
                0x000000003ff96540                __wctomb = 0x3ff96540
                0x000000003ffae0ac                __sfp_lock = 0x3ffae0ac
                0x000000003ffae0a8                __sinit_lock = 0x3ffae0a8
                0x000000003ffae0b8                __env_lock_object = 0x3ffae0b8
                0x000000003ffae080                __tz_lock_object = 0x3ffae080
                0x0000000040056340                abs = 0x40056340
                0x000000004000c1f4                bzero = 0x4000c1f4
                0x0000000040000e8c                creat = 0x40000e8c
                0x0000000040056348                div = 0x40056348
                0x00000000400020ac                fclose = 0x400020ac
                0x0000000040059394                fflush = 0x40059394
                0x0000000040058ea8                fputwc = 0x40058ea8
                0x0000000040000f04                isalnum = 0x40000f04
                0x0000000040000f18                isalpha = 0x40000f18
                0x000000004000c20c                isascii = 0x4000c20c
                0x0000000040000f2c                isblank = 0x40000f2c
                0x0000000040000f50                iscntrl = 0x40000f50
                0x0000000040000f64                isdigit = 0x40000f64
                0x0000000040000f94                isgraph = 0x40000f94
                0x0000000040000f78                islower = 0x40000f78
                0x0000000040000fa8                isprint = 0x40000fa8
                0x0000000040000fc0                ispunct = 0x40000fc0
                0x0000000040000fd4                isspace = 0x40000fd4
                0x0000000040000fe8                isupper = 0x40000fe8
                0x00000000400566b4                itoa = 0x400566b4
                0x0000000040056370                labs = 0x40056370
                0x0000000040056378                ldiv = 0x40056378
                0x00000000400562cc                longjmp = 0x400562cc
                0x000000004000c220                memccpy = 0x4000c220
                0x000000004000c244                memchr = 0x4000c244
                0x000000004000c260                memcmp = 0x4000c260
                0x000000004000c2c8                memcpy = 0x4000c2c8
                0x000000004000c3c0                memmove = 0x4000c3c0
                0x000000004000c400                memrchr = 0x4000c400
                0x000000004000c44c                memset = 0x4000c44c
                0x0000000040056424                qsort = 0x40056424
                0x0000000040056268                setjmp = 0x40056268
                0x00000000400011cc                strcasecmp = 0x400011cc
                0x0000000040001210                strcasestr = 0x40001210
                0x000000004000c518                strcat = 0x4000c518
                0x000000004000c53c                strchr = 0x4000c53c
                0x0000000040001274                strcmp = 0x40001274
                0x0000000040001398                strcoll = 0x40001398
                0x00000000400013ac                strcpy = 0x400013ac
                0x000000004000c558                strcspn = 0x4000c558
                0x0000000040001470                strlcat = 0x40001470
                0x000000004000c584                strlcpy = 0x4000c584
                0x00000000400014c0                strlen = 0x400014c0
                0x0000000040001524                strlwr = 0x40001524
                0x0000000040001550                strncasecmp = 0x40001550
                0x000000004000c5c4                strncat = 0x4000c5c4
                0x000000004000c5f4                strncmp = 0x4000c5f4
                0x00000000400015d4                strncpy = 0x400015d4
                0x000000004000c628                strnlen = 0x4000c628
                0x0000000040001708                strrchr = 0x40001708
                0x0000000040001734                strsep = 0x40001734
                0x000000004000c648                strspn = 0x4000c648
                0x000000004000c674                strstr = 0x4000c674
                0x000000004000c70c                strtok_r = 0x4000c70c
                0x000000004000174c                strupr = 0x4000174c
                0x000000004000c720                toascii = 0x4000c720
                0x0000000040001868                tolower = 0x40001868
                0x0000000040001884                toupper = 0x40001884
                0x00000000400590f4                ungetc = 0x400590f4
                0x0000000040056258                utoa = 0x40056258
                0x0000000040058920                wcrtomb = 0x40058920
                0x00000000400588d8                _wcrtomb_r = 0x400588d8
                [!provide]                        PROVIDE (atoi = 0x400566c4)
                [!provide]                        PROVIDE (_atoi_r = 0x400566d4)
                [!provide]                        PROVIDE (atol = 0x400566ec)
                [!provide]                        PROVIDE (_atol_r = 0x400566fc)
                [!provide]                        PROVIDE (rand = 0x40001058)
                [!provide]                        PROVIDE (rand_r = 0x400010d4)
                [!provide]                        PROVIDE (srand = 0x40001004)
                [!provide]                        PROVIDE (strdup = 0x4000143c)
                [!provide]                        PROVIDE (_strdup_r = 0x40001450)
                [!provide]                        PROVIDE (strndup = 0x400016b0)
                [!provide]                        PROVIDE (_strndup_r = 0x400016c4)
                [!provide]                        PROVIDE (strtol = 0x4005681c)
                [!provide]                        PROVIDE (_strtol_r = 0x40056714)
                [!provide]                        PROVIDE (strtoul = 0x4005692c)
                [!provide]                        PROVIDE (_strtoul_r = 0x40056834)
                [!provide]                        PROVIDE (__ascii_wctomb = 0x40058ef0)
                [!provide]                        PROVIDE (_cleanup = 0x40001df8)
                [!provide]                        PROVIDE (_cleanup_r = 0x40001d48)
                [!provide]                        PROVIDE (__dummy_lock = 0x4000c728)
                [!provide]                        PROVIDE (__dummy_lock_try = 0x4000c730)
                [!provide]                        PROVIDE (__env_lock = 0x40001fd4)
                [!provide]                        PROVIDE (__env_unlock = 0x40001fe0)
                [!provide]                        PROVIDE (_fclose_r = 0x40001fec)
                [!provide]                        PROVIDE (_fflush_r = 0x40059320)
                [!provide]                        PROVIDE (_findenv_r = 0x40001f44)
                [!provide]                        PROVIDE (__fp_lock_all = 0x40001f1c)
                [!provide]                        PROVIDE (__fp_unlock_all = 0x40001f30)
                [!provide]                        PROVIDE (__fputwc = 0x40058da0)
                [!provide]                        PROVIDE (_fputwc_r = 0x40058e4c)
                [!provide]                        PROVIDE (_fwalk = 0x4000c738)
                [!provide]                        PROVIDE (_fwalk_reent = 0x4000c770)
                [!provide]                        PROVIDE (_getenv_r = 0x40001fbc)
                [!provide]                        PROVIDE (__itoa = 0x40056678)
                [!provide]                        PROVIDE (__sccl = 0x4000c498)
                [!provide]                        PROVIDE (__sclose = 0x400011b8)
                [!provide]                        PROVIDE (__seofread = 0x40001148)
                [!provide]                        PROVIDE (__sflush_r = 0x400591e0)
                [!provide]                        PROVIDE (__sfmoreglue = 0x40001dc8)
                [!provide]                        PROVIDE (__sfp = 0x40001e90)
                [!provide]                        PROVIDE (__sfp_lock_acquire = 0x40001e08)
                [!provide]                        PROVIDE (__sfp_lock_release = 0x40001e14)
                [!provide]                        PROVIDE (__sinit = 0x40001e38)
                [!provide]                        PROVIDE (__sinit_lock_acquire = 0x40001e20)
                [!provide]                        PROVIDE (__sinit_lock_release = 0x40001e2c)
                [!provide]                        PROVIDE (__sread = 0x40001118)
                [!provide]                        PROVIDE (__sseek = 0x40001184)
                [!provide]                        PROVIDE (__strtok_r = 0x4000c6a8)
                [!provide]                        PROVIDE (__submore = 0x40058f3c)
                [!provide]                        PROVIDE (__swbuf = 0x40058cb4)
                [!provide]                        PROVIDE (__swbuf_r = 0x40058bec)
                [!provide]                        PROVIDE (__swrite = 0x40001150)
                [!provide]                        PROVIDE (_ungetc_r = 0x40058fa0)
                [!provide]                        PROVIDE (__utoa = 0x400561f0)
                [!provide]                        PROVIDE (_wctomb_r = 0x40058f14)
                0x000000003ff40000                PROVIDE (UART0 = 0x3ff40000)
                0x000000003ff42000                PROVIDE (SPI1 = 0x3ff42000)
                0x000000003ff43000                PROVIDE (SPI0 = 0x3ff43000)
                0x000000003ff44000                PROVIDE (GPIO = 0x3ff44000)
                [!provide]                        PROVIDE (SDM = 0x3ff44f00)
                0x000000003ff48000                PROVIDE (RTCCNTL = 0x3ff48000)
                [!provide]                        PROVIDE (RTCIO = 0x3ff48400)
                0x000000003ff48800                PROVIDE (SENS = 0x3ff48800)
                [!provide]                        PROVIDE (HINF = 0x3ff4b000)
                [!provide]                        PROVIDE (UHCI1 = 0x3ff4c000)
                [!provide]                        PROVIDE (I2S0 = 0x3ff4f000)
                0x000000003ff50000                PROVIDE (UART1 = 0x3ff50000)
                [!provide]                        PROVIDE (I2C0 = 0x3ff53000)
                [!provide]                        PROVIDE (UHCI0 = 0x3ff54000)
                [!provide]                        PROVIDE (HOST = 0x3ff55000)
                [!provide]                        PROVIDE (RMT = 0x3ff56000)
                [!provide]                        PROVIDE (RMTMEM = 0x3ff56800)
                [!provide]                        PROVIDE (PCNT = 0x3ff57000)
                [!provide]                        PROVIDE (SLC = 0x3ff58000)
                [!provide]                        PROVIDE (LEDC = 0x3ff59000)
                0x000000003ff5a000                PROVIDE (EFUSE = 0x3ff5a000)
                [!provide]                        PROVIDE (MCPWM0 = 0x3ff5e000)
                0x000000003ff5f000                PROVIDE (TIMERG0 = 0x3ff5f000)
                0x000000003ff60000                PROVIDE (TIMERG1 = 0x3ff60000)
                0x000000003ff64000                PROVIDE (SPI2 = 0x3ff64000)
                0x000000003ff65000                PROVIDE (SPI3 = 0x3ff65000)
                [!provide]                        PROVIDE (SYSCON = 0x3ff66000)
                [!provide]                        PROVIDE (I2C1 = 0x3ff67000)
                [!provide]                        PROVIDE (SDMMC = 0x3ff68000)
                [!provide]                        PROVIDE (EMAC_DMA = 0x3ff69000)
                [!provide]                        PROVIDE (EMAC_EXT = 0x3ff69800)
                [!provide]                        PROVIDE (EMAC_MAC = 0x3ff6a000)
                [!provide]                        PROVIDE (TWAI = 0x3ff6b000)
                [!provide]                        PROVIDE (MCPWM1 = 0x3ff6c000)
                [!provide]                        PROVIDE (I2S1 = 0x3ff6d000)
                0x000000003ff6e000                PROVIDE (UART2 = 0x3ff6e000)
OUTPUT(zephyr/zephyr_pre0.elf elf32-xtensa-le)
